<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>分享我用的英语学习资料</title>
      <link href="/2022/06/13/resources/englishiResources/"/>
      <url>/2022/06/13/resources/englishiResources/</url>
      
        <content type="html"><![CDATA[<ul><li>单词篇</li></ul><p>根据词源词根记忆单词，涵盖了考研5500必备词汇，干货满满。</p><p>「杨亮亮解单词英语学习必备5500词」<a href="https://www.aliyundrive.com/s/TCALXP441Pi">https://www.aliyundrive.com/s/TCALXP441Pi</a> </p><p>提取码: 关注微信公众号“恒星同学的铺子”，发送关键字“单词”获得提取码</p>]]></content>
      
      
      <categories>
          
          <category> Learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研英语 </tag>
            
            <tag> 单词 </tag>
            
            <tag> 考研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语单词UNIT14</title>
      <link href="/2022/05/05/English/wordsUnit14/"/>
      <url>/2022/05/05/English/wordsUnit14/</url>
      
        <content type="html"><![CDATA[<h1 id="UNIT-14"><a href="#UNIT-14" class="headerlink" title="UNIT 14"></a>UNIT 14</h1><ol start="104"><li><p>advocate n.辩护者，拥护者 拥护，提倡</p><p>（ad-去 + -voc-说 + v.后缀-ate。去说–&gt;提倡）</p><blockquote><p>He advocates the return of capital punishment.</p><p>他提倡重启死刑。</p></blockquote><p>voice n.声音；意见，发言权</p><p>vocal adj.声音的；歌唱的 n.声乐作品，演唱部分</p><p>vocabulary n.词汇，词汇量；词汇表（指的是你能说多少话–&gt; 词汇量）</p><p>vocation n.职业；召唤；天命；才能（上天的召唤）</p><hr><p>拓展词汇</p><p>vocational adj.职业的，行业的</p><blockquote><p> Vocational College 职业学校（专修某种技能的）</p></blockquote><hr><p>evoke vt.唤起（回忆、感情等）；引起</p><p>（e-向外 + vok&#x3D;voc说话 + e。唤出)</p><p>provoke vt.挑动；激发；招惹</p><p>（pro-向前。站在前面叫嚣）</p><p>vowel n.元音，元音字母</p><hr><p>拓展词汇</p><p>consonant n.辅音；辅音字母</p><hr><p>vote n.投票，表决（早期指向神起誓，后指投票）</p><p>veto n.否决权 vt.否决（助记：不投票）</p><p><strong>这两个可以对比着记忆</strong></p><p>poll n.民意测验；(pl.)政治选举 v.获得。。。选票</p><p>（①古英语中表示：人头–&gt;民意测验<strong>②助记：pull拉–&gt;拉选票</strong>）</p><blockquote><p>poll tax 人头税</p></blockquote><p>devote v.(to)奉献，致力</p><p>(de-彻底 + vot说 + e。发下宏愿)</p></li><li><p>aerial adj.（在或来自）空中的，航空的 n.天线</p><p>（aer&#x3D;air空气 + adj后缀-ial）</p><p>air n.空气 vt.（使）通风；晾干</p><p>aeroplane n.（airplane）飞机</p><p>soar vi.高飞，翱翔；飞涨；高耸</p><p>（s&#x3D;ex向外、向上 + oar&#x3D;air空中。飞上高空)</p><p>artery n.动脉；干线，要道</p><p>（ar&#x3D;air + t + ery。“气管”–&gt;人死后没有血液的动脉）</p></li><li><p>affair n.事务；事情；事</p><p>（af-&#x3D;ad-去 + fair&#x3D;fact做。去做的事–&gt;事务）</p><p>fact n.事实，实际（做了的事）</p><p>factor n.因素，要素（做事情的必要条件）</p><p>factory n.工厂（做事情的地方）</p><p>faculty n.才能；官能；学院，系</p><p>（①做事能力；②某方面突出的做事能力–&gt;大学的系）</p><p>facility n.设备，设施；天资，才能</p><p>（facil(e)容易做的 + ity。简化做事难度的工具）</p><p>facilitate v.使变得（更）容易；使便利</p><p>affect vt.影响；（疾病）侵袭；感动</p><p>（af-&#x3D;ad-去 + fect做。去做–&gt;影响）</p><p>affection n.爱，喜爱；爱慕之情；感情（对你有影响的人你才会喜欢）</p><p>effect n.结果；效果 vt.招致；达到</p><p>effective adj.有效的，生效的</p><p>efficient adj.有效的，效率高的；有能力的（突出效率高）</p><p>effciency n.效率；功效</p><p>defect n.缺点；瑕疵</p><p>（de-&#x3D;dis-相反。没有做好–&gt;过失）</p><blockquote><p>She suffers from a sight&#x2F;speech defect.</p><p>她深受视觉&#x2F;语言缺陷的折磨。</p></blockquote><p>deficit n.赤字，逆差；亏损</p><p>deficiency n.缺乏，不足</p><p>proficiency n.(in)熟练，精通(pro-向前。向前做–&gt;做好–&gt;熟练)</p><p>profit n.利润 v.(bu,from)得利，获利</p><p>profitable adj.有利可图的</p><p>improve v.改善，改进</p><p>（im-&#x3D;in-进入 + -prov-&#x3D;profit做好 + e。进入做好的局面–&gt;改善）</p><p>improvement n.改进，进步</p><p>benefit n.利益，好处 v.有益于</p><p>beneficial adj.(to)有利的</p><p>bonus n.奖金，红利</p><p>infect vt.传染，感染</p><p>（in-进入。进入并起作用）</p><p>infectious adj.传染的，传染性的</p><p>perfect adj.完善的；完全的 <strong>v.使完美</strong></p><p>perfection n.完美</p><p>suffice v.充足，足够 vt.（食物等）使。。满足</p><p>（suf&#x3D;sub自下而上。下方源源不断做出来–&gt;充足）</p><p>sufficient adj.足够的，充分的(比enough拘谨、正式)</p><p>sacrifice n.牺牲，祭品 v.牺牲，献出</p><p>（sacred + fic + e。神圣的做法）</p><p>sacred adj.神圣的；宗教的；庄严的</p><p>saint n.圣人，基督教徒；(S-或St. 用于人、地名前)圣</p></li></ol><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li><p><input disabled="" type="checkbox"> 区分vacation和vocation</p></li><li><p><input disabled="" type="checkbox"> 区分affect和effect</p></li><li><p><input disabled="" type="checkbox"> deficit和profit是反义词</p></li><li><p><input disabled="" type="checkbox"> deficiency和proficiency是反义词</p></li><li><p><input disabled="" type="checkbox"> 区分profit和benefit</p><blockquote><p>profit是挣钱的利润，benefit是好处，不单单指钱</p></blockquote></li><li><p><input disabled="" type="checkbox"> 区分defect和deficit、defeat</p><blockquote><p>defect （没有做好）缺点、瑕疵<br>deficit    赤字、亏损<br>defeat    （使（对方）做不到、没有功绩）失败</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> Learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研英语 </tag>
            
            <tag> 单词 </tag>
            
            <tag> 考研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语单词UNIT13</title>
      <link href="/2022/05/04/English/wordsUnit13/"/>
      <url>/2022/05/04/English/wordsUnit13/</url>
      
        <content type="html"><![CDATA[<h1 id="unit-13"><a href="#unit-13" class="headerlink" title="unit 13"></a>unit 13</h1><ol start="99"><li><p>adverse adj.不利的，有害的</p><p>（ad-去 + -vers-转 + e。转过去的）</p></li><li><p>advertise vt.公告，公布；为。。。做广告 vi.登广告</p><p>（ad-去 + vert-转 + 动词后缀-ise。去转移大家的注意力–&gt;广告）</p><p>versus prep.(vs)。。。对。。。（在诉讼、比赛中）</p><blockquote><p>A versus B.    A对战B。</p></blockquote><p>anniversary n.周年，周年纪念日（-ann-年 + -i- + -vers-转 + n.后缀-ary。一年又转到这一天–&gt;周年）</p><p>annual adj.每年的，一年生的 n.年刊；一年生植物</p><p>convert v.转换，变换；改变（信仰）;兑换（钱）</p><p>（con-共同 + -vert-转。完全转换）</p><p>conversion n.转换；信仰的改变</p><p>conversely adv.相反地，反过来</p><blockquote><p>You can add the fluid to the powder, or, conversely, the powder to the fluid.</p><p>你可以把液体放入粉末中，反过来，也可以把粉末放入液体中。</p></blockquote><p>conversation n.会话，谈话(互换思想的谈话)</p><p>avert v.防止，避免；转移（目光、注意力等）</p><p>（a-&#x3D;ab-离开 + -vert-转。转开、躲开）</p><p>divert vt.使转向，使改道；转移（注意力）；使娱乐</p><p>（di&#x3D;dis-反方向。①使转向；②从工作中转移注意力–&gt;使娱乐）</p><p>diverse adj.多种多样的，不同的（在一个圆圈上各个方向，四面八方的。各种各样的）</p><p><img src="https://s2.loli.net/2022/05/04/sAODGoRivPky3Uh.png" alt="image-20220504200950685"></p><p>diversion n.转向，转移；解闷；娱乐；牵制</p><p>divorce v.&amp;n.离婚，分离</p><p>invert v.倒置，倒转，颠倒（in-里。里外或上下颠倒）</p><blockquote><p>Invert the bowl onto a plate.</p><p>把碗倒扣在盘子上。</p></blockquote><p>inverse adj.相反的，倒转的，反转的 n.相反之物</p><blockquote><p>A person wealth is often in inverse proportion to their happiness.</p><p>一个人的财富通常和他们的幸福是成反比的。<br>proportion 比例</p></blockquote><p>reverse n.相反；背面 v.颠倒，倒转（re-回。前后或左右颠倒）</p><p>versatile adj.通用的；多才多艺的，多方面的</p><p>（-vers-转 + -atile。可以转向不同角度的，多面手的）</p><blockquote><p>He is a very versatile actor.</p><p>他是一个非常多才多艺的演员。</p></blockquote><p>version n.版本；译本，译文；说法（转变语言）</p><p>verse n.韵文，诗；诗节（暗喻：写韵文如同耕作，从一行转到另一行）</p><hr><p>poem n.诗（pile堆，高高堆起的一行行文字）</p><p>poet n. 诗人</p><p>poetry n. 诗歌</p><p>prose n.散文 adj.散文的（pro-向前 + -(ver)se。直接转向前–&gt;散文）</p><p>wrap v.裹，缠，卷 n.披肩，围巾（同-vers-。卷起来）</p><p>develop v.发展，开发；显现，显影；发育，生长</p><p>（de-&#x3D;dis-反 + -velop-&#x3D;warp卷。摊开–&gt;发展。&#x3D;&#x3D;显现，就是从某个角落展开，变得显眼&#x3D;&#x3D;）</p><blockquote><p>I had the film developed yesterday.</p><p>我昨天把胶片洗了出来。（让胶片显影）</p><p>film本身是胶片的意思，有电影的意思是因为早期的电影是用胶片放映的。</p></blockquote><p>envelope n.信封，信皮；封套</p><p>（en- 进入 + -velop-卷 + e。卷入其中–&gt; 信封）</p><p>worm n.虫，蠕虫(卷起来的虫子)</p><p>wreath n.花环，花圈</p><p>wrench v.猛拧；猛拉；挣脱；扭伤 n.扳手；痛苦，难受（面目扭曲）</p><p>wrinkle n.皱纹 v.起皱，皱眉</p><blockquote><p>Years may wrinkle the skin,but to give up enthusiasm wrinkle the soul.</p><p>岁月悠悠，衰微只及肌肤；而热忱抛却，颓唐必至灵魂。</p><p>岁月可能会让皮肤起皱，但放弃我们的热情，会让灵魂起皱。</p><p>enthusiasm 热情；热忱</p></blockquote><p>wrist n. 腕，腕关节</p><p>wrong adj.错的 adv.错误地 n.错误 v.委屈</p></li><li><p>advice n.劝告，忠告，(医生等的)意见（ad-去 + -vic-&#x3D;-vis-看 + e。去给看法）</p><p>advise vt.忠告，劝告；通知，告知</p></li><li><p>advisable adj.可取的，适当的，明智的</p><p>vision n. 视力，视觉；远见，洞察力；幻想，幻影；想象力</p><p>visible adj.看得见的，明显的，显著的</p><p>invisible adj.看不见的，无形的</p><p>visual adj.看的，看得见的；视觉的</p><blockquote><p>visual effect 视觉特效</p></blockquote><p>visa n.（护照等的）签证；维萨信用卡 vt.签证（看过的、验证过的文件）</p><p>envisage v.想象，设想，展望，正视(最常见的意思)</p><p>（en-里 + vis-&#x3D;face(look) + age。look in the face of 直视）</p><p>revise v.修订，校订；修正，修改</p><p>（re- 再 + vis-看 + -e。再看–&gt;校订)</p><p>supervise v.管理，监督</p><p>video n.视频 adj.电视的视频的</p><p>（vid&#x3D;vis看。对应audio音频）</p><p>evidence n.明显；显著；证据；迹象</p><p>evident adj.明显的，明白的</p><p>provide v.供应，供给</p><p>（pro- 向前 + vid看 + e。看到前方的需求所做的准备–&gt;供应、预防）</p><p>provided conj.倘若，只要，假如（假设你给我了）</p><p>provision n.供应；预备；条款（法律提供的）；(pl.)给养</p><p>prudent adj.谨慎的，稳健的</p><p>（pru-&#x3D;pro-向前 + -ud&#x3D;-vid-看 + ent。有前瞻性的–&gt;谨慎的）</p><p>view n.视野；风景；观察；见解 vt.观察；认为</p><p>scene n.景色，景象</p><p>（通shade覆盖，早期指搭台唱戏的棚子。局部）</p><p>scenery n.风景，舞台布景（整体）</p><p>interview v.&amp;n. 接见，会见；采访；面试</p><p>review v.回顾，复习 n.回顾，复习；评论</p><p>envy v.&amp;n. 羡慕，忌妒(en-&#x3D;in进入 + vy&#x3D;vis看。evil eye邪恶之眼–&gt; 忌妒)但不一定是贬义</p><p>jealous adj.(of)妒忌的，吃醋的；猜疑的，警惕的，唯恐失去</p><p>(jeal&#x3D;keen&#x3D;zeal渴望 + ous。①渴望的–&gt;妒忌的；②想知道的–&gt;猜疑的、警惕的)</p><p>zeal n.热心，热忱，热情</p><blockquote><p>与passion的区别：passion更强烈，激情</p></blockquote><p>survey v.&amp;n. 全面审视，调查；测量图，勘定（sur-super-在上 + vey&#x3D;-vis-看）</p><p>guide n.领路人；指南，导游 v.领路， 指导，支配；管理</p><p>（guid&#x3D;vid 看。带人看–&gt;指南)</p><p>guidance n.引导，指导</p><p>disguise v.&amp;n. 假装，伪装</p><p>（dis-反 + guise&#x3D;vis看。不让看见。）</p><p>mask n.面具，伪装 v.掩饰，化装</p><p>witness n.目击者，证人；证据 v.目击，目睹；作证</p><p>wit n. 智力，才智，智慧（见多识广）</p><blockquote><p>A fall into a pit, a gain in your wit.</p><p>吃一堑长一智。</p><p>pit 坑</p></blockquote><p>wise adj.有智慧的，聪明的</p><p>wisdom n. 智慧，明智；名言，格言</p><p>clever adj.聪明的，伶俐的</p><p>（分开–&gt;与笨人分开。通cliff悬崖–&gt;裂开的地方）生活中形容小孩更多一些</p><p>smart adj.聪明的；整洁漂亮的 v.剧痛，刺疼</p><p>（古英语中是，咬伤–&gt;一针见血的）生活中形容成人更多一些</p><p>cunning adj&amp;n.狡猾的，狡诈的（cun&#x3D;know知道）</p><p>cly adj.狡猾的，偷摸的</p><p>shrewd adj.机灵的，敏锐的，精明的</p><p>（来自shrew鼩鼱，通share切、割，指鼩鼱长相奇特的嘴）</p><p><img src="https://s2.loli.net/2022/05/05/pF8JC3WiHGbdmuP.png" alt="image-20220505012230696"></p></li></ol><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>今天的重点</p><ul><li><input disabled="" type="checkbox"> 区分diverse、divert这些单词因为他们很相像</li><li><input disabled="" type="checkbox"> develop的显影的意思是怎么来的</li><li><input disabled="" type="checkbox"> wrench的各种意思</li><li><input disabled="" type="checkbox"> 区分各个聪明的意思</li></ul>]]></content>
      
      
      <categories>
          
          <category> Learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研英语 </tag>
            
            <tag> 单词 </tag>
            
            <tag> 考研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语单词UNIT12</title>
      <link href="/2022/05/03/English/wordsUnit12/"/>
      <url>/2022/05/03/English/wordsUnit12/</url>
      
        <content type="html"><![CDATA[<h1 id="unit-12"><a href="#unit-12" class="headerlink" title="unit 12"></a>unit 12</h1><ol start="87"><li><p>admission n.允许进入；承认；入场费</p><blockquote><p>ad-朝 + miss-发送 + -ion</p><ul><li>准许进入</li><li>准许意见进入-&gt;承认</li></ul></blockquote><p>生活中常用来表示准许进入的意思，例如下图中的牌子，字面意思是“大学准许进入的办公室”，中文译为”招生办”</p></li></ol><p><img src="https://s2.loli.net/2022/05/03/NTOlRSh3LZE6WD1.png" alt="image-20220503154245114"></p><ol start="87"><li><p>admit vt.承认，供认；准许。。。进入</p><p>permit v.许可，允许 n.许可证，牌照</p><p>（per-每 + -mit- &#x3D; miss- 发。全权放手，每一步都交给你。–&gt; 官方许可）</p><p>permission n.允许同意</p><p>allow vt.允许，准许；给予</p><p>（①al-&#x3D;ad-去—+laud称赞、赞同-&gt;允许 ②通allocate分配–&gt; 给予）</p><p>allowance n.补贴，津贴；零用钱；减价，折扣；允许</p><blockquote><p>trade-in 以旧换新</p><p>a trade-in allowance 以旧换新减价</p></blockquote><h3 id="“允许”-三个单词的对比"><a href="#“允许”-三个单词的对比" class="headerlink" title="“允许” 三个单词的对比"></a>“允许” 三个单词的对比</h3><p>admit 侧重“准许进入、承认”</p><p>permit侧重“官方许可”</p><p>allow侧重“允许”</p><hr><p>mission n.使命，任务；使团，代表团</p><blockquote><p>这个词最早指的是早期教会派遣到国外传教的任务，miss就是送出去的意思</p></blockquote><p>missionary adj.教会的，传教（士） n.传教士</p><p>miss n.小姐 v.思念，未击中，错过</p><p>（①mistress的简写；②错过，通move改变位置，因错过而思念）</p><p>missing adj.漏掉的，失去的，失踪的</p><p>missile n.导弹，发射物</p><p>（miss-发送 + 名词后缀 -ile）</p><p>mess n.混乱，混杂，脏乱 v.弄脏，弄乱</p><p>（早期指定量的“派发食物”，后指失误“大杂烩”–&gt;混乱）</p><p>message</p><p>messenger n.送信者，使者（构词比较passenger通过的人–&gt;乘客）</p><p>emit vt.发出，散发；放射</p><p>（e-向外 + -mit-&#x3D;-miss-发送）</p><p>omit v.省略，删去；遗漏</p><p>（o-&#x3D;ob- 相反 + -mit-。不发–&gt; 省略）</p><p>submit v.(to)使服从，屈服；（to）呈送，提交</p><p>（sub- 在下、自下而上 + -mit-发。①地位放低–&gt;屈服；②呈上）</p><p>dismiss v.免职，解雇，开除</p><p>（dis-离开。送走–&gt;解雇）</p><p>transmit vt.传输；传播 vi.发射信号；传播</p><p>（trans-穿过。一头发到另一头）</p><p>transmission n.播送，发射；传送</p><p>commit v. 把。。交托给；致力于；犯（错误）</p><p>（com-共同。①全部发出去–&gt;交托；致力于 ②精力放在错事上）</p><p>commitee n. 委员会，全体委员（为完成一定任务而设立的专门组织）</p><p>commission vt.委任，委托 n.委员会；委任，委托（书），代办；佣金，手续费</p><p>intermittent adj. 间歇的，断断续续的</p><p>（inter-在中间 + -mit- 发送 + 辅音双写t引导adj后缀-ent。间歇发生的）</p><p>promise v.保证，答应；有。。。可能 n.承诺；希望，出息</p><p>（pro- 向前 + -mis- 发 + -e。说未来的话，把话说在前面）</p><p>promising adj.有希望的，有前途的</p><hr><h3 id="对比其他的“发誓”"><a href="#对比其他的“发誓”" class="headerlink" title="对比其他的“发誓”"></a>对比其他的“发誓”</h3><p>pledge n. 誓约；保证 v. 发誓；保证  <strong>语气更加正式，一般不会用</strong></p><p>oath n. 誓言 （助记：oral 口头的，口头宣誓）</p><hr><p>compromise n.妥协，折衷 vi. 妥协 vt. 危及，放弃（原则等）</p><p>（com- 共同 + promise承诺。折衷）</p><p>premise n. 前提 （pl.复数)房屋连地基 v. 提论，预述，假定（这个意思很少见）</p><p>（pre-在前 + -mis- 发送 + -e。①提前的论述–&gt;前提。②契约或遗嘱中预先提到的物质归属–&gt;房屋）</p></li><li><p>adore vt.崇拜，敬慕，爱慕；非常喜欢（这个意思更常用）</p><p>（ad-去 + -or-说 + -e。去说，原指赞美神）</p><p>adorable adj.讨人喜欢的</p><p>oral adj. 口头的</p><hr><p>拓展的词汇，不在考研大纲中，但很好记</p><p>orate vi.演说，演讲</p><p>orator n. 演说者</p><hr></li><li><p>advent n.（重要事件等的）到来，来临</p><p>（ad-朝 + -vent-走。走来）</p><p>adventure n.冒险，奇遇（来临的机遇–&gt;冒险）</p><p>venture v.冒险，拼；大胆说 n.冒险事业，拼，闯（adventure 变体）</p><blockquote><p>eg：She hardly dared to venture an opinon.她很难大胆说出自己的想法。</p></blockquote><p>event n.事件，事情（e-出 + -vent-走。衍生出来的结果–&gt;事件)</p><ul><li>incident 小事</li><li>event 大事</li></ul><p>eventually adv.终于，最后（eventually强调结果；finally最终，强调步骤）</p><p>invent v.发明，创造；（衍生出的意思）捏造，虚构</p><p>（in-进入 + -vent走。走入，找到–&gt;发明）</p><p>invention n.发明，创造，发明物</p><p>inventory n.详细目录，存货，总量（找到货物的清单）</p><p>prevent v. (from)预防，防止，阻止，妨碍（pre-在前。先走一步–&gt;预防）</p><p>convenience n.便利，方便；(pl.)便利设备</p><p>（con-一起 + -ven走 + -i- + -ence。走到一起–&gt;便利）</p><p>convenient adj.(to)便利的，方便的</p><blockquote><p>eg: What time would it be convenient for you to come over?什么时间你方便来找我呢？</p></blockquote><p>convention n.大会，会议；习俗，惯例，常规；公约，协定(走到一起–&gt;开大会)</p><p>conventional adj.惯例的，常规的(大家都这么”走”)</p><hr><h3 id="“惯例”单词区分"><a href="#“惯例”单词区分" class="headerlink" title="“惯例”单词区分"></a>“惯例”单词区分</h3><p>tradition n.传统；惯例</p><p>（tra-&#x3D;trans-穿过 + -dit-&#x3D;-do-给 + n.后缀ion。穿过岁月流传下来的）</p><p>conventional adj.惯例的，常规的（大家都这么走–&gt;惯例的）（思想保守的)</p><p>customary adj.习惯的，惯例的</p><p>（cus-&#x3D;com-来 + -tom&#x3D;self自己。到自己身上的行为）（个人或群体平常习惯的）</p><hr><p>revenue n.财政收入，税收</p><p>（re-回 + ven&#x3D;vent走 + -ue。走回来–&gt;收回来的钱–&gt;税收）</p><ul><li><p><img src="https://s2.loli.net/2022/05/03/1CeaUPd4AO8uVwj.png" alt="image-20220503212715258"></p><p>大名鼎鼎的IRS：interal revenue service国家税务局</p></li></ul><p>avenue n.大街，林荫路；（比喻）途径，渠道（a-&#x3D;ad-去 + ven走 + ue）</p><p>intervene v.(in)干涉，干预；插入，介入（inter-在中间 + ven走 + e。走入其中–&gt;干涉）</p><ul><li><p>注意与interrupt打断区分，比如下面的例句</p><blockquote><p>The President intervened personally in the crisis.</p><p>总统亲自介入到这次危机中。</p></blockquote></li><li><p>介入了，但是没有打断，而是带领你继续走下去</p></li></ul><p>advance n.前进，预付（提前付款） vi.前进，进展 vt.促进，推进</p><p>（助记：ad-朝 + vanc-&#x3D;vent走 + -e。朝前走–&gt;前进）</p><p>advanced adj.超前的，先进的；高级的；开明的；前进的</p><blockquote><p>advanced course 高级课程</p></blockquote><p>advantage   n.优点，长处</p></li><li><p>adverb n.副词 adj.副词的（ad-朝 + verb动词。修饰动词的词）</p><p>verb n.动词（来自word）</p><p>word n.词语；言辞</p><p>verbal  adj.用言辞的，用文字的；口头的；动词的</p><ul><li>与oral不同的是verbal表示文字表达的意思，其中包含了用嘴说，而oral专门指用嘴说</li></ul><blockquote><p>The job applicant must have good verbal skills.</p></blockquote><p>irony n. 反话，讽刺，讽刺的事（iron&#x3D;word说话 + n.后缀-y。<strong>助记：爱惹你</strong>）</p><p>​    adj.铁的；含铁的（刚好长得一样而已，词源上没有关系）</p><blockquote><ul><li>iron man 钢铁侠</li></ul><p>The irony (of it) is that the new <a href="https://dictionary.cambridge.org/zhs/%E8%AF%8D%E5%85%B8/%E8%8B%B1%E8%AF%AD-%E6%B1%89%E8%AF%AD-%E7%AE%80%E4%BD%93/tax">tax</a> <a href="https://dictionary.cambridge.org/zhs/%E8%AF%8D%E5%85%B8/%E8%8B%B1%E8%AF%AD-%E6%B1%89%E8%AF%AD-%E7%AE%80%E4%BD%93/system">system</a> <em>will</em> <a href="https://dictionary.cambridge.org/zhs/%E8%AF%8D%E5%85%B8/%E8%8B%B1%E8%AF%AD-%E6%B1%89%E8%AF%AD-%E7%AE%80%E4%BD%93/burden">burden</a> <em>those it was</em> <a href="https://dictionary.cambridge.org/zhs/%E8%AF%8D%E5%85%B8/%E8%8B%B1%E8%AF%AD-%E6%B1%89%E8%AF%AD-%E7%AE%80%E4%BD%93/intended">intended</a> <em>to</em> <a href="https://dictionary.cambridge.org/zhs/%E8%AF%8D%E5%85%B8/%E8%8B%B1%E8%AF%AD-%E6%B1%89%E8%AF%AD-%E7%AE%80%E4%BD%93/help">help</a>.</p><p>具讽刺意味的是，新的税收制度反而将使该制度本打算要帮助的人背上沉重负担。</p></blockquote><p>sarcastic adj.讽刺的（来自sarcasm挖苦。助记：sarc&#x3D;scar伤疤 + -asm。用语言让人遍体鳞伤）</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研英语 </tag>
            
            <tag> 单词 </tag>
            
            <tag> 考研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>与婷宝的一天</title>
      <link href="/2022/05/03/dailyLife/2022_05_03/"/>
      <url>/2022/05/03/dailyLife/2022_05_03/</url>
      
        <content type="html"><![CDATA[<h1 id="久违的出门逛街"><a href="#久违的出门逛街" class="headerlink" title="久违的出门逛街"></a>久违的出门逛街</h1><p>也不知道为什么，我们学校的领导似乎担心的事情太多，以至于到了现在政策还是很严厉。其他的学校已经可以随意点外卖了，我们学院却不能。</p><p>这次五一假期终于有了请假的政策，却也只能出去一天。不过总好过没有，正好婷宝也刚刚隔离完，我们就一起出去玩了。</p><h1 id="理发"><a href="#理发" class="headerlink" title="理发"></a>理发</h1><p>没错，我已经3个月没有理发了，头发已经到了快爆炸的边缘，婷宝笑我像eason（确实有点像就是了），所以第一件事就是去理发，去了我们这里五星步行街的一家【TY造型】。</p><p>因为节日人多，等了好久才有理发师理，不过最后的效果还是不错。</p><h1 id="吃火锅"><a href="#吃火锅" class="headerlink" title="吃火锅"></a>吃火锅</h1><p>这才是今天的重头戏，说实话，我已经很久没吃火锅了，本来过年期间在重庆呆了一段时间，说要在那里吃。结果因为我做了兼职（什么狗屁兼职，全职！！！），完全没有时间，那段时间休息都很少，回到房间就只能睡觉，好好学习还是很重要的，这下子才真正理解了生活的苦。</p><p><img src="https://s2.loli.net/2022/05/03/AxVphdESeJZTMXG.jpg" alt="IMG_20220502_181519"></p><p><img src="https://s2.loli.net/2022/05/03/TFBEaMN6osI8Xh7.jpg" alt="IMG_20220502_160920"></p><p>这么久没有吃，这次吃的还是很过瘾，婷宝吃的肉少，我就吃了更多的肉[哈哈哈]。</p><p>其实最主要的也不是吃肉啦，重要的是</p><blockquote><p>终于和婷宝团聚！！！然后亲了个爽[少儿不宜]</p></blockquote><p>今天的英语例句</p><blockquote><p>Through play,children acted out in miniature the drama of adult life.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> 吃喝玩乐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语单词UNIT6</title>
      <link href="/2022/05/02/English/wordsUnit06/"/>
      <url>/2022/05/02/English/wordsUnit06/</url>
      
        <content type="html"><![CDATA[<h1 id="UNIT-6"><a href="#UNIT-6" class="headerlink" title="UNIT 6"></a>UNIT 6</h1><h2 id="accompany相关"><a href="#accompany相关" class="headerlink" title="accompany相关"></a>accompany相关</h2><p>accompany [ə’kʌmpəni] v. 陪伴，陪同；伴随，和……一起发生，伴奏（ac-&#x3D;ad-朝 + company 陪伴。）</p><p>company [‘kʌmp(ə)nɪ] n. 公司；陪伴；宾客；连（队），（一）群，队，伙（com-共同+-pan-&#x3D;food食物 + 名词后缀-y。早期指“分食面包的人”）</p><p>companion [kəm’pænjən] n. 同伴，共事者；伴侣（compan+-ion,陪伴的人）</p><h2 id="accomplish相关"><a href="#accomplish相关" class="headerlink" title="accomplish相关"></a>accomplish相关</h2><p>accomplish [ə’kʌmpliʃ] v. 实现（计划等）；达到（目的）；完成（任务）               （ac-&#x3D;ad-朝 + com-共同 + -pli-&#x3D;fill填充 + 动词后缀-(i)sh。去全部填满）（接抽象名词，如任务、使命等）</p><p>ﬁll [fɪl] v. (with)填满，充满</p><p>full [ful] adj. （of）满的，充满的 adj.&amp;adv.完全，充分</p><p>fulfill [ful’fil] v. （fulfil）完成，履行、实践，满足（“填满”。突出“履行、实践”）</p><hr><p>complete [kem’pli:t] adj.完全的，圆满的v.完成，结束，使完美（com-共同+plete&#x3D;fill填充。全都填满t1圆满的） （接具体名词，如建筑物、工程等）</p><p>ﬁnish [‘ﬁniʃ] n. 完成；结束；磨光v.完成；结束；用完；毁掉（可表贬义。磨光：给器具上最后一道漆）</p><p>complement [‘kɔmplimənt] n. 补足物，船上的定员；补语 vt.补充，补足（来自complete）</p><p>compliment [‘kɔmplimənt] n.(pl.)问候，致意 n.&amp;v.称赞，恭维（完成社交的最后环节）</p><p>complimentary [kɔmplɪ’ment(ə)rɪ] adj. 赠送的，免费的</p><blockquote><p> complimentary breakfast 免费早餐</p></blockquote><p>implement [‘impliment] n.(pl.)工具，器具  v. 贯彻，实现（im-&#x3D;in-进入。①参与完成一件事&#x3D;&gt;工具；②填入其中&#x3D;&gt;贯彻）</p><blockquote><p>garden&#x2F;household&#x2F;agricultural implements</p><p>园艺用具&#x2F;家用工具&#x2F;农具（名词）</p><p> The changes to the national health system will be implemented next year.</p><p>国民医疗保健制度的改革将于明年实施（动词）</p></blockquote><p>plus [plʌs] prep. 加上 conj.和，而且 adj. 正的，加的 n. 加号，正号（plus&#x3D;fill。补充&#x3D;&gt;加上。add为动词，plus为介词）</p><p>plural [‘pluərəl] adj. 复数的 n.复数</p><p>surplus [‘sə:pləs] n. n.过剩，剩余；余款，余额adj.过剩的，剩余的（sur-&#x3D;super在上。超出的部分&#x3D;&gt;过剩）</p><p>⭐（surplus突出“资源过剩”；excessive突出“超出范围”：excessive exercise过度锻炼）</p><hr><p>single [‘siŋɡl] adj.单人的；单一的，单个的；未婚的，独身的</p><p>singular [‘siŋɡjulə] adj. 非凡的，卓越的；单数的</p><p>plenty [‘plenti] n.丰富，大量（plent&#x3D;plete&#x3D;fill填充）</p><p>plentiful [‘plentiful] adj.富裕的，丰富的</p><p>folk [feuk] n. 人们；民族；亲属 adj. 民间的（fol&#x3D;fill填充。拥挤的人群&#x3D;&gt;人们）</p><p>vulgar [‘vʌlɡə] adj. 粗俗的，庸俗的，本土的，通俗的，普通的（vulg&#x3D;folk。平民百姓的世俗思想&#x3D;&gt;庸俗的）</p><p>ﬂock [ﬂɔk] n.（一）群，（禽，畜等的）群；大量 v. 群集，成群</p><h2 id="finish相关"><a href="#finish相关" class="headerlink" title="finish相关"></a>finish相关</h2><p>finish [‘finiʃ] n. 完成；结束；磨光v.完成；结束；用完；毁掉（fin-终结、界限 + 动词后缀-ish）</p><p>ﬁnite [‘fainait] adj. 有限的；[数]有穷的，限定的（有终点的）</p><blockquote><p>The world’s resources are finite.</p><p>世界的资源是有限的。</p></blockquote><p>inﬁnite [‘inﬁnət] adj. 无限的，无穷的 n. 无限（没有终点的）</p><p>final [‘fainl] adj.最终的，决定性的 n. 结局；决赛；期末考试</p><p>ﬁnally [‘fainəli] adv. 最后，最终；决定性地</p><p>ﬁnance [‘faɪnæns] n. 财政，金融 v.为……提供资金（fin-+名词后缀-ance。终结债务）</p><p>ﬁnancial [fai’nænʃəl] adj. 财政的，金融的</p><p>ﬁne [fain] adj. 晴朗的，美好的，细致的v.&amp;n.罚金，罚款（①好到头的&#x3D;&gt;美好的；②结束过错&#x3D;&gt;罚款）</p><p>reﬁne [ri’fain] v. 精炼，精制，提纯；使文雅，使高尚（re-再。再次变好&#x3D;&gt;精练）</p><p>conﬁne [kən’fain] vt. 限制；使不外出，禁闭（con-&#x3D;come共同+-fin-界限+-e。全都在界限内&#x3D;&gt;限制）</p><p>deﬁne [di’fain] v. 给……下定义；阐述；阐释；限定，规定（de-向下、彻底+-fin-界限+-e。彻底给出界限&#x3D;&gt;下定义）</p><p>definite [‘definit] adj.明确的；一定的；意志坚强的，立场坚定的</p><p>deﬁnition [,diﬁ’niʃən] n. 定义，解释；（轮廓影像等的）清晰度；阐明（边角界限很明确&#x3D;&gt;清晰度）</p><h2 id="accord相关"><a href="#accord相关" class="headerlink" title="accord相关"></a>accord相关</h2><p>accord vt. 给予（欢迎、称颂等）vi.&amp;n.符合，一致（ac-&#x3D;ad-朝+-cord-&#x3D;heart。朝一条心的方向去&#x3D;&gt;一致）</p><p>heart [hɑ:t] n. 心（脏）；内心，感情；热忱；中心，要点</p><p>accordance [ə’kɔ:dəns] n. 一致，和谐，符合</p><p>accordingly [ə’kɔ:diŋli] adv. 相应地，照着办，按照；于是，因此</p><p>cord [kɔ:d] n. 绳，索（异源同形词，和heart无关。通chord弦）</p><p>cordial [‘kɔ:djəl] adj. 诚恳的，亲切的，热诚的（-cord-&#x3D;heart + 形容词后缀-ial。发自内心的）</p><p>record [ri’kɔ:d, ‘rekɔ:d] n. 记录；履历；唱片v.记录；录音（re-再次+-cord-心。再回心里）</p><p>recorder [ri’kɔ:də] n. 记录员；录音机</p><p>credit [‘kredit] n. 信用；信用贷款，赊欠；赞扬，荣誉vt.相信（不大可能的事）；把……归功于…… （-cred- &#x3D;heart心+相信+名词后缀-it）</p><p>incredible [in’kredəbl] adj. 不可相信的，惊人的，不可思议的（in-不+-cred-相信+形容词后缀-ible。同 unbelievable）</p><p> credential [kri’denʃəl] n. 凭证，（pl.）国书，证明书（-cred-相信+-ent+-ial。可供相信的证书）</p><p>⭐grant [ɡrɑ:nt, ɡrænt] v. 同意，准予；授予 n. 授予物；津贴；转让证书（通-cred-相信。因相信对方而授予权力）</p><blockquote><p>She granted their request.</p><p>她答应了他们的请求。（动词：同意、准予）</p><p>They granted her an entry visa.</p><p>他们发给她入境签证。（动词：授予）</p><p> a student&#x2F;research grant </p><p>助学金&#x2F;研究拨款（名词：授予物、津贴）</p><p>Never take other people’s help for granted.</p><p>永远不要把别人的帮助认为是理所当然的。</p><p>take sth. for granted 认为… 是理所当然的</p></blockquote><p>care [keə] n. 小心；关怀，照料v. （about）关心，介意，计较</p><p>careful [‘keəful] adj. 小心的，仔细的；细致的，精心的</p><p>caress [ke’res] vt.&amp; n. 爱抚，抚摸</p><blockquote><p>She gave the child a loving caress.</p><p>她疼爱地抚摸着孩子</p></blockquote><p>reckless [‘reklis] adj. 不注意的，大意的，卤莽的，不顾后果的（reck反过来&#x3D;care关心、顾虑 + 否定后缀- less&#x3D;loose。不关心的）</p><p> cure [kjuə] v.（of）治愈，医治；矫正 n. 治愈，痊愈；良药（通care关心、照料）</p><p>curious [‘kjuəriəs] adj. 好奇的，求知的，古怪的，爱挑剔的（cur-+中缀-i-+形容词后缀-ous。关心的）</p><p>curiosity [,kjuri’ɔsiti] n. 好奇心；古董，古玩（古玩：感兴趣的东西）</p><p>secure [si’kjuə] adj. （from, against）安全的，放心的v.得到；防护（se-分离+-cure-关心。不用操心&#x3D;&gt;安全的）</p><p>security [si’kjuəriti] n. 安全（感），防御（物），保证（人），（pl.）证券</p><p>accurate [‘ækjurət] adj. 正确无误的；准确的，精确的（ac-&#x3D;ad-朝、去 + -cur-&#x3D;care关心 + 动词后缀-ate。去小心&#x3D;&gt;精确的）</p><p>accuracy [‘ækjurəsi] n.准确（性）；精确；准确度</p><p>charity [‘tʃærəti] n. 慈善（团体），仁慈，施舍（char&#x3D;care关心+名词后缀-ity。关心别人的组织&#x3D;&gt;慈善团体）</p><p>cherish [‘tʃeriʃ] vt. 抱有，怀有（希望等）；爱护，抚育；珍爱（cher&#x3D;care关心+-动词后缀ish。抱有：珍藏）</p><p>treasure [‘treʒə] n. 财宝，财富；珍品 v. 珍爱，珍惜</p><p>caution [‘kɔ:ʃən] n. 谨慎；注意（事项），警告vt.劝  小心（caut&#x3D;care小心+名词后缀-ion）</p><p>precaution [pri’kɔ:ʃən] n. 预防，谨慎，警惕（pre-提前+caution谨慎。提前谨慎&#x3D;&gt;警惕）</p><p>cautious [‘kɔ:ʃəs] adj. （of）小心的，谨慎的</p><hr><p>core [kɔ:] n. 果核；中心，核心（通care心）</p><p>courage [‘kʌridʒ] n. 勇气，胆量（cour&#x3D;core心+名词后缀-age。来自内心—勇气）</p><p>discourage [dis’kʌridʒ] v. 使泄气，使失去信心（dis-相反。使失去勇气&#x3D;&gt;使气馁）</p><p>encourage [in’kʌridʒ] v. 鼓励，怂恿（en-&#x3D;in-进入、注入。注入勇气&#x3D;&gt;鼓励）</p><p>coward [‘kauəd] n. 懦夫，胆怯者（助记：没有勇气的人）</p><p>enlarge [in’lɑ:dʒ] vt. 扩大，放大，增大</p><p>ability [ə’biliti] n. 能力；本领；才能，才干；专门技能，天资</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li><p><input disabled="" type="checkbox"> 对比surplus,excessive和incidence</p><p>surplus突出“资源过剩”；excessive突出“超出范围”：excessive exercise过度锻炼</p></li><li><p><input disabled="" type="checkbox"> grant意思较多，注意区分</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研英语 </tag>
            
            <tag> 单词 </tag>
            
            <tag> 考研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语单词UNIT5</title>
      <link href="/2022/05/02/English/wordsUnit05/"/>
      <url>/2022/05/02/English/wordsUnit05/</url>
      
        <content type="html"><![CDATA[<h1 id="UNIT-5"><a href="#UNIT-5" class="headerlink" title="UNIT 5"></a>UNIT 5</h1><h2 id="accident相关"><a href="#accident相关" class="headerlink" title="accident相关"></a>accident相关</h2><p>accident [‘æksidənt] n. 意外，事故（ac-&#x3D;ad-朝，去 + -cid-落下 —— 名词后缀-ent。从天而降&#x3D;&gt;意外）</p><hr><p>⭐注意对比incident和incidence</p><p>incident [‘insidənt] n. 事件，事变（in-进入。落入原本计划内的事情&#x3D;&gt;不常发生的事件）</p><p>incidentally [,insi’dentəli] adv. 偶然地，附带地，顺便提及</p><blockquote><p>Quite incidentally, I found out some very useful information at the party.</p><p>我在聚会上非常偶然地发现了一些很有用的信息。</p></blockquote><p>incidence [‘insidəns] n. <strong>发生率</strong>；影响程度，影响范围</p><p>coincidence [kəu’insidəns] n. 巧合；同时发生，符合，一致（co-&#x3D;com-共同 + incidence 发生率。共同发生）</p><p>coincide [,kəuin’said] vi.  同时发生，巧合，一致，相符</p><hr><p>【异源同型词】</p><p>case [keis] n. 情况，事实，案例；箱，盒，容器（①cas&#x3D;-cid-落下。降临的事情②通catch抓，拿。盛东西的容器）</p><p>cash [kæʃ] n. 现金，现款  v. 兑现，付（或收）现款（原指装钱的箱子，后延申为现金）</p><p>cashier [kæ’ʃiə] n. 收银员，出纳员</p><hr><ul><li>当case意为“盒”时</li></ul><p>cassette [kə’set] n. 盒子；盒式磁带</p><p>capsule [‘kæpsl] n. 胶囊；太空舱（caps&#x3D;case）</p><hr><p>casual [‘kæʒjuəl] adj. 偶然的，临时的，非正式的（不常发生的)</p><blockquote><p>casual clothes 休闲服</p><p>casual workers&#x2F;labour 临时工&#x2F;零工</p></blockquote><p>casualty [‘kæʒjuəlti] n. 伤亡人员；受害人；损失的东西（偶然死亡，非正常死亡的）</p><hr><p>occasion [ə’keiʒən, əu-] n. 场合，时节，时刻，机会（oc-&#x3D;ob-朝向，相对 +-cas-&#x3D;case事件 +-ion。来临的事件，面对的事件）</p><p>occasional [ə’keiʒənəl, əu-] adj. 偶然的，非经常的，临时的</p><hr><p>chance [tʃɑ:ns, tʃæns] n. 机会；可能性 v. 碰巧，偶然发生</p><p>choose [tʃu:z] v. 选择，挑选</p><p>choice [tʃɔis] n.选择（机会），抉择，选择项；入选者 adj.精选的</p><p>disgust [dis’gnst] n.厌恶，恶心 v.使厌恶（dis-不+-gust-&#x3D;choose。不选&#x3D;&gt;厌恶）</p><p>decay [di’kei] v.&amp;n. 腐朽，腐烂；衰减，衰退（de-向下+cay&#x3D;-cid-。向下落&#x3D;&gt;衰减）</p><blockquote><p>Sugar makes your teeth decay.</p><p>糖能引起蛀牙。（动词）</p><p>This industry has been in decay for some time.</p><p>这个行业早就开始衰退了 。（名词）</p></blockquote><p>cut [kʌt] n.&amp;v.切，割，削；削减，删节 n.切口，伤口</p><p>decide [di’said] v.决定，下决心；解决，裁决（de-向下+-cid-&#x3D;cut。向下砍&#x3D;&gt;快刀斩乱麻）</p><p>decision [di’sisen] n.决定，决心；决议；决策</p><p>decisive [di’saisiv] adj.决定性的</p><blockquote><p>a decisive factor&#x2F;victory&#x2F;battle</p><p>决定性的因素&#x2F;胜利&#x2F;战役</p></blockquote><p>concise [ken’sais] adj.简明的，简洁的（砍掉所有不需要的东西）</p><p>precise [pri’sais] adj.精确的，准确的（预先裁剪好）</p><p>precision [pri’sisen] n.精确，精确度</p><p>cement [si’ment] n.水泥；胶泥，胶接剂v.胶合；巩固，加强（ce&#x3D;cut。切开的石头一石头粉末)</p><blockquote><p>The university’s exchange scheme has cemented its links with many other academic institutions.</p><p>这所大学的交流计划加强了与许多其他学术机构的联系。</p></blockquote><p>hay [hei] n.干草（h&#x3D;c。砍成一节一节的草&#x3D;&gt;干草）</p><h2 id="acclaim相关"><a href="#acclaim相关" class="headerlink" title="acclaim相关"></a>acclaim相关</h2><p>acclaim [ə’kleim] v. 向……欢呼，公认 n. 欢呼，喝彩，称赞(ac-&#x3D;ad-朝+claim&#x3D;clear喊。去喊&#x3D;&gt;欢呼）</p><hr><p>⭐关于claim</p><p>clear adv. 清晰的 v. 清楚 vi. 变清楚</p><p>clean adj. 清洁的 v. 除去污垢</p><p><strong>claim 由n双写得来，早期表示话讲清楚（大喊）</strong></p><p>claim v. 要求，声称，索赔 n. 要求，断言，索赔，权力</p><blockquote><p>The number of people claiming unemployment benefits has risen sharply this month.</p><p>这个月要求领取失业救济金的人数激增 （动词：索要、索赔）</p><p>Baggage Claim Area</p><p>行李提取处（动词：认领、索要）</p><p>The company claims that it is not responsible for the pollution in the river.</p><p>公司声称对该河流污染没有责任（动词：声称）</p><p>Can you give any evidence to support your claim?</p><p>你能给出证据支持你的说法吗？（名词：断言、说法）</p><p>She has no rightful claim to the title.</p><p>她并没有获得这一头衔的正当权利。（名词：权利）</p></blockquote><p>可以看例句找感觉，他们都表示<strong>大喊出来</strong></p><hr><p>clarify [‘klærifai] v. 澄清，阐明</p><p>clarity [‘klærəti] n. 清晰，明晰</p><p>declare [di’klee] v.宣布，宣告，声明；断言，宣称（de-向下、彻底。彻底说清楚&#x3D;&gt;声明）</p><p>declaration [,deklə’reiʃən] n.宣言，宣布，声明</p><p>exclaim [ik’skleim] v. 呼喊，惊叫，大声说</p><p>proclaim [pre’kleim] v.宣告，声明（向前喊&#x3D;&gt;宣告）</p><p>reclaim [ri’kleim] v. 要求归还，收回；开垦（召唤回来）</p><p>calendar [‘kælində] n. 日历，月历（calen&#x3D;clear。古罗马时期，每月初会有牧师在广场宣布这个月是今年的几月份，这个月有多少天，其中哪一天准备过什么节等等，所以最初的日历实际上是“喊”出来的。）</p><h2 id="accommodate相关"><a href="#accommodate相关" class="headerlink" title="accommodate相关"></a>accommodate相关</h2><p>accommodate [ə’kɔmədeit] vt.向…. 提供住处；对… 予以照顾性考虑（ac-&#x3D;ad-朝 + com-共同 + -mod-&#x3D;mode模式+动词后缀-ate。到共同的模式里来&#x3D;&gt;提供住宿）</p><p>accommodation [ə,kɔmə’deiʃən] n. 住宿，留宿；膳宿供应</p><p>mode [meud] n.方式，式样</p><p>model [‘model] n.样式，型；模范；模型，原型；模特 v.模仿</p><p>moderate [‘mɔdərət, ‘mɔdəreit] adj. 有节制的，中等的，适度的，温和的，稳健的（有尺度的）</p><p>modest [‘mɔdist] adj. 谦虚的；有节制的；适度的</p><p>modern [‘mɔdən] adj.现代的，近代的，新式的（最新模式的&#x3D;&gt;新式的）</p><p>modernization [,mɔdənai’zeiʃən] n. （modernisation） 现代化</p><p>modify [‘mɔdifai] v. 更改，修改，修饰</p><p>module [‘mɔdju:l, -dʒu:l] n. 组件，模块，模件；（航天器的）舱</p><p>mould [məuld] n.（mold）模子，铸型 v. 浇铸，造型，塑造</p><p>mood [mu:d] n. 心情，情绪；语气（情绪的模式）</p><p>commodity [kə’mɔditi] n.(pl.)日用品；商品；农&amp;矿产品；有用之物（共同模式的物品&#x3D;&gt;商品）</p><p>goods [gudz] n. (pl.)货物，商品</p><p>good [ɡud] adj. 好的；善良的；擅长的；乖的 n. 好处；利益</p><p>goodness [‘ɡudnis] n. 善良，仁慈；（食物等）精华 int. 天哪</p><hr><p>moral [‘mɔrəl, ‘mɔ:-] adj. 道德（上）的，精神上的 n. 寓意，教育意义（思想模式）</p><p>morality [mə’ræləti] n. 道德，美德</p><p>virtue [‘və:tju:] n. 德行，美德；贞操；优点；功效，效力（vir&#x3D;man。男人应有的品德&#x3D;&gt;美德） </p><blockquote><p>Patience is a virtue.</p><p>耐心是一种美德。</p></blockquote><p>virtual [‘və:tʃuəl] adj. 实际上的，事实上的；虚拟的（未在名义上或正式获承认的&#x3D;&gt;虚拟的）</p><hr><p>metre [‘mi:tɚ] n.（meter）米，公尺；仪表，计量器</p><p>metric [‘metrik] adj. 米制的，公制的</p><p>kilo [‘ki:ləu, ‘ki-] n.（kilogram&amp;kilogramme）千克</p><p>kilometre [kɪ’lɔmɪtɚ] n.(kilometer) 公里，千米（略作km）</p><p>diameter [dai’æmitɚ] n. 直径（dia-穿过&#x3D;bi-二 + meter。中心到边上两点间的距离&#x3D;&gt;直径）</p><p>parameter [pə’ræmitɚ] n. 参数，参量（para-在旁边 + meter测量。放在旁边可供参考的数据）</p><p>measure [‘meʒə] v. 测量，分派，权衡 n. 尺寸，量度器，措施，办法(mod&#x3D;met)</p><p>immense [i’mens] adj. 广大的，巨大的；[口]极好的（im-不+mense&#x3D;measure测量。无法测量的）</p><p>symmetry [‘simitri] n. 对称（性）；匀称，整齐（sym&#x3D;same相同 + metr&#x3D;meter + 名词后缀-y。两者一致）</p><p>gauge [ɡeidʒ] n. 标准尺寸；规格；量规，量表；口径 v. 测量(音似guess，有估算的意思)</p><blockquote><p>a 12-gauge shotgun一支十二口径的猎枪</p></blockquote><p>dimension [di’menʃən, dai-] n. 尺寸，尺度；维（数），度（数）（dis-分开 + mens-测量 + -ion。分开测量&#x3D;&gt;维度）</p><p>medicine [‘medisin] n. 内服药，医药；医术；医学，内科学（保持体内各项指标正常的手段）</p><p>medical [‘medikəl] adj. 医学的，医疗的，医药的；内科的</p><p>kit [kit] n. 成套工具，用具包，工具箱</p><p>remedy [‘remidi] n.药品；治疗措施v.治疗，医治；纠正，补救（re-反复表强调 + med医药 + -y。用医药治疗）</p><p>meditate [‘mediteit] v. 想，考虑，（尤指宗教上的）沉思，冥想（med测量 + 复合动词后缀-itate。测量、分析&#x3D;&gt;沉思）</p><p>meditation [,medi’teiʃən] n. 熟虑；（尤指宗教的）默想，沉思；（pl.）冥想录</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li><p><input disabled="" type="checkbox"> 对比incident和incidence</p></li><li><p><input disabled="" type="checkbox"> 关于claim</p></li><li><p><input disabled="" type="checkbox"> moral 和 virtue</p><p>moral指的是道德的概念。virtue指个人的品德</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研英语 </tag>
            
            <tag> 单词 </tag>
            
            <tag> 考研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语单词UNIT4</title>
      <link href="/2022/05/02/English/wordsUnit04/"/>
      <url>/2022/05/02/English/wordsUnit04/</url>
      
        <content type="html"><![CDATA[<h1 id="UNIT-4"><a href="#UNIT-4" class="headerlink" title="UNIT 4"></a>UNIT 4</h1><h2 id="academic相关"><a href="#academic相关" class="headerlink" title="academic相关"></a>academic相关</h2><p>academic [,ækə’demik] adj. 学院的，学术性的；大学的；理论的（源自希腊神话中的雅典英雄阿卡德摩斯（Akademos） ，后来柏拉图（Plato ）在他的家中讲课）</p><p>academy [ə’kædəmi] n. (高等)专科院校；学术社团，协会，研究院</p><p>accent [‘æksənt; ək’sent] n. 口音，腔调；重音（符号） vt. 重读 （ac-&#x3D;ad- 朝 + cent&#x3D;chant 唱。说话像唱歌&#x3D;&gt;口音）</p><p>chant [tʃɑːnt; tʃænt]] v. 反复说或吟唱  n. 赞美歌；圣歌</p><p>charm [tʃɑrm] n. 吸引力，魔力 v. 迷人，（使）陶醉（具有魔力的咒语）</p><p>concert [‘kɔnsə:t] n. 音乐会，演奏会（ con-&#x3D;come 来、一起 + cert&#x3D;chant 。一起唱歌&#x3D;&gt;音乐会）</p><h2 id="accept相关"><a href="#accept相关" class="headerlink" title="accept相关"></a>accept相关</h2><p>accept [ək’sept] vt. 接受，认可 vi. 同意 （ac-&#x3D;ad- + -cept-&#x3D;have 拿&#x3D;&gt;去拿&#x3D;&gt;接受）</p><p>acceptable [ək’septəbl] adj. 可接受的，合意的</p><p>acceptance [ək’septəns] n. 接受，接收，验收</p><p>except [ik’sept] prep. 除……之外  v. 除外；反对（拿出去&#x3D;&gt; 除外）</p><p>exception [ik’sepʃən] n. 例外，除外；反对；异议</p><p>exceptional [ik’sepʃənəl] adj. 例外的，异常的</p><blockquote><p>There are exceptions to every rule.</p><p>每条规则皆有例外。</p></blockquote><p> ⭐susceptible [sə’septəbl] adj. 易受影响的，易受感动的（sus-&#x3D;sub- 在下面 +-cept- 拿 +-ible&#x3D;-able。“拉下水的 ”→易受影响的）</p><blockquote><p>These plants are particularly susceptible to frost.</p><p>这些植物很容易受霜冻的影响</p></blockquote><p>receive [ri’si:v] v. 收到，遭到，接见 （re- +-ceive-&#x3D;have 拿）</p><p>reception [ri’sepʃən] n. 接待，招待会，接收，接受</p><p>receipt [ri’si:t] n. 收据，收条；收到，接到 [invoice 发票] (只是小票，并不是用来报销的发票)</p><blockquote><p>Make sure you are given a receipt for everything you buy.</p><p>买什么东西都一定记着要收据。</p></blockquote><p>recipe [‘resipi] n. 烹饪法，食谱；诀窍，方法（拿回来，最早指医生处方里的“服用”，后指食谱）</p><p>recipient [ri’sipiənt] n. 接收者</p><blockquote><p>recipients of awards</p><p>领奖者</p></blockquote><p>conceive [kən’si:v] v. (of)设想，构思，想象；以为；怀胎，怀有（①拿到一起&#x3D;&gt;构思；②将精子和卵子拿到一起&#x3D;&gt;怀孕）</p><blockquote><p>He conceived the plot for this ﬁlm while he was still a student.</p><p>他还是个学生的时候就已经构想出了这部影片的情节。</p><p>Do you know exactly when you conceived?</p><p>你知道自己怀孕的确切时间吗？</p></blockquote><p>concept [‘kɔnsept] n. 概念，观念，设想（构思出的想法）</p><p>deceive [di’si:v] v. 欺骗，蒙蔽（de-&#x3D;dis- 相反。往反方向带、带偏&#x3D;&gt;欺骗蒙蔽）</p><p>deceit [di’si:t] n. 欺骗行为（只是骗人）</p><hr><p>fraud [frɔ:d] n. 欺诈，诈骗；骗子；假货（犯罪行为）</p><p>frustrate [‘frʌstreit] vt. 挫败，阻挠，使灰心（被欺骗）</p><hr><p>perceive [pə’si:v] v. 察觉，感知；理解（per- 每一步都能抓住）</p><p>period [‘piəriəd] n. 时期，时代；学时；周期；句号（-iod-&#x3D;-it- 走。每一步都走一遍&#x3D;&gt;周期、句号）</p><p>periodical [,piəri’ɔdikəl] n. 期刊，杂志 adj. 周期的，定期的</p><p>capture [‘kæptʃə] v.&amp;n. 捕获，俘虏；夺得，攻占（-cap-&#x3D;have持有，拿。抓住）</p><p>captive [‘kæptiv] n. 俘虏 adj. 被俘虏的，被监禁的</p><p>capable [‘keipəbl] adj. 有本领的，有能力的；(of)可以……的，能……的（能抓起来的&#x3D;&gt;有能力的）</p><p>capacity [kə’pæsəti] n. 容量，溶剂；能量，能力；接受力</p><p>cable n. 电报；电缆；缆，索 v. 拍电报（早期固定、抓住船只的绳子）</p><p>hedge [hedʒ] n. 篱笆，树篱，障碍物 v. 用树篱为主（早期的羊圈）</p><p>cater [‘keitə] v. (for&amp;to)满足，迎合；(for)提供饮食及服务（cat&#x3D;-capt- 拿。“采办、准备食品”）</p><p>chase [tʃeis] v.&amp;n. 追求，追逐（去抓）</p><hr><p>purchase [‘pə:tʃəs] v. 买，购买 n. 购买的物品(pur-&#x3D;pro- 向前。向前追逐，后延申为“购买”）[<strong>formal</strong>]</p><p>buy vt.买  [<strong>normal</strong>]</p><hr><p>have [hæv] v. 有，具有；体会经受；从事；使</p><p>heavy [‘hevi] adj. 重的，重型的；沉重的</p><p>heave v. （用力）举，提，拉；扔 n. 举起（举起、投掷重的东西）</p><blockquote><p>He heaved the bag onto his shoulder.</p><p>他把袋子抗上肩膀</p></blockquote><p>behave [bi’heiv] v. 举止，举动，表现；运转，开动</p><p>behavior [bi’heivjə] n.(behaviour)行为，举止；（机器等）运转情况</p><h2 id="access相关"><a href="#access相关" class="headerlink" title="access相关"></a>access相关</h2><p>access [‘ækses] n. 进入；接入；到达 vi. 存取，访问(ac-&#x3D;ad- 朝 + -cess- 走。朝一个地方走&#x3D;&gt;进入）</p><p>accessory [ək’sesəri] n. 配件，附属品；（为全套衣服增加美感的）服饰（跟着主体走&#x3D;&gt;附属品）</p><blockquote><p>clothes and accessories  服饰与配饰</p></blockquote><p>success [sək’ses] n. 成就，成功；成功的事务，有成就的人(suc-&#x3D;sub-在下、在后 + -cess-走。①在后面走&#x3D;&gt;追逐目标&#x3D;&gt;成功②一直走下去&#x3D;&gt;成功）</p><p>succeed vi. 成功；继承，接替 vt. 接替；继……之后（-ceed-&#x3D;-cess-）</p><p>successful [sək’sesful] adj.圆满的；顺利的；成功的</p><p>succession [sək’seʃən] n. 连续，系列；继任，继承（在后面跟着&#x3D;&gt;连续、继承）</p><p>successive [sək’sesiv] adj. 连续的，接连的</p><p>successor [sək’sesə] n. 接替的人或物，继任者</p><hr><p>excess [ik’ses] n. 过量；过剩；超额；无节制 adj. 过量的，额外的（ex-向外 + -cess- 走。走出去）</p><p>excessive [ik’sesiv] adj. 过多的；过分的；额外的</p><p>exceed [ik’si:d] v. 超过，胜过；越出</p><p>exceedingly [ik’si:diŋli] adv. 极端地，非常</p><hr><p>necessary[‘nesisəri] adj. 必需的，必要的；必然的 n. 必需品（ne&#x3D;no不 + -cess-走 + -ary。不能走的，不能少的）</p><p>necessitate [nɪ’sesɪteɪt] v. 使成为必要，需要（necess + -itate）</p><p>necessity [ni’sesəti, nə-] n. 必要性，必然性</p><p>process [ˈprɔ-ses; prəˈses] n. 过程，进程，工艺，工序 v. 加工，处理（ pro-向前。向前走）</p><p>procession [prə’seʃ(ə)n] n. 队列</p><p>proceed [prə’siːd] v. 进行，继续下去；发生</p><blockquote><p>His lawyers have decided not to proceed with the case.</p><p>他的律师已经决定不再继续打那场官司了。</p></blockquote><p>proceeding [prə’si:dɪŋ] n. 行动，进行(pl.)会议录，学报</p><p>procedure [prə’si:dʒə] n. 程序，手续，步骤</p><blockquote><p>You must follow correct procedure at all times.</p><p>你必须时刻按照正确的步骤操作。</p></blockquote><p>precede [pri:’si:d] v. 领先（于），在（……之前）；优先，先于（pre- 在前。走在前面）</p><p>preceding [pri:’si:diŋ] adj. 在前的，在先的</p><p>precedent [‘presi:dənt] n. 先例</p><p>recede [ri’si:d] v. 退回，后退，收回；贬值（re-回。走回来&#x3D;&gt;后退）</p><p>recession [rɪ’seʃ(ə)n] n. 衰退，不景气</p><blockquote><p>The economy is in deep recession.</p><p>经济正处于严重的衰退之中。</p></blockquote><p>⭐cease [si:s] v.&amp;n. 停止，终止（cease&#x3D;-cess- “走了”→ 停止）</p><p>predecessor [‘predəsesɚ] n. 前任，前辈（pre-之前 +decess死亡 +-or→之前死亡的人→前辈）</p><p>concede [kən’si:d] vt. 承认容许（con-强调。走开&#x3D;&gt;退让）</p><p>concession [kən’seʃən] n. 让步，妥协；特许（权）</p><p>ancestor [‘ænsestɚ] n. 祖先（an-&#x3D;ant-在前。走在前面的人）</p><p>ancient [‘einʃənt] adj. 古代的，古老的（anc-&#x3D;ant-在前 +-i-+ -ent 。先前的）</p><p>antique [æn’ti:k] adj. 古式的，过时的 n. 有价值的古物，古董</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li><p><input disabled="" type="checkbox"> susceptible adj. 易受影响的，易受感动的</p></li><li><p><input disabled="" type="checkbox"> accept和receive区分</p><p>accept是主观接受，receive是客观上的拿到了</p></li><li><p><input disabled="" type="checkbox"> deceit和fraud区分</p><p>deceit只是骗人，而fraud是犯罪行为</p></li><li><p><input checked="" disabled="" type="checkbox"> cease注意和cause区分</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研英语 </tag>
            
            <tag> 单词 </tag>
            
            <tag> 考研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语单词UNIT3</title>
      <link href="/2022/05/02/English/wordsUnit03/"/>
      <url>/2022/05/02/English/wordsUnit03/</url>
      
        <content type="html"><![CDATA[<h1 id="UNIT-3"><a href="#UNIT-3" class="headerlink" title="UNIT 3"></a>UNIT 3</h1><h2 id="absorb相关"><a href="#absorb相关" class="headerlink" title="absorb相关"></a>absorb相关</h2><p>absorb [əb’sɔ:b, -‘zɔ:b] vt. 吸收（⽔、光、蒸汽等）；使全神贯注；吞并&#x2F;兼并（ab-离开+sorb吸。吸⾛→吸收）</p><ul><li>sorb来自soup汤</li></ul><p>supper [‘sʌpə] n. 晚餐（以汤为主）</p><p>sip [sip] v. ⼩⼝地喝，抿，呷 n. ⼀⼩⼝的量</p><p>spoon [spu:n] n. 匙，勺⼦，调羹</p><p>spade [‘speid] n. 铁锹，铲⼦（形似⼤勺⼦）</p><p>suck [sʌk] v.&amp;n. 吸，舐；吸收（取）（c&#x3D;k&#x3D;q&#x3D;p。sap：植物体内的汁液，对⽐sip）</p><blockquote><p>you suck. 你真菜&#x2F;垃圾。</p><p>起源于一种吸果冻大赛，人们回对吸的慢的人说you suck(你快吸)，之后变成对差劲的人的评价</p></blockquote><p>soak [səuk] v. 浸泡，浸湿，浸透（吸水）</p><p>soap [səup] n. 肥皂（结合记忆）</p><h2 id="abstract相关"><a href="#abstract相关" class="headerlink" title="abstract相关"></a>abstract相关</h2><p>abstract [‘æbstrækt] adj. 抽象的 n. 摘要，⽂摘，梗概 vt. 提取；摘录要点（abs-&#x3D;ab-离开 + tract&#x3D;drag拉、抽。从中抽出要点→抽象的）</p><p>⭐drag [dræɡ] v. 拖，拖曳</p><p>attract [ə’trækt] vt. 引起的注意（或兴趣等），吸引；引起；激起（at-朝向。朝⼀个⽅向拉→吸引）</p><p>attractive [ə’træktiv] adj. 吸引⼈的，引⼈注意的；漂亮的，迷⼈的</p><hr><p>⭐注意区分下面这些单词</p><p>distract [dis’trækt] v. 分散；使分心；打扰；使⼼情烦乱（dis-相反。往反方向拉→使分心）</p><p>extract [ik’strækt, ‘ekstrækt] v. 拔出，抽出；摘录 n. 抽取物；精华；选集（ex-向外。拉出来→抽出、摘录）</p><p>subtract [səb’trækt] v. （from）减（去），扣掉（sub-在下面。往下拉→减去）</p><blockquote><p>Four subtracted from ten equals six.</p><p>10减去4等于6。</p></blockquote><p>contract [‘kɔntrækt, kən’trækt] n.（承包）合同，契约 v. 订合同&amp;契约；使缩小（con-共同、⼀起。拉到⼀张纸上→合同）</p><hr><p>⭐注意区分下面的单词</p><p>track [træk] n. 跑道，小路；轨迹，轮迹 v. 跟踪，追踪（足迹、轨道。实际存在的）</p><p>trace [treis] n. 痕迹，踪迹；极少量 v. 描绘；跟踪，追踪（追寻、追溯。犹指追寻看不见的踪迹，或者指“历史的踪迹”这种飘渺的存在）</p><blockquote><p>He attempted to cover up all the traces of his crime.</p><p>他试图掩盖他犯罪的蛛丝马迹。</p></blockquote><p>trail [treil] n. 踪迹，痕迹；小路 v. 追踪，跟踪；拖，拖曳（拖在后面的）</p><blockquote><p>Wherever that playboy went, he left behind him a trail of broken hearts.</p><p>那个花花公子不管到哪儿，身后都留下了⼀串破碎的心。</p><p>The Canadian team is trailing by six points.</p><p>加拿大队落后了6分。</p></blockquote><hr><p>trolley [‘trɔli] n. ⼿推⻋；（英）⽆轨电⻋，（美）有轨电⻋</p><p>tractor [‘træktə] n. 拖拉机，牵引⻋</p><p>track(美)&#x2F;lorry(英) n. 卡车</p><p>tram [træm] n. 有轨电车（早期指煤矿井下的有轨运煤车）</p><p>van [væn] n. 有篷汽车；有篷货运车厢</p><hr><p>draw [drɔ:] v. 拉；画；汲取；引出；（to）挨近 n. 平局；拖曳（ 通drag：早期日耳曼语组口语g(u)和w(u)发音类似 ）</p><blockquote><p>Suddenly he drew a knife and held it to my throat.</p><p>他突然拔出⼀把刀抵住了我的喉咙。（动词“拔、拉”）</p><p>Draw a line at the bottom of the page.</p><p>在本页的底部画⼀条线。（动词“画”）</p><p>He waved his hands to draw her attention.</p><p>他挥动双手来吸引她的注意力。（动词“吸引”）</p><p>The game ended in a draw.</p><p>比赛以平局告终。（名词“平局”）</p></blockquote><p>drawing [‘drɔ:iŋ] n. 绘图，图样</p><p>drawer [drɔ:(r)] n. 抽屉（可以拉的）</p><p>dragon [‘dræɡən] n. 龙（画龙的时候，拉出一条长线）</p><p>drawback [‘drɔ:bæk] n. 欠缺，缺点；退还的关税（拉回来，拖后腿）</p><blockquote><p>This is the one major drawback of the new system.</p><p>这是新系统的⼀⼤缺点。 </p></blockquote><p>draft [drɑ:ft, dræft] n. 草稿，草案，草图 v. 起草，草拟</p><p>withdraw [wið’drɔ:, wiθ-] v. 收回，撤消；撤离，退出；提取（钱）（with-相反，通wide。往反方向拉→收回）</p><blockquote><p>Once in court, he withdrew the statement he’d made to the police.</p><p>⼀上法庭，他便推翻了自己对警方的供词。</p></blockquote><p>retreat [ri’tri:t] v. 撤退，退却（re-回+treat&#x3D;tract。往回拉→撤退）（退缩）</p><p>trigger [‘triɡə] n. 扳机 vt. 触发，引起（ trig&#x3D;drag + g + -er。拉动扳机）</p><blockquote><p>Some people ﬁnd that certain foods trigger their headaches.</p><p>有些⼈发现某些⻝物导致他们头疼。</p></blockquote><p>⭐trait [treit] n. 特征，特点，特性（描绘出来的特点）</p><p>portray [pɔr’treɪ] v. 描写，描述；画（⼈物、景象等）（por-&#x3D;pro-向 前+tray&#x3D;drag。画出来展现在大家面前）</p><p>portrait [‘pɔrtrɪt] n. 肖像，画像</p><h2 id="accelerate相关"><a href="#accelerate相关" class="headerlink" title="accelerate相关"></a>accelerate相关</h2><p>accelerate [ək’seləreit] v. 使加速，使增速，促进 vi. 加快，增加（ac-&#x3D;at-朝 + celer&#x3D;gallop飞奔 + 动词后缀-ate。向前飞奔→加速）</p><p>⭐gallop [‘ɡæləp] v.&amp;n. 奔驰，飞奔（ 通wallop&#x3D;well leap，双脚或四脚离地）</p><blockquote><p>We galloped through the woods.</p><p>我们骑马从林中飞驰而过。（动词）</p><p>At the sound of gunﬁre the horse suddenly broke into a gallop.</p><p>枪声⼀响，那匹⻢突然⻜奔起来。（名词）</p></blockquote><p>leap [li:p] v. 跳，跳跃 n. 跳跃，飞跃（朝前跳、跨越）</p><p>loop [lu:p] n. 圈，环（捕捉动物的绳索）</p><p>jump [dʒʌmp] v.&amp;n. 跳跃，跳动，跳过；暴涨，猛增（泛指“跳”）</p><p>⭐hop [hɔp] v. ⼈单足跳；跳上（车等） n. 蹦跳；短程飞行（单足跳）</p><h2 id="abuse相关"><a href="#abuse相关" class="headerlink" title="abuse相关"></a>abuse相关</h2><p>abuse [ə’bju:z, ə’bju:s] vt. 滥⽤；虐待，辱骂；诋毁 n. 滥⽤；恶习；弊端（ab-离开。偏离正轨的使⽤→滥⽤）</p><p>use [ju:z] n. 使&amp;应用；用法&amp;途；益&amp;用处 vt. 用；消耗</p><p>usage [‘juːsɪdʒ] n. 使用，用法；习惯，习俗；惯用法</p><p>used [ju:zd] adj. 用旧了的，旧的；习惯于……；过去惯&amp;经常</p><p>useful [‘ju:sful] adj. 有用的，实用的；有益的，有帮助的</p><p>usual [‘ju:ʒuəl] adj. 通常的，平常的（常用的→平常的）</p><p>usually [ˈjuːʒuəli] adv. 通常，平常</p><p>unusual [,ʌn’ju:ʒuəl] adj. 不平常的，与众不同的</p><p>utilize [‘ju:tilaiz] vt. 利⽤</p><blockquote><p>The Romans were the ﬁrst to utilize concrete as a building material.</p><p>罗马人首先使用混凝土作建筑材料。</p></blockquote><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li><input disabled="" type="checkbox"> distract、extract、subtract 区分</li><li><input disabled="" type="checkbox"> track、trace 、trail区分</li><li><input checked="" disabled="" type="checkbox"> trait 特点</li><li><input checked="" disabled="" type="checkbox"> gallop 飞奔</li></ul>]]></content>
      
      
      <categories>
          
          <category> Learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研英语 </tag>
            
            <tag> 单词 </tag>
            
            <tag> 考研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语单词UNIT2</title>
      <link href="/2022/05/02/English/wordsUnit02/"/>
      <url>/2022/05/02/English/wordsUnit02/</url>
      
        <content type="html"><![CDATA[<h1 id="UNIT-2"><a href="#UNIT-2" class="headerlink" title="UNIT 2"></a>UNIT 2</h1><h2 id="abound相关"><a href="#abound相关" class="headerlink" title="abound相关"></a>abound相关</h2><p>abound vi. 大量存在，充满，富于（ab 离开 + ound&#x3D;water 水 &#x3D;&gt; 水离开 &#x3D;&gt; 溢出来）</p><p>water 水、浇水   wet 湿的   wash 洗</p><p>aboundance n. 丰富，充裕   aboundant adj. 充足的</p><p>redundant [ri’dʌndənt] adj. 多余的，过剩的；（⻝物）丰富的；被解雇的（red-&#x3D;re-再。往回流→多余、过剩的）</p><h2 id="abrupt相关"><a href="#abrupt相关" class="headerlink" title="abrupt相关"></a>abrupt相关</h2><p>abrupt adj. 突然的，出其不意的，（行为）粗鲁无礼的（ab-离开；-rupt-打断。断开的→出其不意的、不按套路出牌的，与大家走了不同的方向）</p><hr><h4 id="interrupt和interpret区分"><a href="#interrupt和interpret区分" class="headerlink" title="interrupt和interpret区分"></a>interrupt和interpret区分</h4><p>interrupt 打断</p><p>interpret 解释；翻译</p><hr><p>bankrupt adj. 破产的；彻底缺乏的 vt. 使破产 n. 破产者（货币兑换商因资⾦短缺而被折断的条凳[不理解的话看下面]）</p><p>bank（堆放货币的条凳 &#x3D;&gt; 早期的银行）</p><p>bench n. 长凳，台，座 （和bank很相似）</p><p>banquet n.（正式的）宴会 vi. 参加宴会 vt. 宴请（摆在⻓凳上的⼩点⼼）</p><p>corrupt v. 贿赂，收买，腐蚀 adj. 腐败的，贪污的（cor-&#x3D;com-共同。共同打破规则→腐败）</p><blockquote><p>Violence on television corrupts the minds of children.</p><p>电视上的暴⼒镜头腐蚀了孩⼦们的思想。</p></blockquote><p>disrupt vt. 使混乱，使崩溃，使分裂，使瓦解（dis-分开。分开打断→分裂、瓦解）</p><p>erupt v. （尤指火山）爆发（e-向外。向外打破 &#x3D;&gt; 爆发）</p><h2 id="absence相关"><a href="#absence相关" class="headerlink" title="absence相关"></a>absence相关</h2><p>absence n. 缺乏，不存在，缺席（ab- + sence&#x3D;essence&#x3D;is是，存在。不存在→缺席）</p><p>absent adj. 缺席的；缺乏的，不存在的；⼼不在焉的</p><blockquote><p>absent-minded 大脑不在线；走神</p></blockquote><p>essence n. 本质，实质；精华（es&#x3D;is+辅⾳双写s引导名词后缀-ence）</p><p>essential adj. 本质的，基本的；净化的 n. 本质；要素</p><p>entity n. 实体；存在（物）；组织，机构；本质（ent&#x3D;es&#x3D;is+名词后缀-ity）</p><blockquote><p>One division of the company was broken oﬀ as a separate entity.</p><p>这家公司的⼀个部⻔脱离成了⼀个分开的实体。</p></blockquote><p>presence n. 出席，到场，存在，在（pre-在 前+sence。在前⾯出现→出席、到场）</p><p>present adj. 出席的，现在的 n. 现在，礼物 v. 赠送，提出</p><blockquote><p>由“出席的”延申出“现在”的意思，再由“现在”延申出“现在的”</p></blockquote><p>presently adv. ⼀会⼉，不久；现在，⽬前</p><p>represent v. 描述，表示；代表，代理；阐明，说明（再次出现→代表）</p><p>representative n. 代表，代理⼈ adj.（of）典型的，有代表性的</p><hr><h4 id="representative和agent区分"><a href="#representative和agent区分" class="headerlink" title="representative和agent区分"></a>representative和agent区分</h4><p>这两个词都有代表，代理人的意思，但是</p><p>agent：ag-&#x3D;act 行动 + ent …的人。替你行动的人 &#x3D;&gt; 代理人</p><p>而representative的级别更高，属于全权代理的人</p><hr><p>interest n.（in）兴趣， 要性；利益 v.（in）使发⽣兴趣（inter-在⾥⾯；est&#x3D;es&#x3D;is。①心里想的事→兴趣；②钱里的钱→利益）</p><p>hobby [‘hɔbi] n. 业余爱好，嗜好，兴趣（级别更高，会花时间投入，而interest只是感兴趣，不一定会去做）</p><p>sin n. 罪，罪恶 v. 犯罪（真实存在的罪⾏）</p><h2 id="absolute相关"><a href="#absolute相关" class="headerlink" title="absolute相关"></a>absolute相关</h2><p>absolute adj. 绝对的，完全的；确实的，肯定的（ab-离开+solute&#x3D;solve解开、松<br>开→完全松开、没有束缚→绝对的、完全的）</p><p>⭐solution n. 解答，解决办法；溶解，溶液（so-&#x3D;se- 分离 + lut&#x3D;loose解开 + 名词后缀-ion。解开→解决）</p><blockquote><p>lose失败的意思就是由loose解开得来，意为“与胜利远离”，就是失败了</p></blockquote><p>solve v. 解决，解答   soluble adj. 可溶的</p><p>resolve v. 决心；（使）分解，溶解；决议 n. 解决；决心（re-再、反复表强调+solve解决。⼀定解决→决心 ）</p><p>resolution n. 坚决，决⼼；决定，决议</p><p>resolute adj. 坚决的，果断的</p><p>dissolve v.（使）溶解，（使）融化；解散，取消（dis-分开+solve。分解、溶解）</p><hr><h4 id="lose-loss和loose区分"><a href="#lose-loss和loose区分" class="headerlink" title="lose,loss和loose区分"></a>lose,loss和loose区分</h4><p>lose [lu:z] v. 丢失，迷路，输掉，亏本，失败，⾛慢，使沉湎于</p><p>loss [lɔs, lɔ:s] n. 丧失，遗失；损失，损耗，亏损；失败</p><p>loose [lu:s] adj.（宽）松的；不精确的；⾃由的，散漫的</p><p>【注】lose和loose读音是不同的</p><hr><p>loosen v. 解开，放松（loose+en）</p><p>undo v. 松开，解开</p><hr><p>⭐luxury n. 奢侈，华贵；奢侈品 adj. 奢华的，豪华的（lux&#x3D;loose松开。没有节制&#x3D;&gt;奢侈）</p><p>luxurious [lʌɡ’ʒʊrɪəs] adj. 奢侈的；放纵的</p><p>analyse [‘ænəlaiz] vt.（analyze）分析，分解（ana-&#x3D;on在上 + lyse&#x3D;loose解开。在事情上分解&#x3D;&gt;分析）</p><p>analysis [ə’næləsis] n.（pl.analyses）分析；分解</p><p>analytic [,ænə’lɪtik. -kəl] adj.（analytical）分析的；分解的</p><hr><p>relax [rɪ’læks] v.（使）松驰，放松（re-回+lax&#x3D;lose。回到松懈的状态→放松）</p><p>release [rɪ’li:s] v. 释放，解放；发表，发⾏ n. 释放，豁免，放松（re-回+lease&#x3D;loose。撒⼿→释放）</p><p>relish [‘relɪʃ] n. 美味，味道，调味品，⻝欲，乐趣 v. 喜欢，品味（re-回+lish&#x3D;loose。释放⾹味→美味）</p><p>dilute [dai’lju:t, di-] vt. 稀释，冲淡 adj. 稀释的，冲淡的（di-&#x3D;dis分 开+lute&#x3D;loose。分解→稀释。对比dissolve溶解 ）</p><blockquote><p>Large classes dilute the quality of education that children receive.</p><p>大班上课会降低孩⼦所受教育的质量。</p></blockquote><p>laundry [‘lɔ:ndri, ‘lɑ:n-] n. 洗⾐房（店）；待洗⾐物，所洗⾐物（laund&#x3D;loose解开。与赃物分开冲洗）</p><p>lavatory [‘lævətəri, tɔ:ri] n. 厕所，盥洗室（lavat&#x3D;laund）</p><p><img src="https://s2.loli.net/2022/06/09/ScVlbMPnwyh5BoQ.jpg"></p><p>这个是飞机上你可以看到的厕所标志，下面的vacant是空的，未被占用的意思</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li><input disabled="" type="checkbox"> interrupt和interpret区分</li><li><input disabled="" type="checkbox"> representative和agent区分</li><li><input checked="" disabled="" type="checkbox"> lose,loss和loose区分</li><li><input checked="" disabled="" type="checkbox"> ⭐solution n. 解答，解决办法；溶解，溶液（so-&#x3D;se- 分离 + lut&#x3D;loose解开 + 名词后缀-ion。解开→解决）</li></ul>]]></content>
      
      
      <categories>
          
          <category> Learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研英语 </tag>
            
            <tag> 单词 </tag>
            
            <tag> 考研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正斜杠(&quot; / &quot;)和反斜杠(&quot; \ &quot;)的区别</title>
      <link href="/2022/05/02/forwardAndBackwordSlash/"/>
      <url>/2022/05/02/forwardAndBackwordSlash/</url>
      
        <content type="html"><![CDATA[<h1 id="正斜杠-“-x2F-“-和反斜杠-“-“-的区别"><a href="#正斜杠-“-x2F-“-和反斜杠-“-“-的区别" class="headerlink" title="正斜杠(“ &#x2F; “)和反斜杠(“ \ “)的区别"></a>正斜杠(“ &#x2F; “)和反斜杠(“ \ “)的区别</h1><blockquote><p>反斜杠“\”是电脑出现了之后为了表示程序设计里的特殊含义才发明的专用标点。所以除了程序设计领域外，任何地方都不应该使用反斜杠。</p></blockquote><p><img src="https://s2.loli.net/2022/03/28/AnhzNDmES4yCteo.png" alt="slash"></p><p>英语：</p><blockquote><p><code>/ </code>英文是forward slash, <code>\</code>是backward slash<br>        形象些比喻的话，<code>/</code>是一个人站立着向前倾倒, 而<code>\</code>是一个人站立着向后倾倒。</p></blockquote><p>在系统中的区别：</p><blockquote><p>在绝大多数地方，用的都是&#x2F;（slash），包括Mac&#x2F;Linux，也包括URL。&#x3D;&#x3D;你唯一需要记住的是，Microsoft这个怪鸡在自己的操作系统里面偏要用\（backslash），使得自己与众不同。&#x3D;&#x3D;</p></blockquote><p>在Unix系统中，&#x2F;表示目录；\表示跳脱字符将特殊字符变成一般字符<br>Windows由于使用斜杠&#x2F;作为DOS命令提示符的参数标志了，为了不混淆，所以采用反斜杠\作为路径分隔符。所以目前windows系统上的文件浏览器都是用反斜杠\作为路径分隔符。<br>随着发展，DOS系统已经被淘汰了，命令提示符也用得很少，斜杠和反斜杠在大多数情况下可以互换，没有影响。现在在cmd中，已经不区分正斜杠和反斜杠了！</p><p>作为目录分割符</p><ul><li><p>Unix中只用斜杠(“ &#x2F; “)</p></li><li><p>Linux中目前正反斜杠后支持</p></li></ul><p>作为运算符号</p><ul><li><p>&#x2F; 表示除法（%是取余，还有取模的）</p></li><li><p>\表示转意。比如 \n 是换行</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机知识 </tag>
            
            <tag> 趣闻 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TypeScript_如何遍历Object</title>
      <link href="/2022/05/02/ts%E9%81%8D%E5%8E%86%E5%AF%B9%E8%B1%A1/"/>
      <url>/2022/05/02/ts%E9%81%8D%E5%8E%86%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="如何遍历Object"><a href="#如何遍历Object" class="headerlink" title="如何遍历Object"></a>如何遍历Object</h1><p>不要使用 for in，<a href="https://stackoverflow.com/questions/65300784/declare-key-type-of-for-in-loop-in-typescript">参考这里</a></p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> val<span class="token punctuation">]</span> <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>当然，const是常量，如果你还需要在循环中对他进行改变，可以使用var变量</p><p>这个<code>Object.entries(obj))</code>是关键，它可以把obj（一个不可迭代的对象）转成一个可以迭代的对象</p>]]></content>
      
      
      <categories>
          
          <category> 编程文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TypeScript </tag>
            
            <tag> 编程技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语单词UNIT1</title>
      <link href="/2022/05/01/English/wordsUnit01/"/>
      <url>/2022/05/01/English/wordsUnit01/</url>
      
        <content type="html"><![CDATA[<h1 id="UNIT-1"><a href="#UNIT-1" class="headerlink" title="UNIT 1"></a>UNIT 1</h1><h2 id="abandon相关"><a href="#abandon相关" class="headerlink" title="abandon相关"></a>abandon相关</h2><p>abandon vt.放弃丢弃</p><p>（①a-&#x3D;at 朝向，处于…中 + bandon 禁令 &#x3D;&gt; 处于禁令中 —&gt; 放弃自身权利）</p><p>同源词汇</p><ul><li><p>band n.条，带，乐队（绑在一起的）一群 v.绑</p></li><li><p>bind v.捆，绑，包括</p></li></ul><p>bound adj.束缚的，一定的（当你做一件事，会遇到另一个绑定的事）</p><p>n.界限 v.&amp;n.跳（跃）</p><blockquote><p>You’re bound to feel nervous about your interview.</p></blockquote><p>bounce n.&#x2F;vi. 弹起 （拟声词：蹦）</p><p>boundary n. 边界线</p><p>bandage n. 绷带  v. 用绷带扎（读音很相似）</p><p>husband n.丈夫（hus&#x3D;house; hut 茅屋）（与房子绑定的人）</p><p>bend v.（使）弯曲；屈从  n. 弯曲；曲折（给射箭的弓绑弦—&gt;弓弯曲了）</p><p>bond n.结合（物），粘接（剂）；债券（本金与利息绑定）契约（绑定言行）</p><p>bundle n. 捆，包，束</p><blockquote><p>a bundle of money 一捆钱</p></blockquote><p>bunch n.（一）束，捆，串</p><hr><h4 id="bundle-amp-bunch区分："><a href="#bundle-amp-bunch区分：" class="headerlink" title="bundle&amp;bunch区分："></a>bundle&amp;bunch区分：</h4><p>bundle是用外力将不相关的东西绑在一起</p><p>bunch是天生的，自然就在一起</p><hr><p>banner n. 横幅，条状的旗（帜）（band条带 + er）</p><h2 id="abatement相关"><a href="#abatement相关" class="headerlink" title="abatement相关"></a>abatement相关</h2><p>abatement n. 减（免）税，打折，减少</p><p>（a-&#x3D;ad&#x3D;at 朝，去 + bate&#x3D;beat 打 –&gt; 去打压）</p><p>beat n.敲打；（心脏等）跳动 v.打败 <strong>（连击）</strong></p><p>hit v.打击 n.击中，成功而风行一时的事物 <strong>（单击）</strong></p><blockquote><p>They’ve released an album of their greatest hits(冲击人们而流行).</p></blockquote><p>battle n. 战役战斗 v. 战斗，斗争</p><p>combat v.&amp;n.战斗，搏斗 （com 来 + bat&#x3D;beat –&gt; 来一起打）</p><blockquote><p>to combat crime 可作动词</p></blockquote><p>come v.来，出现于，产生，是，成为，开始</p><p>bat n. 球拍，球棒；蝙蝠（①击打工具②蝙蝠拍打翅膀的声音：“啪”）</p><blockquote><p>batman 蝙蝠侠</p></blockquote><hr><p>程度依次减轻</p><p>war 战争 –&gt; battle 战役 –&gt; combat 打架</p><hr><p>fight v.&amp;n. 打（仗），搏斗</p><p>conflict n. 战斗，冲突 v.（with）抵触</p><p>battery n. 电池（组），（器具等）一组，一套</p><ul><li>batter 痛击，猛击</li></ul><p>boot n.靴，（车后座的）行李箱，解雇(一脚踢出去)</p><blockquote><p>beat 靴是给骑马人穿的，用来打马肚</p></blockquote><p>button n. 纽扣，开关（按钮） v. 扣紧</p><p>debate v.&amp;n. 争论，辩论（de 向下，彻底 –&gt;彻底打败)</p><p>bacterium n.(复)bacteria 细菌（来自希腊语bakterion棍、杆）</p><h2 id="abnormal相关"><a href="#abnormal相关" class="headerlink" title="abnormal相关"></a>abnormal相关</h2><p>abnormal adj. 反常的 （ab 离开）</p><p>nor conj.&amp;adv. 不（norm就是不偏左右的，标准）</p><p>norm n. 准则，规范</p><p>normal adj. 正常的（合乎准则的）</p><p>normalization n. 正常化</p><p>enormous adj. 巨大的，庞大的（e- 向外 -ous …的。超出规范的，超出本来体积的）</p><h2 id="aboard相关"><a href="#aboard相关" class="headerlink" title="aboard相关"></a>aboard相关</h2><p>aboard adv.&amp;prep. 在船(飞机，车)上，上传（在板上）</p><p>blackboard 黑板</p><p>board n. 板，全体委员（围着板坐的），伙食（板上的食物）  v. 上船</p><p>embark v. (使)上船，着手，从事（em&#x3D;in 进入 + bark 树皮–&gt;木船 &#x3D;&gt;开始新项目）</p><p>border n. 便捷 v. 交界，接近（专指国界）（船只的边缘&#x3D;&gt;边界国界）</p><p>cupboard n. 碗柜</p><p>keyboard n. 键盘 vt. 用键盘输入</p><p>abroad adv. 到国外，在传播，在流传（去&#x2F;在宽广的地方）</p><p>broad adj. 宽的，广阔的</p><p>overseas adj. 外国的，海外的  adv. 在海外</p><p>sea 海，大量</p><p>soul n. 灵魂，心灵，精神，精力，人</p><p>broadcast v.&amp;n. 广播</p><p>cast v. 投，扔，铸造（投入黄金），投票 n. 演员表（投在大屏幕上）</p><p>fore adv. 在前面  adj. 先前的，在前部  n. 前部</p><blockquote><p>before 以前(be&#x3D;是 + fore &#x3D;&gt;是前面的) </p></blockquote><p>forecast v.&amp;n. 预测预报（提前播出来）</p><p>breadth n. 宽度，幅度</p><blockquote><p>long&#x2F;length&amp;wide&#x2F;width</p></blockquote><h2 id="abolish相关"><a href="#abolish相关" class="headerlink" title="abolish相关"></a>abolish相关</h2><p>abolish vt. 废除（法律，习惯等）；取消（ab-离开 + ol 生长 + ish v.后缀 &#x3D;&gt; 不再生长）</p><p>old adj. 年老的</p><p>adult 成年人（ad- 朝 + ult&#x3D;音似old 去长大）</p><p>adolescent n. 青少年 adj. 青春期的（泛指年轻人；adolesc&#x3D;adult + ent adj后缀&#x3D;&gt; 去长大的）</p><p>teenager（专指十几岁的）（teen 十 + age 岁 + er 人）</p><p>elder adj. 年长的  n. 长辈</p><p>elderly adj. 较老的，年长的 n. 到了晚年的人</p><p>altitude n. 高度海拔，高处，高地（alt&#x3D;old 生长的，高的 + itude 名词后缀）</p><p>attitude n. 态度，看法</p><p>enhance v. 提高，增强（en&#x3D;in 注入，加强 + hance&#x3D;old 使生长）</p><p>coalition n. 结合体，同盟；联合，结合（co&#x3D;com 共同 + al 生长 + item n.后缀&#x3D;&gt;共同生长）</p><p>obsolete adj. 已废弃的，过时的（obs&#x3D;ob 相反 + olete&#x3D;old &#x3D;&gt; 不再生长的）</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li><p><input disabled="" type="checkbox"> band和bind区分</p><p>band n. 条，带，乐队 v.绑</p><p>bind v. 捆，绑，包括</p></li><li><p><input disabled="" type="checkbox"> war,battle,combat区分</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研英语 </tag>
            
            <tag> 单词 </tag>
            
            <tag> 考研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Youtube_SpringBoot+Angular实战</title>
      <link href="/2022/04/26/%5BYoutube%5DSpringBoot+Angular%E5%AE%9E%E6%88%98/"/>
      <url>/2022/04/26/%5BYoutube%5DSpringBoot+Angular%E5%AE%9E%E6%88%98/</url>
      
        <content type="html"><![CDATA[<h1 id="使用Springboot和angular开发web项目"><a href="#使用Springboot和angular开发web项目" class="headerlink" title="使用Springboot和angular开发web项目"></a>使用Springboot和angular开发web项目</h1><h2 id="这个教程是面对谁的"><a href="#这个教程是面对谁的" class="headerlink" title="这个教程是面对谁的"></a>这个教程是面对谁的</h2><p>&#x3D;&#x3D;初学者&#x3D;&#x3D;，但前提是你熟悉各种java，nodejs，angular环境的安装，初步熟悉Java代码，明白JPA、JDBC等数据库交互的大概原理和使用方法</p><h1 id="后端部分"><a href="#后端部分" class="headerlink" title="后端部分"></a>后端部分</h1><h2 id="springboot项目创建"><a href="#springboot项目创建" class="headerlink" title="springboot项目创建"></a>springboot项目创建</h2><p>准备spring的依赖和项目POM参数</p><p>在<a href="https://start.spring.io/">spring快速开始界面</a>，选择你的参数</p><p>可以点击explore查看具体的pom文件参数，也可以点击generate直接下载工程文件</p><h2 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h2><p>创建model，与数据库里的数据产生映射</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Entity</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Employee</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">&#123;</span><span class="token comment">//    @Id make it to be the primary key</span>    <span class="token annotation punctuation">@Id</span>    <span class="token annotation punctuation">@GeneratedValue</span><span class="token punctuation">(</span>strategy <span class="token operator">=</span> <span class="token class-name">GenerationType</span><span class="token punctuation">.</span>AUTO<span class="token punctuation">)</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>nullable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> updatable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> email<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> jobTitle<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> phone<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> imageUrl<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>nullable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> updatable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> employeeCode<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>有几个注解你要认识</p><ul><li>@Entity<br><code>@Entity</code> make sure that this class is mapped to any database that we have configured on the classpath</li><li>@Id<br>告诉springboot这是Id</li><li>@GeneratedValue(strategy &#x3D; GenerationType.AUTO)<br>告诉spring用何种方式生成这些值</li><li>@Column(nullable &#x3D; false, updatable &#x3D; false)<br>这是告诉Spring注解的这一行在数据库中不能为空，一旦赋值也不能被更新</li></ul><p>接下来配置一些数据库选项</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment">#MySQL Configuration</span><span class="token attr-name">spring.datasource.url</span><span class="token punctuation">=</span><span class="token attr-value">jdbc:mysql://localhost::3306/employeemanager</span><span class="token attr-name">spring.datasource.username</span><span class="token punctuation">=</span><span class="token attr-value">root</span><span class="token attr-name">spring.datasource.password</span><span class="token punctuation">=</span><span class="token attr-value">123456</span><span class="token attr-name">spring.jpa.show-sql</span><span class="token punctuation">=</span><span class="token attr-value">true</span><span class="token attr-name">spring.jpa.hibernate.ddl-auto</span><span class="token punctuation">=</span><span class="token attr-value">update</span><span class="token comment">#设置数据库引擎</span><span class="token attr-name">spring.jpa.properties.hibernate.dialect</span><span class="token punctuation">=</span><span class="token attr-value">org.hibernate.dialect.MySQL5Dialect</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="会出现的问题"><a href="#会出现的问题" class="headerlink" title="会出现的问题"></a>会出现的问题</h3><p>springboot首先会报<code>CLIENT_PLUGIN_AUTH is required.</code></p><p>原因如下，是版本的问题</p><blockquote><p>The Spring Boot project creator will download the latest MySQL connector (currently Version 8) so if you are running an older version of MySQL then the CLIENT_PLUGIN_AUTH error probably results from this.</p></blockquote><p>你需要在pom.xml文件中修改mysql连接的版本</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.1.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后确保<code>#MySQL Configuration</code>中有</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">spring.datasource.driver-class-name</span><span class="token punctuation">=</span><span class="token attr-value">com.mysql.jdbc.Driver</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>即可连接成功</p><p>如果你的数据库已经存在，就可以正确连接，并且Hibernat会帮你自动创建表，表名就是你的实体类名称</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Hibernate: create table employee (id bigint not null, email varchar(255), employee_code varchar(255) not null, image_url varchar(255), job_title varchar(255), name varchar(255), phone varchar(255), primary key (id)) engine&#x3D;MyISAMHibernate: create table hibernate_sequence (next_val bigint) engine&#x3D;MyISAMHibernate: insert into hibernate_sequence values ( 1 )<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="创建repo仓库"><a href="#创建repo仓库" class="headerlink" title="创建repo仓库"></a>创建repo仓库</h3><p>我们需要一种方式来保存这个表中的内容，Jpa就是我们的mechanism</p><p>建立一个接口，接口拓展Jpa仓库，我们需要告诉Jpa，这个仓库是为哪个类准备的，并且告诉它主键的类型</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">EmployeeRepo</span> <span class="token keyword">extends</span> <span class="token class-name">JpaRepository</span><span class="token generics"><span class="token punctuation">&lt;</span>employee<span class="token punctuation">,</span><span class="token class-name">Long</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="创建Service"><a href="#创建Service" class="headerlink" title="创建Service"></a>创建Service</h3><p>有了接口，我们需要使用服务，这样我们就可以在controller中使用它对仓库进行操作</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@Transactional</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EmployeeService</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">EmployeeRepo</span> employeeRepo<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">public</span> <span class="token class-name">EmployeeService</span><span class="token punctuation">(</span><span class="token class-name">EmployeeRepo</span> employeeRepo<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>employeeRepo <span class="token operator">=</span> employeeRepo<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里有几点</p><ol><li>@Service</li></ol><p>这是声明这个类是服务</p><ol start="2"><li>@Autowired</li></ol><p>注入employee对象</p><ol start="3"><li>@Transactional</li></ol><p>使用这个注解的类或者方法表示该类里面的所有方法或者这个方法的事务由spring处理，来保证事务的<a href="https://so.csdn.net/so/search?q=%E5%8E%9F%E5%AD%90%E6%80%A7&spm=1001.2101.3001.7020">原子性</a>，即是方法里面对数据库操作，如果失败则spring负责回滚操作，成功则提交操作。</p><ol start="4"><li>因为我们要在服务中对仓库进行操作，所以也要引入仓库对象employeeRepo</li></ol><p>接下来我们就可以在服务类中写一些查询用户的代码，例如添加用户</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//添加用户</span>    <span class="token keyword">public</span> <span class="token class-name">Employee</span> <span class="token function">addEmp</span><span class="token punctuation">(</span><span class="token class-name">Employee</span> employee<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        employee<span class="token punctuation">.</span><span class="token function">setEmployeeCode</span><span class="token punctuation">(</span>UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> employeeRepo<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>employee<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token comment">//查询所有用户</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">></span></span> <span class="token function">findAllEmp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> employeeRepo<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token comment">//更新用户</span>    <span class="token keyword">public</span> <span class="token class-name">Employee</span> <span class="token function">updateEmp</span><span class="token punctuation">(</span><span class="token class-name">Employee</span> employee<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> employeeRepo<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>employee<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们的重点是通过id查询用户和通过Id删除用户，这会涉及两个要点问题，我们先看删除用户</p><ol><li><p>通过Id删除用户</p><p>由于employee Repo中没有定义这个方法，我们需要自己定义，所以需要在repo接口类中去实现</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">deleteEmployeeById</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>这里需要注意的是，此处的方法是spring自动识别的，你需要完整的写出delete、Employee、By等等关键字，这是重要的接口，spring无法识别的话就无法帮你生成查询语句，会报错</strong></p><p>然后在服务中写删除方法</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;删除用户    public void delEmp(Long id)&#123;        employeeRepo.delEmpById(id);    &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>&#x3D;&#x3D;这是我们自定义方法的实现方式&#x3D;&#x3D;</p></li><li><p>通过Id查询用户</p><p>首先这是一个自定义方法，所以步骤和上面的一样，其次，查询用户时可能会出现没有找到id对应用户的情况，如果这时候还是要返回employee对象，明显是有问题的。</p><p>所以我们可以返回一个异常，在repo接口类中将方法修改为</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">></span></span> <span class="token function">findEmployeeById</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>Optional 类是一个可以为null的容器对象。如果值存在则isPresent()方法会返回true，调用get()方法会返回该对象。</p><p>Optional 是个容器：它可以保存类型T的值，或者仅仅保存null。Optional提供很多有用的方法，这样我们就不用显式进行空值检测</p><p>Optional 类的引入很好的解决空指针异常。</p></blockquote><p>然后可以将方法写为</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//通过id查找用户</span>    <span class="token keyword">public</span> <span class="token class-name">Employee</span> <span class="token function">findEmployeeById</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> employeeRepo<span class="token punctuation">.</span><span class="token function">findEmployeeById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">orElseThrow</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">new</span> <span class="token class-name">UserNotFoundException</span><span class="token punctuation">(</span><span class="token string">"user by id "</span> <span class="token operator">+</span> id <span class="token operator">+</span> <span class="token string">" was not found."</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>你可以看到我们新建了一个异常对象，<code>orElseThrow()</code>在前面的方法出现异常时会返回<code>UserNotFoundException</code>定义的信息<code>&quot;user by id &quot; + id + &quot; was not found.&quot;</code>。</p><p>为了使这个异常类可以使用，我们需要将异常类方法写一下，新建一个包exception，写如下类，需要继承<code>RuntimeException</code></p><pre class="line-numbers language-none"><code class="language-none">public class UserNotFoundException extends RuntimeException&#123;    public UserNotFoundException(String s) &#123;        super(s);    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>super(s)可以调用父类的有参方法把s这个字符串传进去</p><p>&#x3D;&#x3D;这是我们处理异常的方式&#x3D;&#x3D;</p></li></ol><h3 id="回顾api设计，创建controller"><a href="#回顾api设计，创建controller" class="headerlink" title="回顾api设计，创建controller"></a>回顾api设计，创建controller</h3><p><img src="https://s2.loli.net/2022/04/21/7N6RshTckyH3W8G.png" alt="image-20220421164623585"></p><p>我们现在已经完成了数据库和服务的部分，现在需要controller来控制用户的操作</p><p>controller中不应该放置真正的逻辑代码，应该专注于接收请求，处理请求和返回请求</p><p>我们新建一个EmployeeResour.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>hengxing<span class="token punctuation">.</span>employeemanager</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>hengxing<span class="token punctuation">.</span>employeemanager<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">Employee</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>hengxing<span class="token punctuation">.</span>employeemanager<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">EmployeeService</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpStatus</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">ResponseEntity</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token comment">/** * @projectName: employeemanager * @package: com.hengxing.employeemanager * @className: EmployeeResource * @author: HengxingStu * @description: 整个程序的控制器，专注于处理请求 * @date: 4/21/2022 4:54 PM * @version: 1.0 */</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/employee"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EmployeeResource</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">EmployeeService</span> employeeService<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">EmployeeResource</span><span class="token punctuation">(</span><span class="token class-name">EmployeeService</span> employeeService<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>employeeService <span class="token operator">=</span> employeeService<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//返回所有用户</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/all"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">></span><span class="token punctuation">></span></span> <span class="token function">getAllEmployees</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">></span></span> allEmp <span class="token operator">=</span> employeeService<span class="token punctuation">.</span><span class="token function">findAllEmp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>allEmp<span class="token punctuation">,</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span>OK<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//通过id返回用户</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/find/&#123;id&#125;"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">></span></span> <span class="token function">getEmployeeById</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> id<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Employee</span> employee <span class="token operator">=</span> employeeService<span class="token punctuation">.</span><span class="token function">findEmployeeById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>employee<span class="token punctuation">,</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span>OK<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//添加用户</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/add"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">></span></span> <span class="token function">addEmployee</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">Employee</span> employee<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Employee</span> newEmployee <span class="token operator">=</span> employeeService<span class="token punctuation">.</span><span class="token function">addEmp</span><span class="token punctuation">(</span>employee<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>newEmployee<span class="token punctuation">,</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span>CREATED<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//更新用户</span>    <span class="token annotation punctuation">@PutMapping</span><span class="token punctuation">(</span><span class="token string">"/update"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">></span></span> <span class="token function">updateEmployee</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">Employee</span> employee<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Employee</span> updateEmployee <span class="token operator">=</span> employeeService<span class="token punctuation">.</span><span class="token function">updateEmp</span><span class="token punctuation">(</span>employee<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>updateEmployee<span class="token punctuation">,</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span>OK<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//删除用户</span>    <span class="token annotation punctuation">@DeleteMapping</span><span class="token punctuation">(</span><span class="token string">"/delete/&#123;id&#125;"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> <span class="token function">deleteEmployee</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> id<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        employeeService<span class="token punctuation">.</span><span class="token function">delEmp</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token class-name">HttpStatus</span><span class="token punctuation">.</span>OK<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们来逐步拆解这些代码</p><p>首先，这个文件是整个程序的控制器，需要处理请求，所以我们需要告诉spring这是一个rest风格的controller，使用<code>@RestController</code></p><p><code>@RequestMapping(&quot;/employee&quot;)</code>告诉spring将<code>/employee</code>的请求发送给当前类或方法来处理，并且可以层层递进</p><p>由于在controller中我们需要使用服务，所以也需要对服务进行声明和注入<code>@RestController</code></p><p>编写Mapping，每个mapping就对应一个api，我们可以使用如下的http方式</p><ul><li><p><code>@GetMapping(&quot;/all&quot;)</code></p><p>通过get方法，这种方法只能接收零星的参数，接收参数时使用实例&lt;通过id返回用户&gt;方法中的方式，要注意的是，如下图所示的两个字段必须相同</p><p><img src="https://s2.loli.net/2022/04/21/XTr7NKpcUSZGL1l.png" alt="image-20220421170534313"></p></li><li><p><code>@PostMapping(&quot;/add&quot;)</code></p><p>通过post方法，可以在requestbody中通过JSON等方式传递信息，使用方法是在controller的mapping方法参数中注解<code>@RequestBody</code></p></li><li><p><code>@PutMapping(&quot;/update&quot;)</code></p><p>使用put方法，因为我们要修改数据库中的信息&#x3D;&#x3D;这一部分存疑，我并不知道为何使用put，需要补习http协议的知识&#x3D;&#x3D;</p></li><li><p><code>@DeleteMapping(&quot;/delete/&#123;id&#125;&quot;)</code></p><p>也是通过get方法，只不过会告诉spring这是一个删除操作，方法中也可以在<code>ResponseEntity&lt;?&gt;</code>直接写问号，因为你不必返回任何信息，只需要返回状态码就行</p></li></ul><h3 id="使用PostMan进行api调试"><a href="#使用PostMan进行api调试" class="headerlink" title="使用PostMan进行api调试"></a>使用PostMan进行api调试</h3><p>postman可以帮我们发送各种http请求，比浏览器方便多了，安装方法略，自己找吧，应用总在更新，每天的安装方式都不同</p><p>或者可以使用<a href="https://httpie.io/">http Pi</a>，这是一个完全命令行的工具</p><h4 id="查询用户"><a href="#查询用户" class="headerlink" title="查询用户"></a>查询用户</h4><p>如果我们使用get方法向<code>http://localhost:8080/employee/all</code>发送请求，可以得到回复<code>[]</code>，里面没有信息是因为你还没添加用户，不过你可以在你的调试窗口看到http的状态码</p><p><img src="https://s2.loli.net/2022/04/21/aXvR6MoeCqiQlTf.png" alt="image-20220421183904855"></p><h4 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h4><p>使用POST方式向<code>http://localhost:8080/employee/add</code>发送请求，并在Body中附带你要添加的用户信息</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"email"</span><span class="token operator">:</span> <span class="token string">"daniel@encrpt.com"</span><span class="token punctuation">,</span>  <span class="token property">"imageUrl"</span><span class="token operator">:</span> <span class="token string">"https://www.bootdey.com/img/Content/avatar/avatar1.png"</span><span class="token punctuation">,</span>  <span class="token property">"jobTitle"</span><span class="token operator">:</span> <span class="token string">"JavaScript"</span><span class="token punctuation">,</span>  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Daniel Craig"</span><span class="token punctuation">,</span>  <span class="token property">"phone"</span><span class="token operator">:</span> <span class="token string">"1331497835"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>你会得到以下回复</p><pre class="line-numbers language-none"><code class="language-none">&#123;  &quot;id&quot;: 1,  &quot;name&quot;: &quot;Daniel Craig&quot;,  &quot;email&quot;: &quot;daniel@encrpt.com&quot;,  &quot;jobTitle&quot;: &quot;JavaScript&quot;,  &quot;phone&quot;: &quot;1331497835&quot;,  &quot;imageUrl&quot;: &quot;https:&#x2F;&#x2F;bootdey.com&#x2F;img&#x2F;Content&#x2F;anatar&#x2F;avatar1.png&quot;,  &quot;employeeCode&quot;: &quot;a34c8fd0-e3d2-4b5c-837e-a123990f0be0&quot;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="更新用户"><a href="#更新用户" class="headerlink" title="更新用户"></a>更新用户</h4><p>使用put方法<code>http://localhost:8080/employee/update</code>进行修改</p><p>不过要上传完整信息</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>        <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Daniel Craig"</span><span class="token punctuation">,</span>        <span class="token property">"email"</span><span class="token operator">:</span> <span class="token string">"daniel@encrpt.com"</span><span class="token punctuation">,</span>        <span class="token property">"jobTitle"</span><span class="token operator">:</span> <span class="token string">"JavaScript"</span><span class="token punctuation">,</span>        <span class="token property">"phone"</span><span class="token operator">:</span> <span class="token string">"1331497835"</span><span class="token punctuation">,</span>        <span class="token property">"imageUrl"</span><span class="token operator">:</span> <span class="token string">"https://bootdey.com/img/Content/avatar/avatar1.png"</span><span class="token punctuation">,</span>        <span class="token property">"employeeCode"</span><span class="token operator">:</span> <span class="token string">"a34c8fd0-e3d2-4b5c-837e-a123990f0be0"</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例如这里我们修改了图片连接，你也可以自行修改更明显的地方</p><h5 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h5><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Exception in thread &quot;main&quot; org.hibernate.InstantiationException: No default constructor for entity:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这是以为你的实体类没有默认的构造方法，加上就好了，在本例中是这样的</p><p><code>public Employee() &#123;&#125;</code></p><h2 id="前端部分-angular"><a href="#前端部分-angular" class="headerlink" title="前端部分-angular"></a>前端部分-angular</h2><h3 id="前端设计"><a href="#前端设计" class="headerlink" title="前端设计"></a>前端设计</h3><p>现在来看我们的前端部分的设计</p><p><img src="https://s2.loli.net/2022/04/21/PkfTGUFuASDtCH8.png" alt="image-20220421192055948"></p><p>UI就是用户在页面看到的，UI会连接到一个component中，component又可以访问一个service，这个service就是我们访问后端的方法</p><p>关于Angular如何使用可以去看官网文档</p><p>首先需要Angular中创建一个Service，这是我们访问后端的http服务</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Injectable <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@angular/core'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Observable <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'rxjs'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> HttpClient <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@angular/common/http'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Employee <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./employee'</span><span class="token punctuation">;</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">Injectable</span></span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  providedIn<span class="token operator">:</span><span class="token string">'root'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">EmployeeService</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">private</span> apiServerUrl <span class="token operator">=</span> <span class="token string">'http://localhost:8080'</span><span class="token punctuation">;</span>  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> http<span class="token operator">:</span> HttpClient<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span>  <span class="token keyword">public</span> <span class="token function">getEmployees</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Observable<span class="token operator">&lt;</span>Employee<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span>Employee<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>apiServerUrl<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/employee/all</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">public</span> <span class="token function">addEmploye</span><span class="token punctuation">(</span>employee<span class="token operator">:</span> Employee<span class="token punctuation">)</span><span class="token operator">:</span> Observable<span class="token operator">&lt;</span>Employee<span class="token operator">></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">post</span><span class="token generic class-name"><span class="token operator">&lt;</span>Employee<span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>apiServerUrl<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/employee/add</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>employee<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">public</span> <span class="token function">updateEmploye</span><span class="token punctuation">(</span>employee<span class="token operator">:</span> Employee<span class="token punctuation">)</span><span class="token operator">:</span> Observable<span class="token operator">&lt;</span>Employee<span class="token operator">></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">put</span><span class="token generic class-name"><span class="token operator">&lt;</span>Employee<span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>apiServerUrl<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/employee/update</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>employee<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">public</span> <span class="token function">deleteEmploye</span><span class="token punctuation">(</span>employeeId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> Observable<span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">delete</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>apiServerUrl<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/employee/delete/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>employeeId<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>@Injectable</code>可以将服务作为依赖注入到组件中，更多关于此的内容请查看<a href="https://angular.cn/guide/architecture-services">angular依赖注入</a>，下图是依赖注入的原理</p><p><img src="https://angular.cn/generated/images/guide/architecture/injector-injects.png" alt="angular依赖注入"></p><p>你可以看到我们定义了访问api的各种请求，但这其中用到了一些实体类的内容，Angular并不能直接访问spring的内部类，所以我们需要在angular中创建一个镜像类</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Employee</span><span class="token punctuation">&#123;</span>  id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>  email<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>  jobTitle<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>  phone<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>  imageUrl<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>  employeeCode<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>定义好了服务，你就可以在component中使用它，先在构造方法中注入服务</p><h3 id="报错-1"><a href="#报错-1" class="headerlink" title="报错"></a>报错</h3><p><code>Uncaught Error: Type HttpClient does not have &#39;ɵmod&#39; property</code></p><p>stackOverflow的回答</p><ol><li>Don’t import HttpClient on app.module.ts</li><li>Don’t import HttpClientModule in app.component.ts</li><li>Don’t inject HttpClient directly in your app.component.ts, instead use a service.</li></ol><p>This are 3 errors&#x2F;bad practices I can see!</p><p>你可以查看这位回答者在下面给出了进一步的回答</p><blockquote><p>tutorial must be old,In angular we should import modules, i.e HttpClientModule.this will load all exported classes inside this particular module &amp; after that you can just use HttpClient as a injected variable inside component&#x2F;service constructor. Try creating module yourself to understand it better.</p></blockquote><p>言下之意就是&#x3D;&#x3D;应该引入HttpClientModule&#x3D;&#x3D;这个模组而不是HttpClient这个模块</p><h3 id="启动angular服务器"><a href="#启动angular服务器" class="headerlink" title="启动angular服务器"></a>启动angular服务器</h3><p>这时，你会发现你得到了一个错误<code>Access to XMLHttpRequest at &#39;http://localhost:8080/employee/all&#39; from origin &#39;http://localhost:4200&#39; has been blocked by CORS policy: No &#39;Access-Control-Allow-Origin&#39; header is present on the requested resource.</code></p><p>因为你的web服务器和后端服务器使用的是不同的域名，后端拒绝了你的访问，你可以查看<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS">跨域资源分享文档</a></p><p>为了解决跨域问题，你需要在后端中设置<code>CORS configuration</code>，在SpringBootApplication启动类中添加如下方法</p><pre class="line-numbers language-none"><code class="language-none">@Beanpublic CorsFilter corsFilter()&#123;CorsConfiguration corsConfiguration &#x3D; new CorsConfiguration();corsConfiguration.setAllowCredentials(true);corsConfiguration.setAllowedOrigins(Arrays.asList(&quot;http:&#x2F;&#x2F;localhost:4200&quot;));corsConfiguration.setAllowedHeaders(Arrays.asList(&quot;Origin&quot;, &quot;Access-Control-Allow-Origin&quot;,&quot;Content-Type&quot;,&quot;Accept&quot;, &quot;Authorization&quot;, &quot;Origin, Accept&quot;, &quot;X-Requested-With&quot;,&quot;Access-Control-Request-Method&quot;, &quot;Access-Control-Request-Headers&quot;));corsConfiguration.setExposedHeaders(Arrays.asList(&quot;Origin&quot;,&quot;Content-Type&quot;,&quot;Accept&quot;,&quot;Authorization&quot;, &quot;Access-Control-Allow-Origin&quot;, &quot;Access-Control-Allow-Credentials&quot;));corsConfiguration.setAllowedMethods(Arrays.asList(&quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;DELETE&quot;, &quot;OPTIONS&quot;));UrlBasedCorsConfigurationSource urlBasedCorsConfigurationSource &#x3D; new UrlBasedCorsConfigurationSource();urlBasedCorsConfigurationSource.registerCorsConfiguration(&quot;&#x2F;**&quot;,corsConfiguration);return new CorsFilter(urlBasedCorsConfigurationSource);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>app.component.html</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nav<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navbar navbar-expand-lg navbar-dark bg-dark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navbar-brand<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>Employee Manager<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navbar-toggler<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">data-toggle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>collapse<span class="token punctuation">"</span></span> <span class="token attr-name">data-target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#navbarColor02<span class="token punctuation">"</span></span> <span class="token attr-name">aria-controls</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navbar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navbar-toggler-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>collapse navbar-collapse<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navbarColor02<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navbar-nav mr-auto<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nav-item active<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nav-link<span class="token punctuation">"</span></span> <span class="token attr-name">data-toggle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal<span class="token punctuation">"</span></span> <span class="token attr-name">data-target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#exampleModal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Add Employee <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sr-only<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>(current)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-inline my-2 my-lg-0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>key<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>searchName<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control mr-sm-2<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Search employees..<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let employee of employees<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-6 col-xl-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card m-b-30<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-body row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;employee?.imageUrl&#125;&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img-fluid rounded-circle w-60<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-6 card-title align-self-center mb-0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>Emma A. Main<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m-0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Graphics Designer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list-group list-group-flush<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list-group-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-envelope float-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>Email : <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>PaulGoyette@gmail.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list-group-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-phone float-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>Phone : 000 123-456<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-body<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>float-right btn-group btn-group-sm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-primary tooltips<span class="token punctuation">"</span></span> <span class="token attr-name">data-placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-toggle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tooltip<span class="token punctuation">"</span></span> <span class="token attr-name">data-original-title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Edit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-pencil<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-secondary tooltips<span class="token punctuation">"</span></span> <span class="token attr-name">data-placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-toggle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tooltip<span class="token punctuation">"</span></span> <span class="token attr-name">data-original-title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Delete<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-times<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>social-links list-inline mb-0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list-inline-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">data-placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-toggle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tooltip<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tooltips<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">data-original-title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Facebook<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-facebook-f<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list-inline-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">data-placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-toggle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tooltip<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tooltips<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">data-original-title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Twitter<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-twitter<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list-inline-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">data-placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-toggle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tooltip<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tooltips<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">data-original-title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Skype<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-skype<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>styless.css</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* You can add global styles to this file, and also import other style files */</span><span class="token comment">/* import Bootstrap*/</span><span class="token atrule"><span class="token rule">@import</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">'https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css'</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span></span><span class="token selector">body</span><span class="token punctuation">&#123;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> #f5f5f5<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.card</span> <span class="token punctuation">&#123;</span>  <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 1px 2px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.05<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 1px 2px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.05<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w-60</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">h1, h2, h3, h4, h5, h6</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 0 0 10px<span class="token punctuation">;</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> 600<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.social-links li a</span> <span class="token punctuation">&#123;</span>  <span class="token property">-webkit-border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>89<span class="token punctuation">,</span>206<span class="token punctuation">,</span>181<span class="token punctuation">,</span>.85<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">a</span> <span class="token punctuation">&#123;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #707070<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中，在引入employee的时候使用了<code>employee?.imageUrl</code>这个问号是为了防止服务器在emploee不存在时报错</p><p>现在介绍一种控制按钮展现页面的方法，通过统一的方法控制modal的展现</p><p>在按钮上通过<code>(click)=&quot;onOpenModal(null, &#39;add&#39;)&quot;</code>，控制并调用对应的modal，当我们点击按钮，就会触发<code>onOpenModal</code>方法，同时传入需要的参数，参数有何作用稍候解释，我们来看方法的代码</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">public</span> <span class="token function">onOpenModal</span><span class="token punctuation">(</span>employee<span class="token operator">:</span> Employee <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> mode<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> container <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'main-container'</span><span class="token punctuation">)</span>    <span class="token keyword">const</span> button <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    button<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">'button'</span><span class="token punctuation">;</span>    button<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>    button<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'data-toggle'</span><span class="token punctuation">,</span><span class="token string">'modal'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>mode <span class="token operator">===</span> <span class="token string">'add'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    button<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'data-target'</span><span class="token punctuation">,</span><span class="token string">'#addEmployeeModal'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>mode <span class="token operator">===</span> <span class="token string">'edit'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      button<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'data-target'</span><span class="token punctuation">,</span><span class="token string">'#updateEmployeeModal'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>mode <span class="token operator">===</span> <span class="token string">'delete'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      button<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'data-target'</span><span class="token punctuation">,</span><span class="token string">'#deleteEmployeeModal'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    container<span class="token operator">?.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span><span class="token punctuation">;</span>    button<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>进入onOpenModal方法后，我们首先要做的是获取容器，通过Id找到了main-container，在这个容器中创建新的元素，我们这里创建的是button，为其附带了modal的参数，并且设置了不显示，通过我们传入的参数，我们可以通过id设置对应的<code>data-target</code>，指向各个modal。</p><p>最后一步就是通过在container中添加子元素，并点击，完成了业务逻辑。</p><p>在调试整个项目的逻辑时可以用开发者工具</p><p><img src="https://s2.loli.net/2022/04/22/X1W5lnIP3hQMUJz.png" alt="image-20220422185820205"></p><h3 id="angular表单"><a href="#angular表单" class="headerlink" title="angular表单"></a>angular表单</h3><p>若要使用angular的表单，在<code>app.module.ts</code>中引入</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> FormsModule <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@angular/forms'</span><span class="token punctuation">;</span>imports<span class="token operator">:</span> <span class="token punctuation">[</span>    FormsModule  <span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>引入表单后就可以直接使用</p><h4 id="添加员工组件"><a href="#添加员工组件" class="headerlink" title="添加员工组件"></a>添加员工组件</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- Add Employee Modal --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal fade<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addEmployeeModal<span class="token punctuation">"</span></span> <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dialog<span class="token punctuation">"</span></span> <span class="token attr-name">aria-labelledby</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addEmployeeModalLabel<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-dialog<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>document<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-title<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addEmployeeModalLabel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Add Employee<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>close<span class="token punctuation">"</span></span> <span class="token attr-name">data-dismiss</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal<span class="token punctuation">"</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Close<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&times;">&amp;times;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-body<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">#addForm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ngForm<span class="token punctuation">"</span></span> <span class="token attr-name">(ngSubmit)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onAddEmloyee(addForm)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">ngModel</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Name<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Email Address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">ngModel</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Email<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Job title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">ngModel</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jobTitle<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jobTile<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Job title<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Phone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">ngModel</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Phone<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Image URL<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">ngModel</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imageUrl<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imageUrl<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Image URL<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add-employee-form<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">data-dismiss</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Close<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addForm.invalid<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-primary<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>Save changes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在我们来解析其中的要点</p><p><strong>表单部分</strong></p><p>首先除去主要的html部分，我们要绑定form表单，所以在form标签为这个DOM对象起一个名字</p><p><code> &lt;form #addForm=&quot;ngForm&quot; (ngSubmit)=&quot;onAddEmloyee(addForm)&quot;&gt;</code></p><p>这个ngForm，我并不明白它的意思，猜想应该是绑定了表单的类型，但我的html和js方面的知识不到家，并不了解</p><p><code>(ngSubmit)</code>是绑定了方法，并将这个表单作为ngForm类型的数据传参</p><blockquote><p> []表示绑定属性，()表示绑定事件，[()]表示双向绑定</p></blockquote><p>其次，每个input中的name会被当做这个表单数据的key，所以一定要有，并为其添加<code>ngModel </code>样式</p><p><code>&lt;input type=&quot;text&quot; ngModel name=&quot;name&quot; class=&quot;form-control&quot; id=&quot;name&quot; placeholder=&quot;Name&quot; required&gt;</code></p><p>最后，为提交按钮设置表单检查，如果表单未完成，则不能点击。使用属性绑定<code>[disabled]=&quot;addForm.invalid&quot;</code></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addForm.invalid<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-primary<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>Save changes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>一旦我们点击提交，angular就会自动帮我们把表单数据作为参数传给<code>ngSubmit</code>绑定的函数</p><p><strong>逻辑部分</strong></p><p><strong>先空着</strong></p><h4 id="修改员工组件"><a href="#修改员工组件" class="headerlink" title="修改员工组件"></a>修改员工组件</h4><p>我们这次从修改按钮先来看</p><p>在html部分我们可以看到，修改标签被我们写成这样</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onOpenModal(employee , <span class="token punctuation">'</span>edit<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-primary tooltips<span class="token punctuation">"</span></span> <span class="token attr-name">data-placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-toggle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tooltip<span class="token punctuation">"</span></span> <span class="token attr-name">data-original-title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Edit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-pencil<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中的click绑定了onOpenModal方法，传入当前的employee和字符串edit。它会执行onOpenModal方法（这里我们由于传入了新的员工数据，所以需要创建一个新的对象，所以进行了更新），进而执行<code>onUpdateEmloyee</code></p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">public</span> editEmployee<span class="token operator">:</span> Employee <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">if</span> <span class="token punctuation">(</span>mode <span class="token operator">===</span> <span class="token string">'edit'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>editEmployee <span class="token operator">=</span> employee<span class="token punctuation">;</span><span class="token comment">//将接收到的参数赋值给要修改的新对象 </span>    button<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'data-target'</span><span class="token punctuation">,</span><span class="token string">'#updateEmployeeModal'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>container<span class="token operator">?.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span><span class="token punctuation">;</span>button<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token comment">/** * onUpdateEmloyee * 修改用户信息的方法 */</span> <span class="token keyword">public</span> <span class="token function">onUpdateEmloyee</span><span class="token punctuation">(</span>employee<span class="token operator">:</span> Employee<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>  <span class="token comment">//employeeService调用updateEmploye方法，这里就已经修改了，然后我们再调用subscribe重新获取用户</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>employeeService<span class="token punctuation">.</span><span class="token function">updateEmploye</span><span class="token punctuation">(</span>employee<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>    <span class="token punctuation">(</span>response<span class="token operator">:</span> Employee<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getEmployees</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span>error<span class="token operator">:</span> HttpErrorResponse<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token function">alert</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>  <span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>调用<code>employeeService</code>的<code>getEmployees</code>方法重新获取用户信息（相当于刷新界面）</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">public</span> <span class="token function">getEmployees</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>employeeService<span class="token punctuation">.</span><span class="token function">getEmployees</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>      <span class="token punctuation">(</span>response<span class="token operator">:</span> Employee<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>employees <span class="token operator">=</span> response<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">(</span>error<span class="token operator">:</span> HttpErrorResponse<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这便是我们完整的业务逻辑</p><p>现在需要在html中写出Edit Modal</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- Edit Modal --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal fade<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>updateEmployeeModal<span class="token punctuation">"</span></span> <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dialog<span class="token punctuation">"</span></span> <span class="token attr-name">aria-labelledby</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>employeeEditModalLabel<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-dialog<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>document<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>employees?.length == 0<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-lg-12 col-md-12 col-xl-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-title<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>updateEmployeeModalLabel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Edit Employee &#123;&#123;editEmployee?.name&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>close<span class="token punctuation">"</span></span> <span class="token attr-name">data-dismiss</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal<span class="token punctuation">"</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Close<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&times;">&amp;times;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-body<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">#editForm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ngForm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">ngModel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;editEmployee?.name&#125;&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">aria-describedby</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emailHelp<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token comment">&lt;!-- 这里隐藏着id和employeeCode --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span> <span class="token attr-name">ngModel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;editEmployee?.id&#125;&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span> <span class="token attr-name">ngModel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;editEmployee?.employeeCode&#125;&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userCode<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userCode<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Email Address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">ngModel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;editEmployee?.email&#125;&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Job title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">ngModel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;editEmployee?.jobTitle&#125;&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jobTitle<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jobTitle<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Job title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Phone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">ngModel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;editEmployee?.phone&#125;&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Phone<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Image URL<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">ngModel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;editEmployee?.imageUrl&#125;&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imageUrl<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imageUrl<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Image URL<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">data-dismiss</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-secondary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Close<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onUpdateEmloyee(editForm.value)<span class="token punctuation">"</span></span> <span class="token attr-name">data-dismiss</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-primary<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>Save changes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们一一介绍</p><p>首先是如何绑定表单，还是在<code>&lt;form&gt;标签</code>中写入<code>#editForm=&quot;ngForm&quot;</code>这样就将此表单声明为一个名为editForm的ngForm组件，其次在提交按钮绑定事件，调用更新方法，传入<code>editForm.value</code></p><p>其次，这里使用的是<code>editEmployee</code>这是在onOpenModal传入的参数，也就是我们要修改的对象。</p><p>你还可以看到id和employeeCode，但我们对他进行了隐藏，因为我们不希望用户修改这些信息，不过我们还是需要这些信息，因为我们如果没有id和employeeCode，我们的服务器就会误认为这是一个新的用户，为他分配新的id。</p><p><strong>Tips：清楚表单里的数据</strong></p><p>添加一个用户之后，再次点击添加，你会看到上一次添加的用户信息依然存在，解决这个问题，只需要在onAddEmloyee方法中（完成业务逻辑后）添加如下代码，就可以清空</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript">addForm<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="删除员工组件"><a href="#删除员工组件" class="headerlink" title="删除员工组件"></a>删除员工组件</h4><p>有了前两个的经验，第三个就容易多了。</p><p>首先我们知道当点击删除按钮时，会通过<code>onOpenModal</code>引导到<code>deleteEmployeeModal</code>的模组中</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- Delete Modal --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal fade<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deleteEmployeeModal<span class="token punctuation">"</span></span> <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dialog<span class="token punctuation">"</span></span> <span class="token attr-name">aria-labelledby</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deleteModelLabel<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-dialog<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>document<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-title<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deleteModelLabel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Delete Employee<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>close<span class="token punctuation">"</span></span> <span class="token attr-name">data-dismiss</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal<span class="token punctuation">"</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Close<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&times;">&amp;times;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-body<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Are you sure you want to delete employee &#123;&#123;deleteEmployee?.name&#125;&#125;?<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">data-dismiss</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>No<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onDeleteEmloyee(deleteEmployee?.id)<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-danger<span class="token punctuation">"</span></span> <span class="token attr-name">data-dismiss</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Yes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个modal中的按钮和onDeleteEmloyee方法绑定了，同时，我们需要将当前的用户的id传给删除的方法，这就需要我们再创建一个对象deleteEmployee</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">public</span> deleteEmployee<span class="token operator">:</span> Employee <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接收用户的id，调用deleteEmployee</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token comment">/**   * onDeleteEmloyee   * 删除用户信息的方法   */</span>   <span class="token keyword">public</span> <span class="token function">onDeleteEmloyee</span><span class="token punctuation">(</span>employeeId<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//employeeService调用updateEmploye方法，这里就已经修改了，然后我们再调用subscribe重新获取这个用户</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>employeeService<span class="token punctuation">.</span><span class="token function">deleteEmploye</span><span class="token punctuation">(</span>employeeId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>      <span class="token punctuation">(</span>response<span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getEmployees</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">(</span>error<span class="token operator">:</span> HttpErrorResponse<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token function">alert</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>    <span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="没有员工时的提示"><a href="#没有员工时的提示" class="headerlink" title="没有员工时的提示"></a>没有员工时的提示</h4><p>使用ngIf对数组长度进行判断，如果为零就显示</p><pre class="line-numbers language-none"><code class="language-none">&lt;!-- Notification for no employees --&gt;&lt;div *ngIf&#x3D;&quot;employees?.length &#x3D;&#x3D; 0&quot; class&#x3D;&quot;col-lg-12 col-md-12 col-xl-12&quot;&gt;  &lt;div class&#x3D;&quot;alert alert-info&quot; role&#x3D;&quot;alert&quot;&gt;    &lt;h4 class&#x3D;&quot;alert-heading&quot;&gt;NO EMPLOYEES!&lt;&#x2F;h4&gt;    &lt;p&gt;No Employees were found.&lt;&#x2F;p&gt;  &lt;&#x2F;div&gt;&lt;&#x2F;div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="纯前端的简单搜索组件"><a href="#纯前端的简单搜索组件" class="headerlink" title="纯前端的简单搜索组件"></a>纯前端的简单搜索组件</h4><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="完整的表单"><a href="#完整的表单" class="headerlink" title="完整的表单"></a>完整的表单</h2><p>通过ngsubmit来提交，可以提交</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">#registerForm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ngForm<span class="token punctuation">"</span></span> <span class="token attr-name">(ngSubmit)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>register(registerForm)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>UserName<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">ngModel</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control form-control-lg<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Enter your username<span class="token punctuation">"</span></span> <span class="token attr-name">required</span> <span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>Password<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">ngModel</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control form-control-lg<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Enter your password<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>Confirm Password Again<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">ngModel</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>passwordAgain<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>passwordAgain<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control form-control-lg<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Confirm your password again<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>NickName<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">ngModel</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nickname<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nickname<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control form-control-lg<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Enter your nickname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-center mt-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>registerForm.invalid<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-lg btn-primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Sign up<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">;</span> <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> loginService<span class="token operator">:</span>LoginService<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token function">register</span><span class="token punctuation">(</span>form<span class="token operator">:</span> NgForm<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span>value<span class="token punctuation">)</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span>value<span class="token punctuation">.</span>password <span class="token operator">==</span> form<span class="token punctuation">.</span>value<span class="token punctuation">.</span>passwordAgain<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">.</span>username <span class="token operator">=</span> form<span class="token punctuation">.</span>value<span class="token punctuation">.</span>username      <span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">.</span>password <span class="token operator">=</span> form<span class="token punctuation">.</span>value<span class="token punctuation">.</span>password      <span class="token keyword">this</span><span class="token punctuation">.</span>loginService<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span><span class="token punctuation">&#123;</span>      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"验证失败，请检查两次密码的拼写"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java JPA </tag>
            
            <tag> SpringBoot </tag>
            
            <tag> Angular </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【尚硅谷】用户画像日志记录</title>
      <link href="/2022/04/24/ITguiguUserProfile/"/>
      <url>/2022/04/24/ITguiguUserProfile/</url>
      
        <content type="html"><![CDATA[<h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><h2 id="系统准备"><a href="#系统准备" class="headerlink" title="系统准备"></a>系统准备</h2><p>Ubuntu16.04</p><p><img src="https://s2.loli.net/2022/05/01/6TJx48l2XBd1Lsc.png" alt="image-20220404141952340"></p><h2 id="Hadoop安装"><a href="#Hadoop安装" class="headerlink" title="Hadoop安装"></a>Hadoop安装</h2><p>伪分布式配置</p><p>以Hadoop2.7.5版本为例</p><p>准备好安装文件</p><p><img src="https://s2.loli.net/2022/03/29/NCtIg8ao7cO3Ehw.jpg" alt="img"></p><p><img src="https://s2.loli.net/2022/03/29/GpjSbDFnZM8mzAv.jpg" alt="img"></p><p>解压安装包</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">tar -zxvf hadoop-2.7.5.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>执行完后，在当前的目录下会出现一个名为 hadoop-2.7.5 的文件目录，这个目录就是 hadoop 的安装目录。</p><p>在 Hadoop 中包含了 3 个技术组件，分别是：</p><ul><li><p>分布式存储技术 - HDFS</p></li><li><p>分布式资源管理技术 - Yarn</p></li><li><p>分布式计算技术 - MapReduce</p></li></ul><p>那么，我们常说的 Hadoop 安装，实际上就包含了 HDFS 的安装、Yarn 的安装以及 MapReduce 的安装，我们接下来分别配置安装。</p><p>【JDK安装】</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo apt-get install openjdk-8-jdk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>检查jdk版本，是否安装成功</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">java -version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/03/29/8AD7Um9kwiNCLBR.jpg" alt="img"></p><p>成功后是这样的。</p><p>查看javahome的位置</p><p><img src="https://s2.loli.net/2022/03/29/qZH9oYPwVlJ7EBI.jpg" alt="img"></p><p>把Hadoop放到&#x2F;usr&#x2F;local下，并创建软连接</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo mv hadoop-2.7.5 &#x2F;usr&#x2F;localsudo ln -snf &#x2F;usr&#x2F;local&#x2F;hadoop-2.7.5&#x2F; &#x2F;usr&#x2F;local&#x2F;hadoop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>给Hadoop文件夹赋予权限（生产环境不推荐）</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">chmod -R 777 hadoop-2.7.5&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>配置环境变量</p><ul><li><p>局部环境变量：~&#x2F;.bashrc</p></li><li><p>全局环境变量：&#x2F;etc&#x2F;profile</p></li></ul><p>这里我图方便配置全局了</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">export HADOOP_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;hadoopexport PATH&#x3D;$PATH:$HADOOP_HOME&#x2F;bin:$HADOOP_HOME&#x2F;sbin:.&#x2F;:$JAVA_HOME&#x2F;bin#JAVA_HOMEexport JAVA_HOME&#x3D;&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;java-8-openjdk-amd64export JRE_HOME&#x3D;$JAVA_HOME&#x2F;jreexport CLASSPATH&#x3D;$JAVA_HOME&#x2F;lib<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置后生效一下</p><p>source &#x2F;etc&#x2F;profile</p><p>输入Hadoop的命令，你将看到</p><p>这时Hadoop安装好了，现在配置伪分布式：</p><p>这是它的配置文件以及路径</p><img src="https://s2.loli.net/2022/03/30/U76RD1ZkrQdjVHJ.png" alt="image-20220330154053686" style="zoom:80%;" /><ol><li>配置Hadoop运行环境</li></ol><p>hadoop_env.sh</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># The java implementation to use.  #这里最好直接写绝对路径了，搞不清楚怎么在这里写变量，这样写最保险export JAVA_HOME&#x3D;&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;java-8-openjdk-amd64&#x2F;  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="2"><li>core-site.xml</li></ol><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>fs.defaultFS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hdfs://hengxing:9000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hadoop.tmp.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/data/hadoopdata<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>hdfs-site.xml</li></ol><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.namenode.name.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/data/hadoopdata/name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>为了保证元数据的安全一般配置多个不同目录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.datanode.data.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/data/hadoopdata/data<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>datanode 的数据存储目录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.replication<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>HDFS 的数据块的副本存储个数, 默认是3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li>mapred-site.xml</li></ol><p>在hadoop的相关目录中没有此文件，但是有一个mapred-site.xml.template文件，将该文件复制一份为mapred-site.xml</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cp mapred-site.xml.template mapred-site.xml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>mapreduce.framework.name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>yarn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="5"><li>yarn-site.xml</li></ol><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 指定ResourceManager的地址--></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.resourcemanager.hostname<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hengxing<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 指定reducer获取数据的方式--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.nodemanager.aux-services<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>mapreduce_shuffle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.nodemanager.local-dirs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>file:///data/hadoopdata/yarn/nodemanager<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="6"><li>创建相关目录</li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo mkdir -p &#x2F;data&#x2F;hadoopdata&#x2F;namesudo mkdir -p &#x2F;data&#x2F;hadoopdata&#x2F;datasudo mkdir -p &#x2F;data&#x2F;hadoopdata&#x2F;yarn&#x2F;nodemanager<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同时给予权限<code>sudo chmod -R 777 /data/</code></p><ol start="7"><li>对HDFS集群进行格式化，HDFS集群是用来存储数据的。</li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hdfs namenode -format<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>看到下图内容说明成功 <img src="https://s2.loli.net/2022/03/30/Ai47ENBrP3Rl6fF.png" alt="image-20220330160138305"></p><p>启动集群</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hadoop-daemon.sh start namenode #启动主节点hadoop-daemon.sh start datanode #启动从节点yarn-daemon.sh start resourcemanageryarn-daemon.sh start nodemanager<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ol><li>启动HDFS集群</li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hadoop-daemon.sh start namenode #启动主节点hadoop-daemon.sh start datanode #启动从节点<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/03/29/s8gKjXZhbcSGnqA.jpg" alt="img"></p><ol start="2"><li>启动YARN集群</li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yarn-daemon.sh start resourcemanageryarn-daemon.sh start nodemanager<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/03/30/KGPnXZraIL1TMkw.png" alt="image-20220330160554080"></p><p><img src="https://s2.loli.net/2022/03/30/aAOcXnigJWzCvKw.png" alt="image-20220330160606652"></p><ol start="3"><li>启动作业历史服务器</li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mr-jobhistory-daemon.sh start historyserver<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/03/29/flKV6z5o2uAdZUx.jpg" alt="img"></p><p>jps可以查看是否启动成功</p><p>也可以在浏览器的ui界面查看，网址见截图</p><p><img src="https://s2.loli.net/2022/03/29/NxleSpOs8EK7M2G.jpg" alt="img"></p><p><img src="https://s2.loli.net/2022/03/29/TQelB4fsNnKAhXL.jpg" alt="img"></p><p>用自带的圆周率程序测试一下</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yarn jar &#x2F;usr&#x2F;local&#x2F;hadoop&#x2F;share&#x2F;hadoop&#x2F;mapreduce&#x2F;hadoop-mapreduce-examples-2.7.5.jar pi 4 100<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/03/29/C1mM8Diwpy6OToY.jpg" alt="img"></p><p>关闭命令</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hadoop-daemon.sh stop namenodehadoop-daemon.sh stop datanodeyarn-daemon.sh stop resourcemanageryarn-daemon.sh stop nodemanager<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>关闭节点安全模式</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hdfs dfsadmin -safemode leave<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>遇到[There are 2 missing blocks. The following files may be corrupted:]</p><p><a href="https://stackoverflow.com/questions/19205057/how-to-fix-corrupt-hdfs-files">外网上的解决方式</a> &lt;–  点击即可进入 </p><p>找到中断文件</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hengxing@hengxing:~$ hdfs fsck -list-corruptfileblocksConnecting to namenode via http:&#x2F;&#x2F;hengxing:50070&#x2F;fsck?ugi&#x3D;hengxing&amp;listcorruptfileblocks&#x3D;1&amp;path&#x3D;%2FThe list of corrupt files under path &#39;&#x2F;&#39; are:blk_1073741838&#x2F;tmp&#x2F;hadoop-yarn&#x2F;staging&#x2F;history&#x2F;done&#x2F;2022&#x2F;03&#x2F;24&#x2F;000000&#x2F;job_1648112897030_0001-1648113971406-hengxing-QuasiMonteCarlo-1648114019450-4-1-SUCCEEDED-default-1648113983899.jhistblk_1073741839&#x2F;tmp&#x2F;hadoop-yarn&#x2F;staging&#x2F;history&#x2F;done&#x2F;2022&#x2F;03&#x2F;24&#x2F;000000&#x2F;job_1648112897030_0001_conf.xmlThe filesystem under path &#39;&#x2F;&#39; has 2 CORRUPT files<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>删除它</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hdfs fsck %你文件的路径% -delete<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Hadoop-跑MapReduce-Job-的时候卡住-unhealthy-nodes-x3D-1"><a href="#Hadoop-跑MapReduce-Job-的时候卡住-unhealthy-nodes-x3D-1" class="headerlink" title="Hadoop 跑MapReduce Job 的时候卡住,unhealthy-nodes&#x3D;1"></a>Hadoop 跑MapReduce Job 的时候卡住,unhealthy-nodes&#x3D;1</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hengxing@hengxing:~$ yarn node -list -all22&#x2F;03&#x2F;30 22:38:39 INFO client.RMProxy: Connecting to ResourceManager at hengxing&#x2F;192.168.59.140:8032Total Nodes:1         Node-Id     Node-StateNode-Http-AddressNumber-of-Running-Containers  hengxing:40085      UNHEALTHY    hengxing:8042                           0hengxing@hengxing:~$ <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>节点被判断为unhealthy，有以下几点原因：</p><ul><li>节点的磁盘空间占用达到了阈值</li><li>节点的文件存储位置没有权限创建文件</li></ul><p>通常可以用以下几种方式解决</p><ul><li>提高阈值、清理磁盘空间</li><li>给hadoop存文件的文件夹修改权限和拥有者、直接重新设置存储文件夹（记得别放在home文件夹下，会有权限问题）</li></ul><p>你可以看到报错里说</p><p>local-dir are bad，说明这个文件有问题，应该是没权限新建job文件，被判定为了不健康</p><h2 id="Hive安装"><a href="#Hive安装" class="headerlink" title="Hive安装"></a>Hive安装</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>下载解压，加软连接</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo tar xvfz apache-hive-2.3.7-bin.tar.gz -C &#x2F;usr&#x2F;local&#x2F;sudo ln -snf apache-hive-2.3.7-bin&#x2F; hive<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>添加环境变量</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#Hive Homeexport HIVE_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;hiveexport PATH&#x3D;$PATH:$HIVE_HOME&#x2F;binexport CLASSPATH&#x3D;$CLASSPATH:&#x2F;usr&#x2F;local&#x2F;hadoop&#x2F;lib&#x2F;*:.:&#x2F;usr&#x2F;local&#x2F;hive&#x2F;lib&#x2F;*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>定义仓库目录</p><pre class="line-numbers language-none"><code class="language-none">hdfs dfs -mkdir -p &#x2F;user&#x2F;hengxing&#x2F;warehouse#修改读写权限：&#x2F;usr&#x2F;local$ hdfs dfs -chmod 777 &#x2F;user&#x2F;hengxing&#x2F;warehouse<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>配置文件</p><p>新建conf下的hive-site.xml，注意配置文件中的<value></value>中的内容必须在同一行上且不能有空格，即不能包含换行符和空格，否则就会出错，请检查其它的配置是否还在存在这类问题。</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?></span><span class="token prolog">&lt;?xml-stylesheet type="text/xsl" href="configuration.xsl"?></span><span class="token comment">&lt;!--Licensed to the Apache Software Foundation (ASF) under one or morecontributor license agreements. See the NOTICE file distributed withthis work for additional information regarding copyright ownership.The ASF licenses this file to You under the Apache License, Version 2.0(the "License"); you may not use this file except in compliance withthe License. You may obtain a copy of the License athttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, softwaredistributed under the License is distributed on an "AS IS" BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.See the License for the specific language governing permissions andlimitations under the License.--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>javax.jdo.option.ConnectionURL<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>jdbc:mysql://localhost:3306/metastore?createDatabaseIfNotExist=true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>JDBC connect string for a JDBC metastore.To use SSL to encrypt/authenticate the connection, provide database-specific SSL flag in the connection URL.For example, jdbc:postgresql://myhost/db?ssl=true for postgres database.        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.metastore.warehouse.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hdfs://hengxing:9000/user/hengxing/warehouse<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>location of default database for the warehouse<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--     &lt;property>        &lt;name>hive.metastore.local&lt;/name>        &lt;value>true&lt;/value>    &lt;/property>    在0.10 0.11或者之后的hive版本 hive.metastore.local 属性不再使用,请去掉 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>javax.jdo.option.ConnectionDriverName<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>com.mysql.jdbc.Driver<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>Driver class name for a JDBC metastore<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>javax.jdo.option.ConnectionUserName<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>root<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>javax.jdo.option.ConnectionPassword<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>123456<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>javax.jdo.PersistenceManagerFactoryClass<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>org.datanucleus.api.jdo.JDOPersistenceManagerFactory<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>class implementing the jdo persistence<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.metastore.uris<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>thrift://hengxing:9083<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>另外在这里注意一点，这个文件中的<code>hive.metastore.local</code>配置在0.10 0.11或者之后的hive版本 hive.metastore.local 属性不再使用，请删掉，否则会报如下错误：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">WARN conf.HiveConf: HiveConf of name hive.metastore.local does not exist<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>把jdbc依赖包导入到hive&#x2F;lib下</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hengxing@hengxing:&#x2F;usr&#x2F;local&#x2F;hive&#x2F;lib$ cp ~&#x2F;pkg&#x2F;mysql-connector-java-5.1.49&#x2F;mysql-connector-java-5.1.49.jar .&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>初始化hive元数据</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hengxing@hengxing:&#x2F;usr&#x2F;local&#x2F;hive$ .&#x2F;bin&#x2F;schematool -dbType mysql -initSchema root 123456<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>成功后返回</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">SLF4J: Class path contains multiple SLF4J bindings.SLF4J: Found binding in [jar:file:&#x2F;usr&#x2F;local&#x2F;apache-hive-2.3.7-bin&#x2F;lib&#x2F;log4j-slf4j-impl-2.6.2.jar!&#x2F;org&#x2F;slf4j&#x2F;impl&#x2F;StaticLoggerBinder.class]SLF4J: Found binding in [jar:file:&#x2F;usr&#x2F;local&#x2F;hadoop-2.7.5&#x2F;share&#x2F;hadoop&#x2F;common&#x2F;lib&#x2F;slf4j-log4j12-1.7.10.jar!&#x2F;org&#x2F;slf4j&#x2F;impl&#x2F;StaticLoggerBinder.class]SLF4J: See http:&#x2F;&#x2F;www.slf4j.org&#x2F;codes.html#multiple_bindings for an explanation.SLF4J: Actual binding is of type [org.apache.logging.slf4j.Log4jLoggerFactory]Metastore connection URL: jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;metastore?createDatabaseIfNotExist&#x3D;trueMetastore Connection Driver : com.mysql.jdbc.DriverMetastore connection User: rootStarting metastore schema initialization to 2.3.0Initialization script hive-schema-2.3.0.mysql.sqlInitialization script completedschemaTool completed<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>也可以在MySQL中看到新创建的数据库</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mysql&gt; show databases;+--------------------+| Database           |+--------------------+| information_schema || metastore          || mysql              || performance_schema || sys                |+--------------------+5 rows in set (0.02 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="启动hive元存储thrift服务器"><a href="#启动hive元存储thrift服务器" class="headerlink" title="启动hive元存储thrift服务器"></a>启动hive元存储thrift服务器</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hengxing@hengxing:~&#x2F;pkg$ hive --service metastore &amp;[1] 64323<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>hive打开DEBUG模式</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hive --hiveconf hive.root.logger&#x3D;DEBUG,console<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>为root用户授权</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; grant all privileges on *.* to &#39;root&#39;@&#39;%&#39; identified by &#39;123456&#39; with grant option;mysql&gt; flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>mysql警告</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Wed Mar 30 01:15:25 CST 2022 WARN: Establishing SSL connection without server&#39;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&#39;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &#39;false&#39;. You need either to explicitly disable SSL by setting useSSL&#x3D;false, or set useSSL&#x3D;true and provide truststore for server certificate verification.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这是因为MySQL在高版本需要指明是否进行SSL连接，在mysql连接字符串url中加入ssl&#x3D;true或者false即可</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">jdbc:mysql://127.0.0.1:3306/framework?characterEncoding=utf8<span class="token entity named-entity" title="&amp;">&amp;amp;</span>useSSL=true<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之后可能会报错</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">javax.net.ssl.SSLHandshakeException: java.security.cert.CertPathValidatorException: Path does not chain with any of the trust anchors<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>则可以关掉SSL连接<code>useSSL=false</code></p><h3 id="HIVE无法正常启动，报找不到jdbc的驱动类"><a href="#HIVE无法正常启动，报找不到jdbc的驱动类" class="headerlink" title="HIVE无法正常启动，报找不到jdbc的驱动类"></a>HIVE无法正常启动，报找不到jdbc的驱动类</h3><p>通过启动脚本：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cd $HIVE_HOME.&#x2F;bin&#x2F;hive  --hiveconf hive.root.logger&#x3D;DEBUG,console<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>启动报如下错误：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">16&#x2F;08&#x2F;25 19:06:18 [main]: DEBUG bonecp.BoneCPDataSource: JDBC URL &#x3D; jdbc:mysql:&#x2F;&#x2F;slave1:3306&#x2F;hive?createDatabaseIfNotExist&#x3D;true, Username &#x3D; hive, partitions &#x3D; 1, max (per partition) &#x3D; 10, min (per partition) &#x3D; 0, idle max age &#x3D; 60 min, idle test period &#x3D; 240 min, strategy &#x3D; DEFAULT16&#x2F;08&#x2F;25 19:06:19 [BoneCP-pool-watch-thread]: ERROR bonecp.BoneCP: Failed to acquire connection to jdbc:mysql:&#x2F;&#x2F;slave1:3306&#x2F;hive?createDatabaseIfNotExist&#x3D;true. Sleeping for 7000 ms. Attempts left: 5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这是报没有找到连接mysql的jdbc驱动，&#x3D;&#x3D;但是实际上$HIVE_HOME&#x2F;lib下已经有mysql的驱动包了&#x3D;&#x3D;</p><p>说明驱动包没有问题，经过百度后发现是配置文件$HIVE_HOME&#x2F;conf&#x2F;hive-site.xml内配置有问题：</p><blockquote><p>原因是配置文件中的<value></value>中的内容必须在同一行上且不能有空格，即不能包含换行符和空格，否则就会出错，请检查其它的配置是否还在存在这类问题。</p></blockquote><p>上一个问题解决了，接着又报下面的错误</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.DDLTask. MetaException(message:Got exception: java.net.ConnectException Call From hengxing&#x2F;192.168.59.140 to localhost:9000 failed on connection exception: java.net.ConnectException: Connection refused; For more details see:  http:&#x2F;&#x2F;wiki.apache.org&#x2F;hadoop&#x2F;ConnectionRefused)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>网上查相关资料的话，会说这是因为hdfs的datanode没启动，但我的明显不是这样，仔细看报错，他说<code>From hengxing/192.168.59.140 to localhost:9000</code>的连接失败，<code>localhost:9000</code>可用吗？我们telnet一下</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hengxing@hengxing:&#x2F;usr&#x2F;local&#x2F;hadoop&#x2F;etc&#x2F;hadoop$ telnet localhost 9000Trying 127.0.0.1...telnet: Unable to connect to remote host: Connection refused<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>并不行，仔细想想这是哪里的配置，哦，是元数据服务的地址。我应该设置的是hdfs的地址，hdfs的地址又是什么呢？看看你Hadoop的webUI</p><p><img src="https://s2.loli.net/2022/03/30/dehg6lTj8X2GbDO.png" alt="image-20220330165909687"></p><p>是<code>hengxing:9000</code>，telnet一下</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hengxing@hengxing:&#x2F;usr&#x2F;local&#x2F;hadoop&#x2F;etc&#x2F;hadoop$ telnet hengxing 9000Trying 192.168.59.140...Connected to hengxing.Escape character is &#39;^]&#39;.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>你看，hdfs是启动的，把hive-site.xml中的<code>hive.metastore.warehouse.dir</code>配置变成这个地址吧</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.metastore.warehouse.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hdfs://hengxing:9000/user/hengxing/warehouse<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>location of default database for the warehouse<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但是，问题来了，按理说这两个地址都是我当前的本机啊，并没有本质的区别，可是别忘记，这是两张不同的网卡，你用ifconfig看一下</p><p><img src="https://s2.loli.net/2022/03/30/uaxs4mFhE8YSlbW.png" alt="image-20220330170822427"></p><p>明白了吧，网卡不同，它所在的端口也就不同。</p><h2 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h2><p>在hive中创建一个数据库，用来存放你系统的数据</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">hive&gt; create database ecommerce;OKTime taken: 0.099 secondshive&gt; show databases;OKdefaultecommerceTime taken: 0.031 seconds, Fetched: 2 row(s)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在MySQL中建数据库，存放原始数据，这里的数据是假设由真实数据导入的，作为业务最初始的数据集。</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; create database ecommerce charset&#x3D;utf8;Query OK, 1 row affected (0.01 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="表设计"><a href="#表设计" class="headerlink" title="表设计"></a>表设计</h3><p>这些数据内容，主要可以分为：用户信息，商品信息，订单信息，运营相关信息，服务相关信息五大类，我们后续可以根据这个标准做标签建模。</p><ul><li>用户信息表（t_member）</li><li>用户地址表（t_member_addr）</li><li>商品信息表（t_commodity）</li><li>商品类别信息表（t_commodity_cate）</li><li>订单表（t_order）</li><li>订单商品表（t_order_commodity）</li><li>优惠券表（t_coupon）</li><li>用户优惠券表（t_coupon_member）</li><li>订单优惠券表（t_coupon_order）</li><li>快递表（t_delivery）</li><li>反馈表（t_feedback）</li><li>商店表（t_shop）</li><li>商家订单表（t_shop_order，订单对于卖家也有记录）</li><li>后台用户表（t_user，员工表）</li></ul><p>要打开mysql远程连接</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hengxing@hengxing:&#x2F;etc&#x2F;mysql&#x2F;mysql.conf.d$ vim mysqld.cnf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>找到bind-address &#x3D; 127.0.0.1这一行<br>        改为bind-address &#x3D; 0.0.0.0即可</p><p>把ddl文件拖进navicat执行</p><img src="https://s2.loli.net/2022/03/30/o2aDupv3lzPebNS.png" alt="image-20220330184253874" style="zoom: 67%;" /><img src="https://s2.loli.net/2022/03/30/AdHDMq1RiNSP9sJ.png" alt="image-20220330184331847" style="zoom:67%;" /><p>一共14张表</p><h3 id="配置sqoop做数据迁移"><a href="#配置sqoop做数据迁移" class="headerlink" title="配置sqoop做数据迁移"></a>配置sqoop做数据迁移</h3><p>解压sqoop安装包</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hengxing@hengxing:~&#x2F;pkg$ sudo tar -zxvf sqoop-1.4.7.bin__hadoop-2.6.0.tar.gz -C &#x2F;usr&#x2F;local<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>为sqoop添加软连接（可选）</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hengxing@hengxing:&#x2F;usr&#x2F;local$ sudo ln -snf sqoop-1.4.7.bin__hadoop-2.6.0&#x2F; sqoop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>添加mysql的连接器jar包</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hengxing@hengxing:~&#x2F;pkg&#x2F;mysql-connector-java-5.1.49$ cp mysql-connector-java-5.1.49-bin.jar &#x2F;usr&#x2F;local&#x2F;sqoop-1.4.7.bin__hadoop-2.6.0&#x2F;lib&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>另外注意，还应该把hive-site.xml拷贝到sqoop&#x2F;conf下面</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hengxing@hengxing:&#x2F;usr&#x2F;local&#x2F;sqoop$ cp &#x2F;usr&#x2F;local&#x2F;hive&#x2F;conf&#x2F;hive-site.xml conf&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>添加环境变量，便于以后执行命令</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">#sqoopexport SQOOP_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;sqoopexport PATH&#x3D;$PATH:$SQOOP_HOME&#x2F;bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>修改配置文件，加入hive的环境变量：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hengxing@hengxing:&#x2F;usr&#x2F;local&#x2F;sqoop&#x2F;conf$ mv sqoop-env-template.sh sqoop-env.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>写入如下内容</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">export HIVE_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;hive<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上传<code>datamigrate.sh</code>脚本，检查脚本是否有错误，执行，脚本内容在后</p><pre class="line-numbers language-none"><code class="language-none">sudo apt-get install dos2unix #下载dos转unix工具hengxing@hengxing:~&#x2F;profile_tool$ dos2unix datamigrate.sh dos2unix: converting file datamigrate.sh to Unix format ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">#!&#x2F;bin&#x2F;bashsq()&#123;sqoop import \--connect jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;ecommerce \--username root \--password 123456 \--table $1 \--num-mappers 1 \--hive-import \--fields-terminated-by &quot;\t&quot; \--hive-overwrite \--hive-database ecommerce \--hive-table $1&#125;sq t_commoditysq t_commodity_catesq t_couponsq t_coupon_membersq t_coupon_ordersq t_deliverysq t_feedbacksq t_membersq t_member_addrsq t_ordersq t_order_commoditysq t_shopsq t_shop_ordersq t_user<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="yarn-杀死-application-命令"><a href="#yarn-杀死-application-命令" class="headerlink" title="yarn 杀死 application 命令"></a>yarn 杀死 application 命令</h4><p><img src="https://s2.loli.net/2022/03/30/rEjN8LHM2iwocUJ.png" alt="image-20220330211003135"></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yarn application -kill application_1648627463824_0001<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>即可杀死</p><h4 id="hive没有找到类HiveConf"><a href="#hive没有找到类HiveConf" class="headerlink" title="hive没有找到类HiveConf"></a>hive没有找到类HiveConf</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">22&#x2F;03&#x2F;31 14:30:23 ERROR hive.HiveConfig: Could not load org.apache.hadoop.hive.conf.HiveConf. Make sure HIVE_CONF_DIR is set correctly.22&#x2F;03&#x2F;31 14:30:23 ERROR tool.ImportTool: Import failed: java.io.IOException: java.lang.ClassNotFoundException: org.apache.hadoop.hive.conf.HiveConf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>我们先看hive命令中有没有这个类</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hengxing@hengxing:&#x2F;usr&#x2F;local&#x2F;hive&#x2F;lib$ jar tf hive-common-2.3.7.jar | grep HiveConf.classorg&#x2F;apache&#x2F;hadoop&#x2F;hive&#x2F;conf&#x2F;HiveConf.class<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>有，只是没找到。所以我设置了下面的环境变量，注意是在<code>/etc/profile</code>下</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">export HIVE_CONF_DIR&#x3D;$HIVE_HOME&#x2F;confexport HADOOP_CLASSPATH&#x3D;$HADOOP_CLASSPATH:$HIVE_HOME&#x2F;lib&#x2F;*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>但是并没有什么卵用，网上还推荐了一步，将hive 里面的lib下的<code>hive-exec-**.jar</code> 放到sqoop 的lib 下，最后成功了。</p><h2 id="ES安装"><a href="#ES安装" class="headerlink" title="ES安装"></a>ES安装</h2><h3 id="下载、安装、配置"><a href="#下载、安装、配置" class="headerlink" title="下载、安装、配置"></a>下载、安装、配置</h3><p>地址:<a href="https://www.elastic.co/cn/downloads/past-releases/elasticsearch-6-8-5">https://www.elastic.co/cn/downloads/past-releases/elasticsearch-6-8-5</a></p><p>下载后，上传并解压</p><p>把es放到&#x2F;usr&#x2F;local下，并创建软连接</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo ln -snf elasticsearch-6.8.5&#x2F; es<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改配置文件</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hengxing@hengxing:&#x2F;usr&#x2F;local&#x2F;es$ cd config&#x2F;hengxing@hengxing:&#x2F;usr&#x2F;local&#x2F;es&#x2F;config$ lselasticsearch.yml  log4j2.properties  roles.yml  users_rolesjvm.options        role_mapping.yml   users<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>修改elasticsearch.yml</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">#-----集群名称------cluster.name: hengxing# ------- Node名称 -----------# Use a descriptive name for the node:node.name: hengxing_node1# ------------- Paths ---------------# Path to directory where to store the data (separate multiple locations by comma):path.data: &#x2F;home&#x2F;hengxing&#x2F;data&#x2F;esdata&#x2F;data# Path to log files:path.logs: &#x2F;home&#x2F;hengxing&#x2F;data&#x2F;esdata&#x2F;logs# ------------------ Network -------------------# Set the bind address to a specific IP (IPv4 or IPv6):0.0.0.0是允许所有IP访问network.host: 0.0.0.0# Set a custom port for HTTP:http.port: 9200<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改jvm.options</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">## You should always set the min and max JVM heap## size to the same value. For example, to set## the heap to 4 GB, set:##-Xms1g-Xmx1g<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="启动命令"><a href="#启动命令" class="headerlink" title="启动命令"></a>启动命令</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">&#x2F;usr&#x2F;local&#x2F;es&#x2F;bin&#x2F;elasticsearch &amp;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>访问地址<a href="http://hengxing:9200/%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0">http://hengxing:9200/，可以看到</a></p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"hengxing_node1"</span><span class="token punctuation">,</span>  <span class="token property">"cluster_name"</span> <span class="token operator">:</span> <span class="token string">"hengxing"</span><span class="token punctuation">,</span>  <span class="token property">"cluster_uuid"</span> <span class="token operator">:</span> <span class="token string">"NnCvOW_LRLmTKrdApgxWRw"</span><span class="token punctuation">,</span>  <span class="token property">"version"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"number"</span> <span class="token operator">:</span> <span class="token string">"6.8.5"</span><span class="token punctuation">,</span>    <span class="token property">"build_flavor"</span> <span class="token operator">:</span> <span class="token string">"default"</span><span class="token punctuation">,</span>    <span class="token property">"build_type"</span> <span class="token operator">:</span> <span class="token string">"tar"</span><span class="token punctuation">,</span>    <span class="token property">"build_hash"</span> <span class="token operator">:</span> <span class="token string">"78990e9"</span><span class="token punctuation">,</span>    <span class="token property">"build_date"</span> <span class="token operator">:</span> <span class="token string">"2019-11-13T20:04:24.100411Z"</span><span class="token punctuation">,</span>    <span class="token property">"build_snapshot"</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token property">"lucene_version"</span> <span class="token operator">:</span> <span class="token string">"7.7.2"</span><span class="token punctuation">,</span>    <span class="token property">"minimum_wire_compatibility_version"</span> <span class="token operator">:</span> <span class="token string">"5.6.0"</span><span class="token punctuation">,</span>    <span class="token property">"minimum_index_compatibility_version"</span> <span class="token operator">:</span> <span class="token string">"5.0.0"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"tagline"</span> <span class="token operator">:</span> <span class="token string">"You Know, for Search"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h3><p>[报错]max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [655360]</p><p>sudo vim &#x2F;etc&#x2F;sysctl.conf</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">vm.max_map_count&#x3D;655360<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再执行<code>sysctl -p</code>即可</p><p>启动成功后可以访问</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"hengxing_node1"</span><span class="token punctuation">,</span>  <span class="token property">"cluster_name"</span> <span class="token operator">:</span> <span class="token string">"hengxing"</span><span class="token punctuation">,</span>  <span class="token property">"cluster_uuid"</span> <span class="token operator">:</span> <span class="token string">"NnCvOW_LRLmTKrdApgxWRw"</span><span class="token punctuation">,</span>  <span class="token property">"version"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"number"</span> <span class="token operator">:</span> <span class="token string">"6.8.5"</span><span class="token punctuation">,</span>    <span class="token property">"build_flavor"</span> <span class="token operator">:</span> <span class="token string">"default"</span><span class="token punctuation">,</span>    <span class="token property">"build_type"</span> <span class="token operator">:</span> <span class="token string">"tar"</span><span class="token punctuation">,</span>    <span class="token property">"build_hash"</span> <span class="token operator">:</span> <span class="token string">"78990e9"</span><span class="token punctuation">,</span>    <span class="token property">"build_date"</span> <span class="token operator">:</span> <span class="token string">"2019-11-13T20:04:24.100411Z"</span><span class="token punctuation">,</span>    <span class="token property">"build_snapshot"</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token property">"lucene_version"</span> <span class="token operator">:</span> <span class="token string">"7.7.2"</span><span class="token punctuation">,</span>    <span class="token property">"minimum_wire_compatibility_version"</span> <span class="token operator">:</span> <span class="token string">"5.6.0"</span><span class="token punctuation">,</span>    <span class="token property">"minimum_index_compatibility_version"</span> <span class="token operator">:</span> <span class="token string">"5.0.0"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"tagline"</span> <span class="token operator">:</span> <span class="token string">"You Know, for Search"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="kibana安装"><a href="#kibana安装" class="headerlink" title="kibana安装"></a>kibana安装</h2><h3 id="下载、安装、配置-1"><a href="#下载、安装、配置-1" class="headerlink" title="下载、安装、配置"></a>下载、安装、配置</h3><p>【下载地址】<a href="https://www.elastic.co/cn/downloads/past-releases/kibana-6-8-5">https://www.elastic.co/cn/downloads/past-releases/kibana-6-8-5</a></p><p>老一套，接着去改配置</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">server.host: &quot;hengxing&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>启动</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">&#x2F;usr&#x2F;local&#x2F;kibana&#x2F;bin&#x2F;kibana &amp;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>报错</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cause: undefined, path: [ &#39;basePath&#39; ] &#125; &#125; FATAL  Error: [server.basePath]: must start with a slash, don&#39;t end with one<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这是因为写了basepath，并且报错写的很明显了。在这里可以注释掉</p><h3 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h3><p>在DevTools中 <code>PUT /usertag</code></p><p>再去Dashboard中的Index Management中就可以看到这个查询</p><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><p>为了试验，我们添加一个查询<code>PUT /user</code>，然后添加一条数据</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">POST /user/_doc/<span class="token number">1</span><span class="token punctuation">&#123;</span>  <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"Tifa"</span><span class="token punctuation">,</span>  <span class="token property">"age"</span><span class="token operator">:</span><span class="token number">17</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>能在控制台得到反馈</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"_index"</span> <span class="token operator">:</span> <span class="token string">"user"</span><span class="token punctuation">,</span>  <span class="token property">"_type"</span> <span class="token operator">:</span> <span class="token string">"_doc"</span><span class="token punctuation">,</span>  <span class="token property">"_id"</span> <span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>  <span class="token property">"_version"</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token property">"result"</span> <span class="token operator">:</span> <span class="token string">"created"</span><span class="token punctuation">,</span>  <span class="token property">"_shards"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"total"</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>    <span class="token property">"successful"</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    <span class="token property">"failed"</span> <span class="token operator">:</span> <span class="token number">0</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"_seq_no"</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token property">"_primary_term"</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对这用户数据进行查询<code>GET /user/_search</code>，可以得到用户数据</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"took"</span> <span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>  <span class="token property">"timed_out"</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>  <span class="token property">"_shards"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"total"</span> <span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>    <span class="token property">"successful"</span> <span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>    <span class="token property">"skipped"</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token property">"failed"</span> <span class="token operator">:</span> <span class="token number">0</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"hits"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"total"</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    <span class="token property">"max_score"</span> <span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>    <span class="token property">"hits"</span> <span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        <span class="token property">"_index"</span> <span class="token operator">:</span> <span class="token string">"user"</span><span class="token punctuation">,</span>        <span class="token property">"_type"</span> <span class="token operator">:</span> <span class="token string">"_doc"</span><span class="token punctuation">,</span>        <span class="token property">"_id"</span> <span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"_score"</span> <span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>        <span class="token property">"_source"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"Tifa"</span><span class="token punctuation">,</span>          <span class="token property">"age"</span> <span class="token operator">:</span> <span class="token number">17</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>若要进行条件查询，附加条件即可，不过我们还要多加两条数据，还是按照刚才的post方法</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>      <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"Cloud"</span><span class="token punctuation">,</span>      <span class="token property">"age"</span> <span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>      <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"Tifa"</span><span class="token punctuation">,</span>      <span class="token property">"age"</span> <span class="token operator">:</span> <span class="token number">17</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>      <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"Aurith"</span><span class="token punctuation">,</span>      <span class="token property">"age"</span> <span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li><p>查询名字为Cloud<strong>或</strong>年龄大于18小于20岁的</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">GET /user/_search<span class="token punctuation">&#123;</span>  <span class="token property">"query"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"bool"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"should"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        <span class="token property">"match"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Cloud"</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        <span class="token property">"range"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"age"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"gte"</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>            <span class="token property">"lte"</span><span class="token operator">:</span> <span class="token number">20</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"took"</span> <span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>  <span class="token property">"timed_out"</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>  <span class="token property">"_shards"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"total"</span> <span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>    <span class="token property">"successful"</span> <span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>    <span class="token property">"skipped"</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token property">"failed"</span> <span class="token operator">:</span> <span class="token number">0</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"hits"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"total"</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>    <span class="token property">"max_score"</span> <span class="token operator">:</span> <span class="token number">1.287682</span><span class="token punctuation">,</span>    <span class="token property">"hits"</span> <span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        <span class="token property">"_index"</span> <span class="token operator">:</span> <span class="token string">"user"</span><span class="token punctuation">,</span>        <span class="token property">"_type"</span> <span class="token operator">:</span> <span class="token string">"_doc"</span><span class="token punctuation">,</span>        <span class="token property">"_id"</span> <span class="token operator">:</span> <span class="token string">"2"</span><span class="token punctuation">,</span>        <span class="token property">"_score"</span> <span class="token operator">:</span> <span class="token number">1.287682</span><span class="token punctuation">,</span>        <span class="token property">"_source"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"Cloud"</span><span class="token punctuation">,</span>          <span class="token property">"age"</span> <span class="token operator">:</span> <span class="token number">20</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        <span class="token property">"_index"</span> <span class="token operator">:</span> <span class="token string">"user"</span><span class="token punctuation">,</span>        <span class="token property">"_type"</span> <span class="token operator">:</span> <span class="token string">"_doc"</span><span class="token punctuation">,</span>        <span class="token property">"_id"</span> <span class="token operator">:</span> <span class="token string">"3"</span><span class="token punctuation">,</span>        <span class="token property">"_score"</span> <span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>        <span class="token property">"_source"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"Aurith"</span><span class="token punctuation">,</span>          <span class="token property">"age"</span> <span class="token operator">:</span> <span class="token number">18</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>查询名字为Cloud<strong>且</strong>年龄大于18小于20岁的</p><p>结果：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"took"</span> <span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>  <span class="token property">"timed_out"</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>  <span class="token property">"_shards"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"total"</span> <span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>    <span class="token property">"successful"</span> <span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>    <span class="token property">"skipped"</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token property">"failed"</span> <span class="token operator">:</span> <span class="token number">0</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"hits"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"total"</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    <span class="token property">"max_score"</span> <span class="token operator">:</span> <span class="token number">1.287682</span><span class="token punctuation">,</span>    <span class="token property">"hits"</span> <span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        <span class="token property">"_index"</span> <span class="token operator">:</span> <span class="token string">"user"</span><span class="token punctuation">,</span>        <span class="token property">"_type"</span> <span class="token operator">:</span> <span class="token string">"_doc"</span><span class="token punctuation">,</span>        <span class="token property">"_id"</span> <span class="token operator">:</span> <span class="token string">"2"</span><span class="token punctuation">,</span>        <span class="token property">"_score"</span> <span class="token operator">:</span> <span class="token number">1.287682</span><span class="token punctuation">,</span>        <span class="token property">"_source"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"Cloud"</span><span class="token punctuation">,</span>          <span class="token property">"age"</span> <span class="token operator">:</span> <span class="token number">20</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h1 id="项目架构和工具类"><a href="#项目架构和工具类" class="headerlink" title="项目架构和工具类"></a>项目架构和工具类</h1><h2 id="IDEA项目"><a href="#IDEA项目" class="headerlink" title="IDEA项目"></a>IDEA项目</h2><p>新建Maven项目，参数如下：</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">GroupId：com.hengxingArtifactid：EcommerceUserProfile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>依赖文件POM，及版本信息</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--定义版本信息--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spark.version</span><span class="token punctuation">></span></span>2.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spark.version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scala.version</span><span class="token punctuation">></span></span>2.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scala.version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>springboot.version</span><span class="token punctuation">></span></span>2.2.0.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>springboot.version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>elasticsearch.version</span><span class="token punctuation">></span></span>6.8.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>elasticsearch.version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lombok.version</span><span class="token punctuation">></span></span>1.18.10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lombok.version</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--自动生成getter/setter等方法，为配合此依赖还需安装插件lombok--></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fastjson.version</span><span class="token punctuation">></span></span>1.2.59<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fastjson.version</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--json转换器--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--spring boot 相关依赖--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;springboot.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-thymeleaf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;springboot.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-data-elasticsearch<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;springboot.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-devtools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>runtime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;springboot.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--spark 相关依赖，需要core、sql和hive--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.spark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spark-core_$&#123;scala.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;spark.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.spark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spark-sql_$&#123;scala.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;spark.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.spark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spark-hive_$&#123;scala.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;spark.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;lombok.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>fastjson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;fastjson.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.elasticsearch<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>elasticsearch-hadoop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;elasticsearch.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.elasticsearch<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>elasticsearch<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;elasticsearch.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- Java High Level REST Client --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.elasticsearch.client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>elasticsearch-rest-high-level-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;elasticsearch.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profiles</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--开发环境--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>dev<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build.profile.id</span><span class="token punctuation">></span></span>dev<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build.profile.id</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activation</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeByDefault</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeByDefault</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- 此标签可以切换生产环境和开发环境 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activation</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--生产环境--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>prod<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build.profile.id</span><span class="token punctuation">></span></span>prod<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build.profile.id</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profiles</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--用resource定义打包时的资源文件--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- 过滤其中的配置，符合条件的使用maven配置将其覆盖 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>excludes</span><span class="token punctuation">></span></span>                <span class="token comment">&lt;!--除了这里声明的配置，其他的都可以被maven默认的配置覆盖--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">></span></span>application-*.properties<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>excludes</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>application-$&#123;build.profile.id&#125;.properties<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>安装lombok插件</p><p><img src="https://s2.loli.net/2022/03/31/kbnKUB7RZyXJVrE.png" alt="image-20220331210805710"></p><p>设置远程连接，将服务器中hive的<code>hive-site.xml</code>文件拷贝至resources文件夹下</p><h2 id="编写类文件"><a href="#编写类文件" class="headerlink" title="编写类文件"></a>编写类文件</h2><h3 id="个人标签展示"><a href="#个人标签展示" class="headerlink" title="个人标签展示"></a>个人标签展示</h3><p>编写用户标签提取的文件，分成两种，一种是平台用户标签，另一种是个人用户标签提取，分别写两个包</p><p>SparkUtil.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>hengxing<span class="token punctuation">.</span>ecommerceuserprofile<span class="token punctuation">.</span>utils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">SparkSession</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SparkUtils</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//定义一个Spark Session的会话池</span>    <span class="token keyword">private</span>  <span class="token keyword">static</span>  <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SparkSession</span><span class="token punctuation">></span></span> sessionPool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//初始化spark session的方法</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">SparkSession</span> <span class="token function">initSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//先判断会话池中是否由session，如果有，直接用，没就创建</span>        <span class="token keyword">if</span><span class="token punctuation">(</span> sessionPool<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> sessionPool<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"hadoop.home.dir"</span><span class="token punctuation">,</span><span class="token string">"C:\\tmp\\hadoop"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">SparkSession</span> session <span class="token operator">=</span> <span class="token class-name">SparkSession</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">appName</span><span class="token punctuation">(</span><span class="token string">"UserProfile-etl"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">master</span><span class="token punctuation">(</span><span class="token string">"local[*]"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token string">"es.nodes"</span><span class="token punctuation">,</span><span class="token string">"hengxing"</span><span class="token punctuation">)</span>  <span class="token comment">//elasticsearch的节点</span>                <span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token string">"es.port"</span><span class="token punctuation">,</span><span class="token string">"9200"</span><span class="token punctuation">)</span>   <span class="token comment">//elasticsearch的端口</span>                <span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token string">"ex.index.auto.create"</span><span class="token punctuation">,</span><span class="token string">"false"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">enableHiveSupport</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">//启用hive支持</span>                <span class="token punctuation">.</span><span class="token function">getOrCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sessionPool<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> session<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>memberEtl.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>hengxing<span class="token punctuation">.</span>ecommerceuserprofile<span class="token punctuation">.</span>etls<span class="token punctuation">.</span>platform</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span></span>JSON<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>hengxing<span class="token punctuation">.</span>ecommerceuserprofile<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">SparkUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Dataset</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Row</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">SparkSession</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token class-name">Collectors</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MemberEtl</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"hadoop.home.dir"</span><span class="token punctuation">,</span><span class="token string">"C:\\tmp\\hadoop"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//初始化一个sparksession</span>        <span class="token class-name">SparkSession</span> session <span class="token operator">=</span> <span class="token class-name">SparkUtils</span><span class="token punctuation">.</span><span class="token function">initSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        写sql查询想要的数据</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberSex</span><span class="token punctuation">></span></span> memberSexes <span class="token operator">=</span> <span class="token function">memberSexEtl</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberChannel</span><span class="token punctuation">></span></span> memberChannels <span class="token operator">=</span> <span class="token function">memberChannelEtl</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberMpSub</span><span class="token punctuation">></span></span> memberMpSubs <span class="token operator">=</span> <span class="token function">memberMpSubEtl</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">MemberHeat</span> memberHeat <span class="token operator">=</span> <span class="token function">memberHeatEtl</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        拼成想要展示的结果，给前端</span>        <span class="token class-name">MemberVo</span> memberVo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MemberVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        memberVo<span class="token punctuation">.</span><span class="token function">setMemberSexes</span><span class="token punctuation">(</span>memberSexes<span class="token punctuation">)</span><span class="token punctuation">;</span>        memberVo<span class="token punctuation">.</span><span class="token function">setMemberChannels</span><span class="token punctuation">(</span>memberChannels<span class="token punctuation">)</span><span class="token punctuation">;</span>        memberVo<span class="token punctuation">.</span><span class="token function">setMemberMpSubs</span><span class="token punctuation">(</span>memberMpSubs<span class="token punctuation">)</span><span class="token punctuation">;</span>        memberVo<span class="token punctuation">.</span><span class="token function">setMemberHeat</span><span class="token punctuation">(</span>memberHeat<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//控制台打印</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"=====ETL数据来啦=====\n"</span> <span class="token operator">+</span> JSON<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>memberVo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//统计平台用户性别分布</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberSex</span><span class="token punctuation">></span></span> <span class="token function">memberSexEtl</span><span class="token punctuation">(</span><span class="token class-name">SparkSession</span> session<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//写sql，查询得到一个dataset</span>        <span class="token class-name">Dataset</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span><span class="token punctuation">></span></span> dataset <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">sql</span><span class="token punctuation">(</span><span class="token string">"select sex as memberSex, count(id) as sexCount "</span> <span class="token operator">+</span>                <span class="token string">"from ecommerce.t_member group by sex"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//先将dataset转成list</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> list <span class="token operator">=</span> dataset<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collectAsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//将list转成流，进行每一行数据的遍历，转成memberSex</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberSex</span><span class="token punctuation">></span></span> result <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>str <span class="token operator">-></span> JSON<span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token class-name">MemberSex</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//用户注册渠道的分布统计</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberChannel</span><span class="token punctuation">></span></span> <span class="token function">memberChannelEtl</span><span class="token punctuation">(</span><span class="token class-name">SparkSession</span> session<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Dataset</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span><span class="token punctuation">></span></span> dataset <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">sql</span><span class="token punctuation">(</span>                <span class="token string">"select member_channel as memberChannel, count(id) as channelCount "</span> <span class="token operator">+</span>                        <span class="token string">" from ecommerce.t_member group by member_channel"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> list <span class="token operator">=</span> dataset<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collectAsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberChannel</span><span class="token punctuation">></span></span> result <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>str <span class="token operator">-></span> JSON<span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token class-name">MemberChannel</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*    * sql中if()的用法    * if(&lt;筛选条件>,&lt;匹配时返回>,&lt;不匹配时返回>)    * */</span>    <span class="token comment">//媒体平台关注分布统计</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberMpSub</span><span class="token punctuation">></span></span> <span class="token function">memberMpSubEtl</span><span class="token punctuation">(</span><span class="token class-name">SparkSession</span> session<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Dataset</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span><span class="token punctuation">></span></span> sub <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">sql</span><span class="token punctuation">(</span>                <span class="token string">"select count(if(mp_open_id !='null',true,null)) as subCount, "</span> <span class="token operator">+</span>                        <span class="token string">" count(if(mp_open_id ='null',true,null)) as unSubCount "</span> <span class="token operator">+</span>                        <span class="token string">" from ecommerce.t_member"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> list <span class="token operator">=</span> sub<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collectAsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberMpSub</span><span class="token punctuation">></span></span> result <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>str <span class="token operator">-></span> JSON<span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token class-name">MemberMpSub</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//平台用户热度分布统计</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">MemberHeat</span> <span class="token function">memberHeatEtl</span><span class="token punctuation">(</span><span class="token class-name">SparkSession</span> session<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//reg，complete从用户表中提取</span>        <span class="token class-name">Dataset</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span><span class="token punctuation">></span></span> reg_complete_count <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">sql</span><span class="token punctuation">(</span>                <span class="token string">"select count(if(phone = 'null',true,null)) as reg,"</span> <span class="token operator">+</span>                <span class="token string">" count(if(phone != 'null',true,null)) as complete"</span> <span class="token operator">+</span>                <span class="token string">" from ecommerce.t_member"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//order, orderAgain从订单表中提取</span>        <span class="token class-name">Dataset</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span><span class="token punctuation">></span></span> order_andAgain_count <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">sql</span><span class="token punctuation">(</span><span class="token string">"select"</span> <span class="token operator">+</span>                <span class="token string">" count(if(t.orderCount = 1,true,null)) as order,"</span> <span class="token operator">+</span>                <span class="token string">" count(if(t.orderCount >= 2,true,null)) as orderAgain"</span> <span class="token operator">+</span>                <span class="token string">" from (select count(order_id) as orderCount, member_id from ecommerce.t_order group by member_id) as t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//coupon,买了消费券人数，从t_coupon_member表提取，对member_id进行去重，然后count</span>        <span class="token class-name">Dataset</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span><span class="token punctuation">></span></span> coupon_count <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">sql</span><span class="token punctuation">(</span><span class="token string">"select"</span> <span class="token operator">+</span>                <span class="token string">" count(distinct member_id) as coupon from ecommerce.t_coupon_member "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//最终合并</span>        <span class="token class-name">Dataset</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span><span class="token punctuation">></span></span> heat <span class="token operator">=</span> coupon_count<span class="token punctuation">.</span><span class="token function">crossJoin</span><span class="token punctuation">(</span>reg_complete_count<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">crossJoin</span><span class="token punctuation">(</span>order_andAgain_count<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//先将dataset转成list</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> list <span class="token operator">=</span> heat<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collectAsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//这一次我们只有一条数据，取出第一个就可以了，这里是为了复用代码</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberHeat</span><span class="token punctuation">></span></span> result <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>str <span class="token operator">-></span> JSON<span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token class-name">MemberHeat</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//    定义一个最终想要生成的ViewObject，用来展示饼图</span>    <span class="token annotation punctuation">@Data</span>    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MemberVo</span><span class="token punctuation">&#123;</span>        <span class="token comment">//由四部分构成</span>        <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberSex</span><span class="token punctuation">></span></span> memberSexes<span class="token punctuation">;</span>    <span class="token comment">//性别统计信息</span>        <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberChannel</span><span class="token punctuation">></span></span> memberChannels<span class="token punctuation">;</span> <span class="token comment">//渠道统计信息</span>        <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberMpSub</span><span class="token punctuation">></span></span> memberMpSubs<span class="token punctuation">;</span> <span class="token comment">//是否关注媒体平台统计</span>        <span class="token keyword">private</span> <span class="token class-name">MemberHeat</span> memberHeat<span class="token punctuation">;</span>  <span class="token comment">//用户热度统计</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Data</span>    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MemberSex</span><span class="token punctuation">&#123;</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> memberSex<span class="token punctuation">;</span><span class="token comment">//性别编号</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> sexCount<span class="token punctuation">;</span>   <span class="token comment">//当前性别的count数量</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Data</span>    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MemberChannel</span><span class="token punctuation">&#123;</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> memberChannel<span class="token punctuation">;</span>      <span class="token comment">//渠道编号</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> channelCount<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Data</span>    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MemberMpSub</span><span class="token punctuation">&#123;</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> subCount<span class="token punctuation">;</span>   <span class="token comment">//已关注的用户统计数</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> unSubCount<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Data</span>    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MemberHeat</span><span class="token punctuation">&#123;</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> reg<span class="token punctuation">;</span>        <span class="token comment">//只注册未填手机号的用户</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> complete<span class="token punctuation">;</span>   <span class="token comment">//填了手机号的</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> order<span class="token punctuation">;</span>    <span class="token comment">//下过单</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> orderAgain<span class="token punctuation">;</span> <span class="token comment">//多次下单</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> coupon<span class="token punctuation">;</span>     <span class="token comment">//买过消费券的用户统计数</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>正确配置环境并使用，需要以下几个条件：</p><blockquote><p>1、打开hive、spark、Hadoop以及hive元数据服务</p><p>2、在resource下放hive-site.xml</p><p>3、配置hive on spark</p><p>4、打开hive支持</p></blockquote><h4 id="报错-1"><a href="#报错-1" class="headerlink" title="报错"></a>报错</h4><h5 id="Caused-by-java-lang-NullPointerException"><a href="#Caused-by-java-lang-NullPointerException" class="headerlink" title="Caused by: java.lang.NullPointerException"></a>Caused by: java.lang.NullPointerException</h5><p>编写完文件后连接测试</p><p>报错</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">22:30:37.257 [main] WARN hive.ql.metadata.Hive - Failed to access metastore. This class should not accessed in runtime.org.apache.hadoop.hive.ql.metadata.HiveException: java.lang.RuntimeException: Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClientat Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClientCaused by: java.lang.reflect.InvocationTargetException: null<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这是完整的：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">00:02:42.923 [main] WARN hive.ql.metadata.Hive - Failed to access metastore. This class should not accessed in runtime.org.apache.hadoop.hive.ql.metadata.HiveException: java.lang.RuntimeException: Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClientat org.apache.hadoop.hive.ql.metadata.Hive.getAllDatabases(Hive.java:1236)at org.apache.hadoop.hive.ql.metadata.Hive.reloadFunctions(Hive.java:174)at org.apache.hadoop.hive.ql.metadata.Hive.&lt;clinit&gt;(Hive.java:166)at org.apache.hadoop.hive.ql.session.SessionState.start(SessionState.java:503)at org.apache.spark.sql.hive.client.HiveClientImpl.&lt;init&gt;(HiveClientImpl.scala:192)at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)at java.lang.reflect.Constructor.newInstance(Constructor.java:423)at org.apache.spark.sql.hive.client.IsolatedClientLoader.createClient(IsolatedClientLoader.scala:264)at org.apache.spark.sql.hive.HiveUtils$.newClientForMetadata(HiveUtils.scala:366)at org.apache.spark.sql.hive.HiveUtils$.newClientForMetadata(HiveUtils.scala:270)at org.apache.spark.sql.hive.HiveExternalCatalog.&lt;init&gt;(HiveExternalCatalog.scala:65)at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)at java.lang.reflect.Constructor.newInstance(Constructor.java:423)at org.apache.spark.sql.internal.SharedState$.org$apache$spark$sql$internal$SharedState$$reflect(SharedState.scala:166)at org.apache.spark.sql.internal.SharedState.&lt;init&gt;(SharedState.scala:86)at org.apache.spark.sql.SparkSession$$anonfun$sharedState$1.apply(SparkSession.scala:101)at org.apache.spark.sql.SparkSession$$anonfun$sharedState$1.apply(SparkSession.scala:101)at scala.Option.getOrElse(Option.scala:121)at org.apache.spark.sql.SparkSession.sharedState$lzycompute(SparkSession.scala:101)at org.apache.spark.sql.SparkSession.sharedState(SparkSession.scala:100)at org.apache.spark.sql.internal.SessionState.&lt;init&gt;(SessionState.scala:157)at org.apache.spark.sql.hive.HiveSessionState.&lt;init&gt;(HiveSessionState.scala:32)at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)at java.lang.reflect.Constructor.newInstance(Constructor.java:423)at org.apache.spark.sql.SparkSession$.org$apache$spark$sql$SparkSession$$reflect(SparkSession.scala:978)at org.apache.spark.sql.SparkSession.sessionState$lzycompute(SparkSession.scala:110)at org.apache.spark.sql.SparkSession.sessionState(SparkSession.scala:109)at org.apache.spark.sql.SparkSession$Builder$$anonfun$getOrCreate$5.apply(SparkSession.scala:878)at org.apache.spark.sql.SparkSession$Builder$$anonfun$getOrCreate$5.apply(SparkSession.scala:878)at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)at org.apache.spark.sql.SparkSession$Builder.getOrCreate(SparkSession.scala:878)at com.hengxing.ecommerceuserprofile.utils.SparkUtils.initSession(SparkUtils.java:32)at com.hengxing.ecommerceuserprofile.etls.platform.MemberEtl.main(MemberEtl.java:24)Caused by: java.lang.RuntimeException: Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClientat org.apache.hadoop.hive.metastore.MetaStoreUtils.newInstance(MetaStoreUtils.java:1523)at org.apache.hadoop.hive.metastore.RetryingMetaStoreClient.&lt;init&gt;(RetryingMetaStoreClient.java:86)at org.apache.hadoop.hive.metastore.RetryingMetaStoreClient.getProxy(RetryingMetaStoreClient.java:132)at org.apache.hadoop.hive.metastore.RetryingMetaStoreClient.getProxy(RetryingMetaStoreClient.java:104)at org.apache.hadoop.hive.ql.metadata.Hive.createMetaStoreClient(Hive.java:3005)at org.apache.hadoop.hive.ql.metadata.Hive.getMSC(Hive.java:3024)at org.apache.hadoop.hive.ql.metadata.Hive.getAllDatabases(Hive.java:1234)... 42 common frames omittedCaused by: java.lang.reflect.InvocationTargetException: nullat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)at java.lang.reflect.Constructor.newInstance(Constructor.java:423)at org.apache.hadoop.hive.metastore.MetaStoreUtils.newInstance(MetaStoreUtils.java:1521)... 48 common frames omittedCaused by: java.lang.NullPointerException: nullat java.lang.ProcessBuilder.start(ProcessBuilder.java:1012)at org.apache.hadoop.util.Shell.runCommand(Shell.java:404)at org.apache.hadoop.util.Shell.run(Shell.java:379)at org.apache.hadoop.util.Shell$ShellCommandExecutor.execute(Shell.java:589)at org.apache.hadoop.util.Shell.execCommand(Shell.java:678)at org.apache.hadoop.util.Shell.execCommand(Shell.java:661)at org.apache.hadoop.security.ShellBasedUnixGroupsMapping.getUnixGroups(ShellBasedUnixGroupsMapping.java:83)at org.apache.hadoop.security.ShellBasedUnixGroupsMapping.getGroups(ShellBasedUnixGroupsMapping.java:52)at org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback.getGroups(JniBasedUnixGroupsMappingWithFallback.java:50)at org.apache.hadoop.security.Groups.getGroups(Groups.java:89)at org.apache.hadoop.security.UserGroupInformation.getGroupNames(UserGroupInformation.java:1352)at org.apache.hadoop.hive.metastore.HiveMetaStoreClient.open(HiveMetaStoreClient.java:436)at org.apache.hadoop.hive.metastore.HiveMetaStoreClient.&lt;init&gt;(HiveMetaStoreClient.java:236)at org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient.&lt;init&gt;(SessionHiveMetaStoreClient.java:74)... 53 common frames omitted00:02:42.924 [main] INFO hive.metastore - Trying to connect to metastore with URI thrift:&#x2F;&#x2F;hengxing:9083Exception in thread &quot;main&quot; java.lang.IllegalArgumentException: Error while instantiating &#39;org.apache.spark.sql.hive.HiveSessionState&#39;:at org.apache.spark.sql.SparkSession$.org$apache$spark$sql$SparkSession$$reflect(SparkSession.scala:981)at org.apache.spark.sql.SparkSession.sessionState$lzycompute(SparkSession.scala:110)at org.apache.spark.sql.SparkSession.sessionState(SparkSession.scala:109)at org.apache.spark.sql.SparkSession$Builder$$anonfun$getOrCreate$5.apply(SparkSession.scala:878)at org.apache.spark.sql.SparkSession$Builder$$anonfun$getOrCreate$5.apply(SparkSession.scala:878)at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)at org.apache.spark.sql.SparkSession$Builder.getOrCreate(SparkSession.scala:878)at com.hengxing.ecommerceuserprofile.utils.SparkUtils.initSession(SparkUtils.java:32)at com.hengxing.ecommerceuserprofile.etls.platform.MemberEtl.main(MemberEtl.java:24)Caused by: java.lang.reflect.InvocationTargetExceptionat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)at java.lang.reflect.Constructor.newInstance(Constructor.java:423)at org.apache.spark.sql.SparkSession$.org$apache$spark$sql$SparkSession$$reflect(SparkSession.scala:978)... 12 moreCaused by: java.lang.IllegalArgumentException: Error while instantiating &#39;org.apache.spark.sql.hive.HiveExternalCatalog&#39;:at org.apache.spark.sql.internal.SharedState$.org$apache$spark$sql$internal$SharedState$$reflect(SharedState.scala:169)at org.apache.spark.sql.internal.SharedState.&lt;init&gt;(SharedState.scala:86)at org.apache.spark.sql.SparkSession$$anonfun$sharedState$1.apply(SparkSession.scala:101)at org.apache.spark.sql.SparkSession$$anonfun$sharedState$1.apply(SparkSession.scala:101)at scala.Option.getOrElse(Option.scala:121)at org.apache.spark.sql.SparkSession.sharedState$lzycompute(SparkSession.scala:101)at org.apache.spark.sql.SparkSession.sharedState(SparkSession.scala:100)at org.apache.spark.sql.internal.SessionState.&lt;init&gt;(SessionState.scala:157)at org.apache.spark.sql.hive.HiveSessionState.&lt;init&gt;(HiveSessionState.scala:32)... 17 moreCaused by: java.lang.reflect.InvocationTargetExceptionat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)at java.lang.reflect.Constructor.newInstance(Constructor.java:423)at org.apache.spark.sql.internal.SharedState$.org$apache$spark$sql$internal$SharedState$$reflect(SharedState.scala:166)... 25 moreCaused by: java.lang.reflect.InvocationTargetExceptionat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)at java.lang.reflect.Constructor.newInstance(Constructor.java:423)at org.apache.spark.sql.hive.client.IsolatedClientLoader.createClient(IsolatedClientLoader.scala:264)at org.apache.spark.sql.hive.HiveUtils$.newClientForMetadata(HiveUtils.scala:366)at org.apache.spark.sql.hive.HiveUtils$.newClientForMetadata(HiveUtils.scala:270)at org.apache.spark.sql.hive.HiveExternalCatalog.&lt;init&gt;(HiveExternalCatalog.scala:65)... 30 moreCaused by: java.lang.RuntimeException: java.lang.RuntimeException: Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClientat org.apache.hadoop.hive.ql.session.SessionState.start(SessionState.java:522)at org.apache.spark.sql.hive.client.HiveClientImpl.&lt;init&gt;(HiveClientImpl.scala:192)... 38 moreCaused by: java.lang.RuntimeException: Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClientat org.apache.hadoop.hive.metastore.MetaStoreUtils.newInstance(MetaStoreUtils.java:1523)at org.apache.hadoop.hive.metastore.RetryingMetaStoreClient.&lt;init&gt;(RetryingMetaStoreClient.java:86)at org.apache.hadoop.hive.metastore.RetryingMetaStoreClient.getProxy(RetryingMetaStoreClient.java:132)at org.apache.hadoop.hive.metastore.RetryingMetaStoreClient.getProxy(RetryingMetaStoreClient.java:104)at org.apache.hadoop.hive.ql.metadata.Hive.createMetaStoreClient(Hive.java:3005)at org.apache.hadoop.hive.ql.metadata.Hive.getMSC(Hive.java:3024)at org.apache.hadoop.hive.ql.session.SessionState.start(SessionState.java:503)... 39 moreCaused by: java.lang.reflect.InvocationTargetExceptionat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)at java.lang.reflect.Constructor.newInstance(Constructor.java:423)at org.apache.hadoop.hive.metastore.MetaStoreUtils.newInstance(MetaStoreUtils.java:1521)... 45 moreCaused by: java.lang.NullPointerExceptionat java.lang.ProcessBuilder.start(ProcessBuilder.java:1012)at org.apache.hadoop.util.Shell.runCommand(Shell.java:404)at org.apache.hadoop.util.Shell.run(Shell.java:379)at org.apache.hadoop.util.Shell$ShellCommandExecutor.execute(Shell.java:589)at org.apache.hadoop.util.Shell.execCommand(Shell.java:678)at org.apache.hadoop.util.Shell.execCommand(Shell.java:661)at org.apache.hadoop.security.ShellBasedUnixGroupsMapping.getUnixGroups(ShellBasedUnixGroupsMapping.java:83)at org.apache.hadoop.security.ShellBasedUnixGroupsMapping.getGroups(ShellBasedUnixGroupsMapping.java:52)at org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback.getGroups(JniBasedUnixGroupsMappingWithFallback.java:50)at org.apache.hadoop.security.Groups.getGroups(Groups.java:89)at org.apache.hadoop.security.UserGroupInformation.getGroupNames(UserGroupInformation.java:1352)at org.apache.hadoop.hive.metastore.HiveMetaStoreClient.open(HiveMetaStoreClient.java:436)at org.apache.hadoop.hive.metastore.HiveMetaStoreClient.&lt;init&gt;(HiveMetaStoreClient.java:236)at org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient.&lt;init&gt;(SessionHiveMetaStoreClient.java:74)... 50 more<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我以为是没开metastore服务，但是打开之后还是报错</p><p>测试一下服务有没有正常启动</p><p><img src="https://s2.loli.net/2022/04/01/KwWPz3bgVijA1dy.png" alt="image-20220401225351386"></p><p>说明启动起来了</p><p>又一想，sparkshell能不能启动呢，果然启动的时候报错，说连不上hive，并且有两个包引入错误</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Caused by: java.lang.RuntimeException: Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient······&lt;console&gt;:14: error: not found: value spark       import spark.implicits._              ^&lt;console&gt;:14: error: not found: value spark       import spark.sql              ^<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>虽然不知道它是怎么想着连接hive的，但是总要试着解决，去网上查了一下sparkonhive的配置方法：</p><blockquote><p>配置spark on hive很简单，把hive-site.xml软链接到spark的conf目录下即可，spark会自动读取该配置来识别metastore的地址。</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ln -snf &#x2F;usr&#x2F;local&#x2F;hive&#x2F;conf&#x2F;hive-site.xml &#x2F;usr&#x2F;local&#x2F;spark&#x2F;conf&#x2F;hive-site.xml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再重新启动sparkshell，好了，现在没有上面那个报错了，并且成功查询到hive中的数据</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Spark context Web UI available at http:&#x2F;&#x2F;192.168.59.140:4040Spark context available as &#39;sc&#39; (master &#x3D; local[*], app id &#x3D; local-1648828695614).Spark session available as &#39;spark&#39;.Welcome to      ____              __     &#x2F; __&#x2F;__  ___ _____&#x2F; &#x2F;__    _\ \&#x2F; _ \&#x2F; _ &#96;&#x2F; __&#x2F;  &#39;_&#x2F;   &#x2F;___&#x2F; .__&#x2F;\_,_&#x2F;_&#x2F; &#x2F;_&#x2F;\_\   version 2.1.0      &#x2F;_&#x2F;         Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_292)Type in expressions to have them evaluated.Type :help for more information.scala&gt; spark.sql(&quot;select * from ecommerce.t_user&quot;).show(false)+---+---------+-------------+-----------+-------------------+-------------------+|id |user_name|user_password|user_phone |create_time        |update_time        |+---+---------+-------------+-----------+-------------------+-------------------+|1  |一号员工     |111111       |15678990989|2019-08-01 08:31:46|2019-08-01 08:31:46||2  |二号员工     |111111       |15678990989|2019-08-01 08:31:46|2019-08-01 08:31:46||3  |三号员工     |111111       |15678990989|2019-08-01 08:31:46|2019-08-01 08:31:46|+---+---------+-------------+-----------+-------------------+-------------------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但这只是本地的sparkshell没问题，程序还是有报错</p><p>咨询了一位学长，学长给了我一个解决方案，我们看一下</p><p><a href="https://www.modb.pro/db/143244">Spark 之访问 Hive 空指针异常</a></p><p>因为学长说我的rootcause应该是<code> Caused by: java.lang.NullPointerException</code>，这里还要普及一个小知识点</p><blockquote><p>看报错的时候要从下网上看，最下面的是最根本的原因</p></blockquote><p>根据文章所说的添加了winutils.exe就行，具体的原因还是–&gt;<code>Spark需要用到Hadoop中的一些类库&amp;使用winutils.exe文件初始化Hive的上下文</code></p><h5 id="table-or-view-not-found"><a href="#table-or-view-not-found" class="headerlink" title="table or view not found"></a>table or view not found</h5><p>如果遇到<code>table or view not found</code>，我是因为sparkSession没有打开hive支持</p><h3 id="热词词云"><a href="#热词词云" class="headerlink" title="热词词云"></a>热词词云</h3><h5 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h5><p>将文件上传至hdfs中</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hdfs dfs -put &#x2F;data&#x2F;SogouQ.sample.txt &#x2F;data&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="类文件"><a href="#类文件" class="headerlink" title="类文件"></a>类文件</h5><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>hengxing<span class="token punctuation">.</span>ecommerceuserprofile<span class="token punctuation">.</span>etls<span class="token punctuation">.</span>platform</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span></span><span class="token class-name">SparkConf</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>api<span class="token punctuation">.</span>java<span class="token punctuation">.</span></span><span class="token class-name">JavaPairRDD</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>api<span class="token punctuation">.</span>java<span class="token punctuation">.</span></span><span class="token class-name">JavaRDD</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>api<span class="token punctuation">.</span>java<span class="token punctuation">.</span></span><span class="token class-name">JavaSparkContext</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>api<span class="token punctuation">.</span>java<span class="token punctuation">.</span>function<span class="token punctuation">.</span></span><span class="token class-name">Function2</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>api<span class="token punctuation">.</span>java<span class="token punctuation">.</span>function<span class="token punctuation">.</span></span><span class="token class-name">PairFunction</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">scala<span class="token punctuation">.</span></span><span class="token class-name">Tuple2</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token comment">/** * @projectName: EcommerceUserProfile * @package: com.hengxing.ecommerceuserprofile.etls.platform * @className: HotWordEtl * @author: HengxingStu * @description: TODO * @date: 4/12/2022 11:19 PM * @version: 1.0 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HotWordEtl</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//创建一个javaspark context ，方便后面调用transform操作</span>        <span class="token class-name">SparkConf</span> sparkConf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SparkConf</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setAppName</span><span class="token punctuation">(</span><span class="token string">"Hot word etl"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setMaster</span><span class="token punctuation">(</span><span class="token string">"local[*]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JavaSparkContext</span> jsc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JavaSparkContext</span><span class="token punctuation">(</span>sparkConf<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//1.先从hdfs读数据</span>        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"HADOOP_USER_NAME"</span><span class="token punctuation">,</span><span class="token string">"hengxing"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JavaRDD</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> linesRdd <span class="token operator">=</span> jsc<span class="token punctuation">.</span><span class="token function">textFile</span><span class="token punctuation">(</span><span class="token string">"hdfs://hengxing:9000/data/SogouQ.sample.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//2.mapToPair得到二元组，准备word count</span>        <span class="token class-name">JavaPairRDD</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span> pairRDD <span class="token operator">=</span> linesRdd<span class="token punctuation">.</span><span class="token function">mapToPair</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PairFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token class-name">Tuple2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">String</span> word <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Tuple2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>word<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//3.以word为key，通过reducebykey聚合</span>        <span class="token class-name">JavaPairRDD</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span> countRdd <span class="token operator">=</span> pairRDD<span class="token punctuation">.</span><span class="token function">reduceByKey</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Function2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">,</span> <span class="token class-name">Integer</span> integer2<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> integer <span class="token operator">+</span> integer2<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//排序，但是由于sortbykey只能根据第一个元素进行排序，所以排序前需要调整参数位置</span><span class="token comment">//       1.exchange position first</span>        <span class="token class-name">JavaPairRDD</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> swapedRdd <span class="token operator">=</span> countRdd<span class="token punctuation">.</span><span class="token function">mapToPair</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PairFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Tuple2</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token class-name">Tuple2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Tuple2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span> stringIntegerTuple2<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> stringIntegerTuple2<span class="token punctuation">.</span><span class="token function">swap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        2.count desc</span>        <span class="token class-name">JavaPairRDD</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> sortedRdd <span class="token operator">=</span> swapedRdd<span class="token punctuation">.</span><span class="token function">sortByKey</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        3.exchange again,back to previous,extract TopN,get a list finally</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Tuple2</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span><span class="token punctuation">></span></span> resultlist <span class="token operator">=</span> sortedRdd<span class="token punctuation">.</span><span class="token function">mapToPair</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PairFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Tuple2</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token class-name">Tuple2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Tuple2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> integerStringTuple2<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> integerStringTuple2<span class="token punctuation">.</span><span class="token function">swap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        print</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Tuple2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span> hotWordCount<span class="token operator">:</span> resultlist<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hotWordCount<span class="token punctuation">.</span>_1 <span class="token operator">+</span> <span class="token string">"=== count "</span> <span class="token operator">+</span> hotWordCount<span class="token punctuation">.</span>_2 <span class="token operator">+</span> <span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="平台近期数据增量"><a href="#平台近期数据增量" class="headerlink" title="平台近期数据增量"></a>平台近期数据增量</h3><p>SQL中的模板字符串<code>&#39;%s&#39;</code>，这样就可以将字符插进去，就像这样</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">最后合成的字符串 <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>你的SQL字符串<span class="token punctuation">,</span> 要添加的字符串<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>GrowthEtl.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>hengxing<span class="token punctuation">.</span>ecommerceuserprofile<span class="token punctuation">.</span>etls<span class="token punctuation">.</span>platform</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span></span><span class="token class-name">JSONObject</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>hengxing<span class="token punctuation">.</span>ecommerceuserprofile<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">SparkUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>hengxing<span class="token punctuation">.</span>ecommerceuserprofile<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>dateutils<span class="token punctuation">.</span></span><span class="token class-name">DateStyle</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>hengxing<span class="token punctuation">.</span>ecommerceuserprofile<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>dateutils<span class="token punctuation">.</span></span><span class="token class-name">DateUtil</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Dataset</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Row</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">SparkSession</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>types<span class="token punctuation">.</span></span><span class="token class-name">StructType</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">scala<span class="token punctuation">.</span></span><span class="token class-name">Tuple2</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>math<span class="token punctuation">.</span></span><span class="token class-name">BigDecimal</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDate</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">Month</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">ZoneId</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GrowthEtl</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">SparkSession</span> session <span class="token operator">=</span> <span class="token class-name">SparkUtils</span><span class="token punctuation">.</span><span class="token function">initSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GrowthLineVo</span><span class="token punctuation">></span></span> growthLineVo <span class="token operator">=</span> <span class="token function">growthEtl</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>growthLineVo<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//自定义VIewObject，统计每日数据</span>    <span class="token annotation punctuation">@Data</span>    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">GrowthLineVo</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 每天新增注册数、总用户数、总订单数、总流水GMV</span>        <span class="token keyword">private</span> <span class="token class-name">String</span> day<span class="token punctuation">;</span>  <span class="token comment">//日期</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> regCount<span class="token punctuation">;</span>  <span class="token comment">// 每天新增注册数</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> memberCount<span class="token punctuation">;</span>  <span class="token comment">// 每天平台总用户数</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> orderCount<span class="token punctuation">;</span>  <span class="token comment">// 每天总订单数</span>        <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> gmv<span class="token punctuation">;</span>  <span class="token comment">// 每天平台订单总流水金额</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GrowthLineVo</span><span class="token punctuation">></span></span> <span class="token function">growthEtl</span><span class="token punctuation">(</span><span class="token class-name">SparkSession</span> session<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 指定“当前日期”是2019.11.30，这是数据决定的</span>        <span class="token class-name">LocalDate</span> now <span class="token operator">=</span> <span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">,</span> <span class="token class-name">Month</span><span class="token punctuation">.</span>NOVEMBER<span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Date</span> nowDay <span class="token operator">=</span> <span class="token class-name">Date</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">atStartOfDay</span><span class="token punctuation">(</span><span class="token class-name">ZoneId</span><span class="token punctuation">.</span><span class="token function">systemDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toInstant</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Date</span> sevenDayBefore <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">addDay</span><span class="token punctuation">(</span>nowDay<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 近七天注册人数统计（总量、新增）</span>        <span class="token class-name">String</span> memberSql <span class="token operator">=</span> <span class="token string">"select date_format(create_time,'yyyy-MM-dd') as day,"</span> <span class="token operator">+</span>                <span class="token string">" count(id) as regCount, max(id) as memberCount "</span> <span class="token operator">+</span>                <span class="token string">" from ecommerce.t_member where create_time >='%s' "</span> <span class="token operator">+</span>                <span class="token string">" group by date_format(create_time,'yyyy-MM-dd') order by day"</span><span class="token punctuation">;</span>        memberSql <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>memberSql<span class="token punctuation">,</span> <span class="token class-name">DateUtil<span class="token punctuation">.</span>DateToString</span><span class="token punctuation">(</span>sevenDayBefore<span class="token punctuation">,</span> <span class="token class-name">DateStyle</span><span class="token punctuation">.</span>YYYY_MM_DD_HH_MM_SS<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Dataset</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span><span class="token punctuation">></span></span> memberDs <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">sql</span><span class="token punctuation">(</span>memberSql<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 近七天订单和流水统计（新增总流水）</span>        <span class="token class-name">String</span> orderSql <span class="token operator">=</span> <span class="token string">"select date_format(create_time,'yyyy-MM-dd') as day,"</span> <span class="token operator">+</span>                <span class="token string">" max(order_id) orderCount, sum(origin_price) as gmv"</span> <span class="token operator">+</span>                <span class="token string">" from ecommerce.t_order where create_time >='%s' "</span> <span class="token operator">+</span>                <span class="token string">"group by date_format(create_time,'yyyy-MM-dd') order by day"</span><span class="token punctuation">;</span>        orderSql <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>orderSql<span class="token punctuation">,</span> <span class="token class-name">DateUtil<span class="token punctuation">.</span>DateToString</span><span class="token punctuation">(</span>sevenDayBefore<span class="token punctuation">,</span> <span class="token class-name">DateStyle</span><span class="token punctuation">.</span>YYYY_MM_DD_HH_MM_SS<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Dataset</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span><span class="token punctuation">></span></span> orderDs <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">sql</span><span class="token punctuation">(</span>orderSql<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 联接两个查询结果，按照day进行内连接</span>        <span class="token class-name">Dataset</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Tuple2</span><span class="token punctuation">&lt;</span><span class="token class-name">Row</span><span class="token punctuation">,</span> <span class="token class-name">Row</span><span class="token punctuation">></span><span class="token punctuation">></span></span> tuple2Dataset <span class="token operator">=</span> memberDs<span class="token punctuation">.</span><span class="token function">joinWith</span><span class="token punctuation">(</span>orderDs<span class="token punctuation">,</span> memberDs<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token string">"day"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equalTo</span><span class="token punctuation">(</span>orderDs<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token string">"day"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"inner"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//先转换成list，然后遍历，取出每一天的数据，转成VO，放入新的list</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Tuple2</span><span class="token punctuation">&lt;</span><span class="token class-name">Row</span><span class="token punctuation">,</span> <span class="token class-name">Row</span><span class="token punctuation">></span><span class="token punctuation">></span></span> tuple2s <span class="token operator">=</span> tuple2Dataset<span class="token punctuation">.</span><span class="token function">collectAsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GrowthLineVo</span><span class="token punctuation">></span></span> vos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 遍历二元组List，包装 GrowthLineVo</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Tuple2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span><span class="token punctuation">,</span> <span class="token class-name">Row</span><span class="token punctuation">></span></span> tuple2 <span class="token operator">:</span> tuple2s<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Row</span> row1 <span class="token operator">=</span> tuple2<span class="token punctuation">.</span><span class="token function">_1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// memberSql结果</span>            <span class="token class-name">Row</span> row2 <span class="token operator">=</span> tuple2<span class="token punctuation">.</span><span class="token function">_2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// orderSql结果</span>            <span class="token class-name">JSONObject</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//提取row类型里的所有字段</span>            <span class="token class-name">StructType</span> schema <span class="token operator">=</span> row1<span class="token punctuation">.</span><span class="token function">schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strings <span class="token operator">=</span> schema<span class="token punctuation">.</span><span class="token function">fieldNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> string <span class="token operator">:</span> strings<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Object</span> as <span class="token operator">=</span> row1<span class="token punctuation">.</span><span class="token function">getAs</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">;</span>                obj<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>string<span class="token punctuation">,</span> as<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            schema <span class="token operator">=</span> row2<span class="token punctuation">.</span><span class="token function">schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            strings <span class="token operator">=</span> schema<span class="token punctuation">.</span><span class="token function">fieldNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> string <span class="token operator">:</span> strings<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Object</span> as <span class="token operator">=</span> row2<span class="token punctuation">.</span><span class="token function">getAs</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">;</span>                obj<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>string<span class="token punctuation">,</span> as<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">GrowthLineVo</span> growthLineVo <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">toJavaObject</span><span class="token punctuation">(</span><span class="token class-name">GrowthLineVo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            vos<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>growthLineVo<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 七天前，再之前的订单流水总和（GMV）</span>        <span class="token class-name">String</span> preGmvSql <span class="token operator">=</span> <span class="token string">"select sum(origin_price) as totalGmv from ecommerce.t_order where create_time &lt;'%s'"</span><span class="token punctuation">;</span>        preGmvSql <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>preGmvSql<span class="token punctuation">,</span> <span class="token class-name">DateUtil<span class="token punctuation">.</span>DateToString</span><span class="token punctuation">(</span>sevenDayBefore<span class="token punctuation">,</span> <span class="token class-name">DateStyle</span><span class="token punctuation">.</span>YYYY_MM_DD_HH_MM_SS<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Dataset</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span><span class="token punctuation">></span></span> gmvDs <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">sql</span><span class="token punctuation">(</span>preGmvSql<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">double</span> previousGmv <span class="token operator">=</span> gmvDs<span class="token punctuation">.</span><span class="token function">collectAsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDouble</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//取出第0行，第0列</span>        <span class="token class-name">BigDecimal</span> preGmv <span class="token operator">=</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>previousGmv<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 之前每天的增量gmv取出，依次叠加，得到总和</span>        <span class="token class-name">BigDecimal</span> currentGmv <span class="token operator">=</span> preGmv<span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> vos<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">GrowthLineVo</span> growthLineVo <span class="token operator">=</span> vos<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            currentGmv <span class="token operator">=</span> currentGmv<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>growthLineVo<span class="token punctuation">.</span><span class="token function">getGmv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//加上当天GMV新增量</span>            growthLineVo<span class="token punctuation">.</span><span class="token function">setGmv</span><span class="token punctuation">(</span>currentGmv<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> vos<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="标签系统"><a href="#标签系统" class="headerlink" title="标签系统"></a>标签系统</h3><p>首先保证es、kibana安装完成，然后在kibana命令行中写如下命令：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">PUT /tag/_doc/_mapping?pretty <span class="token punctuation">&#123;</span> <span class="token property">"_doc"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"properties"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"memberId"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span> <span class="token property">"fields"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"keyword"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"keyword"</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token property">"phone"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span> <span class="token property">"fields"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"keyword"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"keyword"</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token property">"sex"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span> <span class="token property">"fields"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"keyword"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"keyword"</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token property">"channel"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span> <span class="token property">"fields"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"keyword"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"keyword"</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token property">"subOpenId"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span> <span class="token property">"fields"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"keyword"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"keyword"</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>“address”<span class="token operator">:</span> <span class="token punctuation">&#123;</span> “type”<span class="token operator">:</span> “text” <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"regTime"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"date"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token property">"orderCount"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"long"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token property">"orderTime"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"date"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token property">"orderMoney"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"float"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token property">"favGoods"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span> <span class="token property">"fields"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"keyword"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"keyword"</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token property">"freeCouponTime"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"date"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token property">"couponTimes"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"date"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token property">"chargeMoney"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"double"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token property">"overTime"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"long"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token property">"feedBack"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"long"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>正常情况返回</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"acknowledged"</span> <span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>也可以在dashboard-&gt;Index Management-&gt;选择你的查询index并点击-&gt;mapping，可以查看到提交的mapping</p><p>执行UserTagEtl.java可以将用户标签数据存入es，接着可以在es中查到数据<code>GET /usertag/_search</code>，其中的total表示有1000条数据</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"hits"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"total"</span> <span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>    <span class="token property">"max_score"</span> <span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>    <span class="token property">"hits"</span> <span class="token operator">:</span> <span class="token punctuation">[</span>----省略一万字-----<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webData用户数据【JSON格式】</title>
      <link href="/2022/04/24/webdata%E6%95%B0%E6%8D%AE/"/>
      <url>/2022/04/24/webdata%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<p>memberVO</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"memberHeat"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"reg"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token property">"order"</span><span class="token operator">:</span> <span class="token number">344</span><span class="token punctuation">,</span> <span class="token property">"coupon"</span><span class="token operator">:</span> <span class="token number">540</span><span class="token punctuation">,</span> <span class="token property">"complete"</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token property">"orderAgain"</span><span class="token operator">:</span> <span class="token number">197</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token property">"memberSexes"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"sexCount"</span><span class="token operator">:</span> <span class="token number">201</span><span class="token punctuation">,</span> <span class="token property">"memberSex"</span><span class="token operator">:</span> <span class="token number">-1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token property">"sexCount"</span><span class="token operator">:</span> <span class="token number">397</span><span class="token punctuation">,</span> <span class="token property">"memberSex"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token property">"sexCount"</span><span class="token operator">:</span> <span class="token number">402</span><span class="token punctuation">,</span> <span class="token property">"memberSex"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"memberMpSubs"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"subCount"</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token property">"unSubCount"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token property">"memberChannels"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"channelCount"</span><span class="token operator">:</span> <span class="token number">171</span><span class="token punctuation">,</span> <span class="token property">"memberChannel"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token property">"channelCount"</span><span class="token operator">:</span> <span class="token number">211</span><span class="token punctuation">,</span> <span class="token property">"memberChannel"</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token property">"channelCount"</span><span class="token operator">:</span> <span class="token number">199</span><span class="token punctuation">,</span> <span class="token property">"memberChannel"</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token property">"channelCount"</span><span class="token operator">:</span> <span class="token number">195</span><span class="token punctuation">,</span> <span class="token property">"memberChannel"</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token property">"channelCount"</span><span class="token operator">:</span> <span class="token number">224</span><span class="token punctuation">,</span> <span class="token property">"memberChannel"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>优惠券过期数据</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-23"</span><span class="token punctuation">,</span><span class="token property">"freeCount"</span><span class="token operator">:</span><span class="token number">8</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-24"</span><span class="token punctuation">,</span><span class="token property">"freeCount"</span><span class="token operator">:</span><span class="token number">9</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-25"</span><span class="token punctuation">,</span><span class="token property">"freeCount"</span><span class="token operator">:</span><span class="token number">13</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-26"</span><span class="token punctuation">,</span><span class="token property">"freeCount"</span><span class="token operator">:</span><span class="token number">15</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-27"</span><span class="token punctuation">,</span><span class="token property">"freeCount"</span><span class="token operator">:</span><span class="token number">13</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-28"</span><span class="token punctuation">,</span><span class="token property">"freeCount"</span><span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-29"</span><span class="token punctuation">,</span><span class="token property">"freeCount"</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-30"</span><span class="token punctuation">,</span><span class="token property">"freeCount"</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"couponCount"</span><span class="token operator">:</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-23"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"couponCount"</span><span class="token operator">:</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-24"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"couponCount"</span><span class="token operator">:</span><span class="token number">35</span><span class="token punctuation">,</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-25"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"couponCount"</span><span class="token operator">:</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-26"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"couponCount"</span><span class="token operator">:</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-27"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"couponCount"</span><span class="token operator">:</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-28"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"couponCount"</span><span class="token operator">:</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-29"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"couponCount"</span><span class="token operator">:</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-30"</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>词云数据</p><pre class="line-numbers language-none"><code class="language-none">&#123;  &quot;kabuqinuo&quot;: 335,  &quot;蔓越莓&quot;: 308,  &quot;隔壁小孩都馋哭了&quot;: 110,  &quot;螺狮粉半价&quot;: 77,  &quot;拒绝的一万种理由&quot;: 60,  &quot;2022考研&quot;: 48,  &quot;破壁机&quot;: 47,  &quot;iphone 13&quot;: 34,  &quot;为美好世界献上祝福第一季BD&quot;: 31,  &quot;3080Ti&quot;: 31&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>用户增长数据</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"gmv"</span><span class="token operator">:</span><span class="token number">307583</span><span class="token punctuation">,</span><span class="token property">"memberCount"</span><span class="token operator">:</span><span class="token number">699</span><span class="token punctuation">,</span><span class="token property">"orderCount"</span><span class="token operator">:</span><span class="token number">559</span><span class="token punctuation">,</span><span class="token property">"regCount"</span><span class="token operator">:</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-23"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"gmv"</span><span class="token operator">:</span><span class="token number">324849</span><span class="token punctuation">,</span><span class="token property">"memberCount"</span><span class="token operator">:</span><span class="token number">749</span><span class="token punctuation">,</span><span class="token property">"orderCount"</span><span class="token operator">:</span><span class="token number">599</span><span class="token punctuation">,</span><span class="token property">"regCount"</span><span class="token operator">:</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-24"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"gmv"</span><span class="token operator">:</span><span class="token number">382662</span><span class="token punctuation">,</span><span class="token property">"memberCount"</span><span class="token operator">:</span><span class="token number">799</span><span class="token punctuation">,</span><span class="token property">"orderCount"</span><span class="token operator">:</span><span class="token number">639</span><span class="token punctuation">,</span><span class="token property">"regCount"</span><span class="token operator">:</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-25"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"gmv"</span><span class="token operator">:</span><span class="token number">457278</span><span class="token punctuation">,</span><span class="token property">"memberCount"</span><span class="token operator">:</span><span class="token number">849</span><span class="token punctuation">,</span><span class="token property">"orderCount"</span><span class="token operator">:</span><span class="token number">679</span><span class="token punctuation">,</span><span class="token property">"regCount"</span><span class="token operator">:</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-26"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"gmv"</span><span class="token operator">:</span><span class="token number">505656</span><span class="token punctuation">,</span><span class="token property">"memberCount"</span><span class="token operator">:</span><span class="token number">899</span><span class="token punctuation">,</span><span class="token property">"orderCount"</span><span class="token operator">:</span><span class="token number">719</span><span class="token punctuation">,</span><span class="token property">"regCount"</span><span class="token operator">:</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-27"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"gmv"</span><span class="token operator">:</span><span class="token number">525037</span><span class="token punctuation">,</span><span class="token property">"memberCount"</span><span class="token operator">:</span><span class="token number">949</span><span class="token punctuation">,</span><span class="token property">"orderCount"</span><span class="token operator">:</span><span class="token number">759</span><span class="token punctuation">,</span><span class="token property">"regCount"</span><span class="token operator">:</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-28"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"gmv"</span><span class="token operator">:</span><span class="token number">588907</span><span class="token punctuation">,</span><span class="token property">"memberCount"</span><span class="token operator">:</span><span class="token number">999</span><span class="token punctuation">,</span><span class="token property">"orderCount"</span><span class="token operator">:</span><span class="token number">799</span><span class="token punctuation">,</span><span class="token property">"regCount"</span><span class="token operator">:</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-29"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"gmv"</span><span class="token operator">:</span><span class="token number">589021</span><span class="token punctuation">,</span><span class="token property">"memberCount"</span><span class="token operator">:</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token property">"orderCount"</span><span class="token operator">:</span><span class="token number">800</span><span class="token punctuation">,</span><span class="token property">"regCount"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-30"</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>两周内每日注册量</p><pre class="line-numbers language-none"><code class="language-none">[&#123;&quot;day&quot;:&quot;2019-11-16&quot;,&quot;regCount&quot;:50&#125;,&#123;&quot;day&quot;:&quot;2019-11-17&quot;,&quot;regCount&quot;:50&#125;,&#123;&quot;day&quot;:&quot;2019-11-18&quot;,&quot;regCount&quot;:50&#125;,&#123;&quot;day&quot;:&quot;2019-11-19&quot;,&quot;regCount&quot;:50&#125;,&#123;&quot;day&quot;:&quot;2019-11-20&quot;,&quot;regCount&quot;:50&#125;,&#123;&quot;day&quot;:&quot;2019-11-21&quot;,&quot;regCount&quot;:50&#125;,&#123;&quot;day&quot;:&quot;2019-11-22&quot;,&quot;regCount&quot;:50&#125;,&#123;&quot;day&quot;:&quot;2019-11-23&quot;,&quot;regCount&quot;:50&#125;,&#123;&quot;day&quot;:&quot;2019-11-24&quot;,&quot;regCount&quot;:50&#125;,&#123;&quot;day&quot;:&quot;2019-11-25&quot;,&quot;regCount&quot;:50&#125;,&#123;&quot;day&quot;:&quot;2019-11-26&quot;,&quot;regCount&quot;:50&#125;,&#123;&quot;day&quot;:&quot;2019-11-27&quot;,&quot;regCount&quot;:50&#125;,&#123;&quot;day&quot;:&quot;2019-11-28&quot;,&quot;regCount&quot;:50&#125;,&#123;&quot;day&quot;:&quot;2019-11-29&quot;,&quot;regCount&quot;:50&#125;]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>两周内每日订单量</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-16"</span><span class="token punctuation">,</span><span class="token property">"orderCount"</span><span class="token operator">:</span><span class="token number">40</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-17"</span><span class="token punctuation">,</span><span class="token property">"orderCount"</span><span class="token operator">:</span><span class="token number">40</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-18"</span><span class="token punctuation">,</span><span class="token property">"orderCount"</span><span class="token operator">:</span><span class="token number">40</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-19"</span><span class="token punctuation">,</span><span class="token property">"orderCount"</span><span class="token operator">:</span><span class="token number">40</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-20"</span><span class="token punctuation">,</span><span class="token property">"orderCount"</span><span class="token operator">:</span><span class="token number">40</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-21"</span><span class="token punctuation">,</span><span class="token property">"orderCount"</span><span class="token operator">:</span><span class="token number">40</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-22"</span><span class="token punctuation">,</span><span class="token property">"orderCount"</span><span class="token operator">:</span><span class="token number">40</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-23"</span><span class="token punctuation">,</span><span class="token property">"orderCount"</span><span class="token operator">:</span><span class="token number">40</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-24"</span><span class="token punctuation">,</span><span class="token property">"orderCount"</span><span class="token operator">:</span><span class="token number">40</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-25"</span><span class="token punctuation">,</span><span class="token property">"orderCount"</span><span class="token operator">:</span><span class="token number">40</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-26"</span><span class="token punctuation">,</span><span class="token property">"orderCount"</span><span class="token operator">:</span><span class="token number">40</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-27"</span><span class="token punctuation">,</span><span class="token property">"orderCount"</span><span class="token operator">:</span><span class="token number">40</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-28"</span><span class="token punctuation">,</span><span class="token property">"orderCount"</span><span class="token operator">:</span><span class="token number">40</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token property">"day"</span><span class="token operator">:</span><span class="token string">"2019-11-29"</span><span class="token punctuation">,</span><span class="token property">"orderCount"</span><span class="token operator">:</span><span class="token number">40</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>用户转化率</p><pre class="line-numbers language-none"><code class="language-none">&#123;&quot;chargeCoupon&quot;:186,&quot;click&quot;:800,&quot;order&quot;:541,&quot;orderAgain&quot;:197,&quot;view&quot;:1000&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">OH MY GIRL</div>  <p>关于OH MY GIRL的图片</p>  <a href='/photo/ohmygirl'></a>  </figcaption>  </figure>  </div>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring学习</title>
      <link href="/2022/04/02/Spring%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/04/02/Spring%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>Spring学习</p><p>[TOC]</p><h1 id="Spring基础知识"><a href="#Spring基础知识" class="headerlink" title="Spring基础知识"></a>Spring基础知识</h1><h2 id="一、Spring框架简介"><a href="#一、Spring框架简介" class="headerlink" title="一、Spring框架简介"></a>一、Spring框架简介</h2><h3 id="Spring是什么"><a href="#Spring是什么" class="headerlink" title="Spring是什么"></a>Spring是什么</h3><blockquote><p>Spring是一个JEE开发框架，开源，轻量级，功能强大。</p><p>Spring框架的核心特性是&#x3D;&#x3D;依赖注入(DI)&#x3D;&#x3D;与&#x3D;&#x3D;面向切面编程(AOP)&#x3D;&#x3D;，Spring框架可以看作是一个控制反转的容器。尽管Spring主要用于JEE应用开发，但实际上这2个核心特性可用于任何Java项目。</p><p>Spring框架是Java EE开发中最流行的框架，已经成为JEE事实上的标准，全世界的开发人员都在使用Spring框架开发各种应用。</p></blockquote><h3 id="框架的优点："><a href="#框架的优点：" class="headerlink" title="框架的优点："></a>框架的优点：</h3><ul><li><strong>松耦合</strong>，组件（Bean）之间依赖很松，模块可以轻松替换</li><li><strong>简单，非侵入式</strong>，组件（Bean）本身只是简单的Java对象，无需任何特殊处理，非常简单</li></ul><h3 id="核心技术：DI-x2F-IOC和AOP"><a href="#核心技术：DI-x2F-IOC和AOP" class="headerlink" title="核心技术：DI&#x2F;IOC和AOP"></a>核心技术：<strong>DI&#x2F;IOC</strong>和<strong>AOP</strong></h3><ul><li><p>依赖注入Dependency Injection，也称控制反转Inversion of Control</p><blockquote><p>Java程序中，Java类是基本的代码组织单位。当某个类要使用另一个类时，自然的做法是创建另一个类的对象，然后调用该对象的方法。这样做在程序规模较小时没什么问题，但当程序规模很大时这些类之间过于紧密的耦合会导致后续开发维护困难。例如要替换其中某个类，就不得不修改所有涉及这个类的代码。</p><p>控制反转(Inversion of Control &#x2F; IoC)与依赖注入（Dependency Injection &#x2F; DI）就是为解决这个问题。上面提到类里面创建另外一个类对象会造成耦合太紧，Spring框架就把创建类的行为从类中拿出来放到Spring框架里去做，类与类之间创建关系就没有了。</p><p>&#x3D;&#x3D;本来由类控制其所依赖的类对象的创建，现在把创建动作放到Spring框架里了，由框架控制所有类对象的创建，这就是“控制反转”。&#x3D;&#x3D;</p><p>&#x3D;&#x3D;框架创建了类所依赖的对象，然后把这些对象传给（注入）依赖它们的类，这就是“依赖注入”。&#x3D;&#x3D;</p><p>所以可以看到，Spring框架中控制反转(Inversion of Control &#x2F; IoC)与依赖注入（Dependency Injection &#x2F; DI）实际上讲的是同一个事情，只是角度不同。</p></blockquote></li><li><p>面向切面编程(Aspect Oriented Programming&#x2F;AOP)</p><blockquote><p>面向切面编程的主要作用是，在不修改源代码的情况下，可以给目标类打补丁，让其执行补丁中的代码。</p><p>例如，用户类中有个登录方法，现在需要加用户登录日志。使用AOP就不需要修改用户登录方法，只需把日志代码注入到用户登录方法前后，让其执行。日志代码就是“切面”，插入代码的地方（用户类的登录方法）就是“连接点”。</p><p>也就是说，可以&#x3D;&#x3D;方便地修改项目功能&#x3D;&#x3D;</p></blockquote></li></ul><h2 id="二、怎么使用"><a href="#二、怎么使用" class="headerlink" title="二、怎么使用"></a>二、怎么使用</h2><h3 id="1-导入依赖包"><a href="#1-导入依赖包" class="headerlink" title="1. 导入依赖包"></a>1. 导入依赖包</h3><p>在POM.xml文件中加入依赖，注意<code>org.springframework</code>这几个包的版本必须一致</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.3.10.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.3.10.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-beans<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.3.10.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-expression<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.3.10.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>commons-logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>commons-logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.1.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-创建一个类，提供get和set方法"><a href="#2-创建一个类，提供get和set方法" class="headerlink" title="2. 创建一个类，提供get和set方法"></a>2. 创建一个类，提供get和set方法</h3><p>在你的包中创建类，例如我是在<code>src=&gt;main=&gt;java=&gt;com.hengxing.spring</code>中</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>    <span class="token comment">//此处省略getter、setter、toString方法</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-编写配置文件-applicationContext-xml"><a href="#3-编写配置文件-applicationContext-xml" class="headerlink" title="3.编写配置文件-applicationContext.xml"></a>3.编写配置文件-applicationContext.xml</h3><p>在resources文件夹上右键，选择<code>new=&gt;XML Configuration File=&gt;Spring Config</code>，将下面的内容贴进去</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema- instance<span class="token punctuation">"</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans     http://www. springframework.org/schema/beans/spring-beans-4.3.xsd <span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 将 User 对象交给 spring 容器管理，其中 name 任意，class 为全包名 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.hengxing.spring.User<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>看到中间的bean了吗？这就是你在spring中创建的对象，现在要调用它就不用再new了，比如我现在写一个测试方法，继续往下看</p><h3 id="4-使用"><a href="#4-使用" class="headerlink" title="4.使用"></a>4.使用</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testUseSpring</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//读取spring核心配置文件，并创建出文件中配置的类的对象</span>        <span class="token class-name">ApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"applicationContext.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//直接向spring要对象，getBean(&lt;这个对象的id>, &lt;对象的类型>);</span>        <span class="token class-name">User</span> user <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样我们就省去了一步new的过程。现在我们只省略了一步，如果我们的对象变多，那就能体现出这种方式的简便。运行后就可以看到：</p><p><img src="https://s2.loli.net/2022/03/27/G21z7fomPHAilZW.png" alt="image-20220327214739808"></p><p>这个对象里面的值是null？当然，因为你没有对他进行赋值操作，它默认就是null。</p><p>如果你想对它进行赋值，小小修改一下你的bean，</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span>bean id<span class="token operator">=</span><span class="token string">"user"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"com.hengxing.spring.User"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"username"</span> value<span class="token operator">=</span><span class="token string">"Cloud"</span><span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"age"</span> value<span class="token operator">=</span><span class="token string">"17"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>bean<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>它就会打印出：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">User&#123;username&#x3D;&#39;Cloud&#39;, age&#x3D;17&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再进一步，如果你想为这个对象添加一个类（比如现在我要让Cloud拥有一辆车）</p><p>首先你需要创建一个Car的类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> color<span class="token punctuation">;</span>    <span class="token comment">//此处省略getter、setter、toString方法</span><span class="token punctuation">&#125;</span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改User类，为它添加car属性</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Car</span> car<span class="token punctuation">;</span>    <span class="token comment">//此处省略getter、setter、toString方法</span><span class="token punctuation">&#125;</span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>再小小修改一下你的bean添加car的bean，在user的bean中添加car属性，注意这里的标签变成了<code>ref</code>，因为你引用的是对象</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>car<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.hengxing.spring.Car<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>红旗<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>color<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>黑色<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.hengxing.spring.User<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Cloud<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>17<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>car<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>car<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重新执行一下你的测试方法，你甚至不用改动一个字，它会打印出</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">User&#123;username&#x3D;&#39;Cloud&#39;, age&#x3D;17, car&#x3D;Car&#123;name&#x3D;&#39;红旗&#39;, color&#x3D;&#39;黑色&#39;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="Spring与JDBC整合"><a href="#Spring与JDBC整合" class="headerlink" title="Spring与JDBC整合"></a>Spring与JDBC整合</h1><h2 id="只是连接"><a href="#只是连接" class="headerlink" title="只是连接"></a>只是连接</h2><p>依赖如下</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.3.10.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.3.10.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-beans<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.3.10.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-expression<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.3.10.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>commons-logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>commons-logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.1.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--        事务底层管理--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-aop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.3.10.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.1.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.mchange<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>c3p0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.9.5.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--        spring-jdbc spring-tx事务--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.3.10.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-tx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.3.10.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>既然我们使用spring了，就不需要new c3p0的对象，直接在spring中声明</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--    c3p0对象--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.mchange.v2.c3p0.ComboPooledDataSource<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>可以看到还是一样的类，只不过声明方式不同，现在我们测试一下是否成功</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"applicationContext.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">DataSource</span> dataSource <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"dataSource"</span><span class="token punctuation">,</span> <span class="token class-name">DataSource</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Connection</span> connection <span class="token operator">=</span> dataSource<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取连接</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>connection<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>套路还是声明配置文件，再直接获取对象。你可以在控制台看到</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">com.mchange.v2.c3p0.ComboPooledDataSource[ id......<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>说明我们连接成功了</p><h2 id="实战一下"><a href="#实战一下" class="headerlink" title="实战一下"></a>实战一下</h2><p>首先要确定User类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>   <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>   <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>   <span class="token comment">//此处省略getter、setter、toString方法</span><span class="token punctuation">&#125;</span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>新建Dao层包，创建dao层接口</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> loginDao <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">insertUser</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>在dao包中在创建实现包(impl),创建实现方法</p><p>这个时候就体现出spring的方便，正常情况下，我们连接数据库，需要每个方法都要new很多对象用到很多变量，比如jdbc的datasource对象、conn变量用来获取连接、prepareStatement用来防止sql注入。但是有了spring，我们可以&#x3D;&#x3D;直接使用spring的template模板&#x3D;&#x3D;</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> loginDaoImpl <span class="token keyword">implements</span> loginDao <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">JdbcTemplate</span> jdbcTemplate<span class="token punctuation">;</span><span class="token comment">//使用spring注入的template模板</span><span class="token comment">//下面的方法将其引入</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setJdbcTemplate</span><span class="token punctuation">(</span><span class="token class-name">JdbcTemplate</span> jdbcTemplate<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>jdbcTemplate <span class="token operator">=</span> jdbcTemplate<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//实现方法</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">insertUser</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> sql <span class="token operator">=</span><span class="token string">"insert into users (name,password) values (?,?)"</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//成功返回1，失败返回0</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在<code>applicationContext.xml</code>配置文件中，进行注入，注入的时候注意不要注入到接口类里了，我们是实现类里要用</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--    c3p0对象--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.mchange.v2.c3p0.ComboPooledDataSource<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment">&lt;!--    创建spring对JDBC的支持工具类 jdbcTemplate--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jdbcTemplate<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.springframework.jdbc.core.JdbcTemplate<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--    把jdbcTemplate对象注入到loginDao中去--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loginDao<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.hengxing.dao.impl.loginDaoImpl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jdbcTemplate<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jdbcTemplate<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在可以写一个测试方法，进行插入</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testJDBC</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"applicationContext.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        loginDao loginDao <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"loginDao"</span><span class="token punctuation">,</span> loginDao<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"Cloud"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> loginDao<span class="token punctuation">.</span><span class="token function">insertUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行成功后，控制台会打印出<code>1</code>,并且数据库中会多出一条记录</p><table><thead><tr><th align="center">id</th><th align="center">username</th><th align="center">password</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">Cloud</td><td align="center">123</td></tr></tbody></table><p>ok,你已经完成了Spring与JDBC的整合</p><p>我们还可以使用JDBCTemplate实现如下操作，后续再进行补全吧</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">updateUser</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">deleteUser</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">findUserById</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">></span></span> <span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="IOC注解方式开发"><a href="#IOC注解方式开发" class="headerlink" title="IOC注解方式开发"></a>IOC注解方式开发</h1><h2 id="怎么使用"><a href="#怎么使用" class="headerlink" title="怎么使用"></a>怎么使用</h2><p>首先要添加<code>context</code>约束，添加之后才可以使用context标签</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans       http://www.springframework.org/schema/beans/spring-beans.xsd       http://www.springframework.org/schema/context       http://www.springframework.org/schema/context/spring-context.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment">&lt;!--组件扫描，告诉它去哪里找注解--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.hengxing.bean<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在可以在你对应包中为类添加注解</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">&#123;</span>    <span class="token comment">//内容省略</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>组件声明默认的名称是你的类名，如果你想自定义一个名字，可以这样</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"abc"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再给它的属性赋值</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"abc"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"Tifa"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"123"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>所有步骤已经成功，现在测试一下</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testUseSpring</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//读取spring核心配置文件，并创建出文件中配置的类的对象</span>    <span class="token class-name">ApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"applicationContext.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//直接向spring要对象，getBean(&lt;你要给这个对象起的名字>, &lt;对象的类型>);</span>    <span class="token class-name">User</span> user <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"abc"</span><span class="token punctuation">,</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行后你会在控制台看到输出</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">User&#123;id&#x3D;null, name&#x3D;&#39;Tifa&#39;, password&#x3D;&#39;123&#39;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个时候，如果我想要给Tifa添加一个对象的属性呢，比如我写了一个Car类，定义Tifa有一辆红色的法拉利，那么同样，先给这个Car类写上注解并赋值</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"法拉利"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"红色"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> color<span class="token punctuation">;</span>    <span class="token comment">//此处省略getter、setter、toString方法&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在User类中添加属性，为这个属性添加<code>@Autowired</code>注解</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"abc"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"Tifa"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"123"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">Car</span> car<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这下再去执行测试方法，可以看到</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">User&#123;id&#x3D;null, name&#x3D;&#39;Tifa&#39;, password&#x3D;&#39;123&#39;, car&#x3D;Car&#123;name&#x3D;&#39;法拉利&#39;, color&#x3D;&#39;红色&#39;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>完成</p><h2 id="DAO层注解"><a href="#DAO层注解" class="headerlink" title="DAO层注解"></a>DAO层注解</h2><p>spring为DAO层制作了单独的注解</p><p><code>@Repository</code></p><p>这个注解要添加在DAO层的实现类上</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//默认会使用类名，所以我们改一个好用的名字，等会调用就方便一些</span><span class="token annotation punctuation">@Repository</span><span class="token punctuation">(</span><span class="token string">"loginDao"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> loginDaoImpl <span class="token keyword">implements</span> loginDao <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Autowired</span><span class="token comment">//用spring注入</span>    <span class="token keyword">private</span> <span class="token class-name">JdbcTemplate</span> jdbcTemplate<span class="token punctuation">;</span>    <span class="token comment">/*不需要通过它来接收注入的值，spring会为我们注入    public void setJdbcTemplate(JdbcTemplate jdbcTemplate) &#123;        this.jdbcTemplate = jdbcTemplate;    &#125;*/</span>    <span class="token comment">//省略实现方法</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>还记得我们之前在组件扫描器中定义它寻找注解的地方吗，那时写的是bean包，但现在我们的方法在DAO包下的impl包，修改一下，让他直接在工程包中找，就可以找得到。</p><p>另外，既然我们使用spring注解方式了，就不用在把logindao再注入了，所以删掉最后一项</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.hengxing<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment">&lt;!--    c3p0对象--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.mchange.v2.c3p0.ComboPooledDataSource<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment">&lt;!--    创建spring对JDBC的支持工具类 jdbcTemplate--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jdbcTemplate<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.springframework.jdbc.core.JdbcTemplate<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--&amp;lt;!&amp;ndash;    把jdbcTemplate对象注入到loginDao中去&amp;ndash;&amp;gt;--></span><span class="token comment">&lt;!--    &lt;bean id="loginDao" class="com.hengxing.dao.impl.loginDaoImpl">--></span><span class="token comment">&lt;!--        &lt;property name="jdbcTemplate" ref="jdbcTemplate">&lt;/property>--></span><span class="token comment">&lt;!--    &lt;/bean>--></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>还是用之前向数据库中插入信息的方法，修改一下插入的信息即可</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testJDBC</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">ApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"applicationContext.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    loginDao loginDao <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"loginDao"</span><span class="token punctuation">,</span> loginDao<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    user<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    user<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"AWS"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    user<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> result <span class="token operator">=</span> loginDao<span class="token punctuation">.</span><span class="token function">insertUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>成功后控制台会输出<code>1</code>，数据库会多出一条数据</p><table><thead><tr><th align="center">id</th><th align="center">username</th><th align="center">password</th></tr></thead><tbody><tr><td align="center">2</td><td align="center">AWS</td><td align="center">123</td></tr></tbody></table><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul><li>使用前，为context标签添加约束</li><li>context标签生成组件扫描器，告诉它去哪里找注解</li><li>在类中添加注解，<code>@Component</code></li><li>为属性赋值<ul><li><code>@Value</code>    普通属性</li><li><code>@Autowired</code> 对象属性</li></ul></li></ul><h1 id="SpringMVC"><a href="#SpringMVC" class="headerlink" title="SpringMVC"></a>SpringMVC</h1><p>之前我们是使用Servlet和DAO层交换数据，这种方式比较繁琐，所以spring为我们提供了一个框架SpringMVC，专门替代Servlet。</p><h2 id="SpringMVC项目的组建"><a href="#SpringMVC项目的组建" class="headerlink" title="SpringMVC项目的组建"></a>SpringMVC项目的组建</h2><p>这是web项目要用到的，所以创建项目的时候一定要创建web项目</p><p><img src="https://s2.loli.net/2022/03/28/t3fx9TukzBDIedW.png" alt="image-20220328155641141"></p><p>groupId,artifactId,version的录入原则:</p><blockquote><p>groupId翻译为组Id，通常的写法为公司域名的倒写，表示本项目属于哪个公司。</p><p>artifactId翻译为手工艺品，表示项目的的名字或者模块的名字。</p><p>Version通常为X.X.X格式，表示项目的版本号。</p></blockquote><p><img src="https://s2.loli.net/2022/03/28/T5wcJiByG7lanZE.png" alt="image-20220328155934944"></p><p>导入依赖，添加这两个依赖，注意，如果你之前有spring其他的依赖，记得&#x3D;&#x3D;保持版本一致&#x3D;&#x3D;</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.3.10.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-webmvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.3.10.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在web.xml文件加入springmvc的前端控制器</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xmlns.jcp.org/xml/ns/javaee<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xmlns.jcp.org/xml/ns/javaee          http://java.sun.com/xml/ns/javaee/web-app_3_1.xsd<span class="token punctuation">"</span></span>         <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3.1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>springmvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">></span></span>org.springframework.web.servlet.DispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>springmvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们需要特别关注其中servlet的写法，其中</p><ul><li>两个<code>servlet-name</code>的标签名字必须一致</li><li><code>url-pattern</code>标签中填<code>*.do</code>，这个配置的意思是说，所有<code>*.do</code>这种格式的请求，都会被我们下一项声明的Servlet处理</li><li><code>servlet-class</code>配置要填下面的类名</li></ul><p><img src="https://s2.loli.net/2022/03/28/H69cl2Ki58hT1DR.png" alt="image-20220328162814273"></p><p>右键–&gt;copy reference，把复制出的内容填上去</p><p>现在就配置完成了</p><h2 id="怎么使用-1"><a href="#怎么使用-1" class="headerlink" title="怎么使用"></a>怎么使用</h2><p>springMVC是代替servlet的，而servlet又属于控制器（控制页面与DAO层的交换），所以我们创建一个<code>controller</code>包来存放springmvc的类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FirstController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"world"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">helloWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"This is my first SpringMVC programe."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>又多了两个新的注解，它们是做什么的？</p><ul><li><code>@Controller</code>其实和<code>@Component</code>是一样的，都是在告诉spring这是我的一个组件，你要替我创建它，但<code>@Controller</code>是专门为控制器准备的，别人一眼就能知道这是一个控制器，这有利于后期维护。</li><li><code>@RequestMapping</code>是告诉servlet你的请求路径</li></ul><p>现在你在jsp页面中可以通过你的路径访问方法，就像这样</p><pre class="line-numbers language-jsp" data-language="jsp"><code class="language-jsp">&lt;form action&#x3D;&quot;&#x2F;hello&#x2F;world.do&quot;&gt;    &lt;input type&#x3D;&quot;submit&quot;&#x2F;&gt;&lt;&#x2F;form&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>最后一步，在WEB-INF文件夹右键<code>-&gt;new-&gt;XML Configuration File-&gt;Spring Config</code>新建一个servlet配置文件，文件名为<code>%servlet-name%-servlet.xml</code>，其中%servlet-name%是你刚刚配置的servlet名称，后面的内容不能更改。</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>mvc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/mvc<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans       http://www.springframework.org/schema/beans/spring-beans.xsd       http://www.springframework.org/schema/context       http://www.springframework.org/schema/context/spring-context.xsd       http://www.springframework.org/schema/mvc       http://www.springframework.org/schema/mvc/spring-mvc.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.hengxing.controller<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>annotation-driven</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>老规矩，要先告诉spring去哪里找类，创建扫描器，又因为要用扫描器，所以声明context标签。</p><p><code>@Controller</code>解决了，<code>@RequestMapping</code>怎么办？所以还需要<code>mvc</code>标签，<code>&lt;mvc:annotation-driven/&gt;</code>，见名知义，是告诉spring当前是注解驱动模式，所以在遇到请求时，spring会去控制器中寻找<code>@RequestMapping</code>的路径。</p><p>恭喜，springMVC已经配置完成，请配置并启动tomcat服务器测试</p><p><a href="http://localhost:8080/login.jsp">http://localhost:8080/login.jsp</a></p><p>网页中你会看到一个提交按钮，点击它就会请求方法<code>/hello/world.do</code>,servlet接收到请求后，由于spring配置了所有<code>*.do</code>的请求都由servlet处理，所以servlet又会在控制器中寻找处理方法，我们在处理器中设置了注解驱动，则servlet又会根据注释去寻找路径所指的方法，打印出方法内容，控制台会打印</p><p><code>This is my first SpringMVC programe.</code></p><h2 id="springMVC从jsp接收数据"><a href="#springMVC从jsp接收数据" class="headerlink" title="springMVC从jsp接收数据"></a>springMVC从jsp接收数据</h2><p>在webapp中添加一个页面</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;%@ page contentType="text/html;charset=UTF-8" language="java" %><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>用户添加<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>User Add Page<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/user/add.do<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">cellspacing</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">cellpadding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>用户名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>密码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>添加<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reset<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>重置<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/03/28/EYOH4hCekzvQTF7.png" alt="image-20220328191707378"></p><p>写controller用来控制信息</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"add"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">userAdd</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行tomcat，可以看到控制台打印出了你输入的信息</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Cloud123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>说明这种方法可以接收到消息，但是写起来很麻烦，现在还只有姓名和密码，以后要是有一长串表单呢，为了解决这个问题，我们可以使用一个类来接收数据，比如我们现在写一个User类，里面包含要接收的信息</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>     <span class="token comment">//此处省略getter、setter、toString方法&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>只需要对控制器进行小小的修改，用类来接收信息即可，它会自动帮我们把表单的内容拼接起来</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"add"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">userAdd</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同样可以接收到信息</p><h2 id="SpringMVC-Spring-JDBC"><a href="#SpringMVC-Spring-JDBC" class="headerlink" title="SpringMVC+Spring+JDBC"></a>SpringMVC+Spring+JDBC</h2><p><strong>有个问题</strong></p><p>之前我们与JDBC交互的DAO层代码是在测试类中跑起来的，测试类中，我们用<code>ApplicationContext context = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;);</code>读取了配置文件，获得对象，但现在，如果我们想在控制层使用DAO方法（也就是可以从页面获取信息后，直接向数据库交互，完成了正常的业务逻辑），要怎么用呢？</p><p>与配置servlet类似，在Project目录中-&gt;External libraries-&gt;org.springframework-&gt;web-&gt;context-&gt;ContextLoaderListener，右键-&gt;Copy Reference。</p><p>在web,xml中声明一个监听器，这个声明下面的<code>&lt;context-param&gt;</code>是指定配置文件的路径，类似于我们在测试类中写的<code>ClassPathXmlApplicationContext</code></p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener-class</span><span class="token punctuation">></span></span>org.springframework.web.context.ContextLoaderListener<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener-class</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>context-param</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">></span></span>contextConfigLocation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">></span></span>classpath:applicationContext.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>context-param</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在我们就可以把DAO类作为一个属性注入到controller中去</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> loginDao loginDao<span class="token punctuation">;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"add"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">userAdd</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        loginDao<span class="token punctuation">.</span><span class="token function">insertUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>你看，这样我就可以直接在控制层中调用DAO层的方法了。这里我贴出jsp页面的代码，&#x3D;&#x3D;注意&#x3D;&#x3D;，我数据库中名字的字段是<code>name</code>，所以我修改了jsp页面输入框的name，由username改为name</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>User Add Page<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/user/add.do<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">cellspacing</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">cellpadding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>用户名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>密码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>添加<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reset<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>重置<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>数据库中多了一条数据</p><table><thead><tr><th align="center">id</th><th align="center">name</th><th align="center">password</th></tr></thead><tbody><tr><td align="center">16</td><td align="center">Aerith</td><td align="center">222</td></tr></tbody></table><h2 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h2><ul><li>springMVC<ul><li>前端控制器替代Servlet与页面交互</li><li><code>@controller</code> 控制器</li><li><code>@RequestMapping</code> 声明请求路径</li><li>向controller中注入dao对象属性时要用<code>@Autowired</code></li></ul></li></ul><h1 id="SpringBoot"><a href="#SpringBoot" class="headerlink" title="SpringBoot"></a>SpringBoot</h1><h2 id="什么是SpringBoot"><a href="#什么是SpringBoot" class="headerlink" title="什么是SpringBoot"></a>什么是SpringBoot</h2><p>SpringBoot是一个快速开发框架，快速的将一些常用的第三方依赖整合（原理：通过Maven子父工程的方式），简化XML配置，全部采用注解形式，内置HTTP服务器（Jetty和Tomcat），最终以Java应用程序进行执行。</p><p>SpringBoot主要目标是：为所有Spring的开发者提供一个非常快速的、广泛接受的入门体验。</p><p><strong>好</strong></p><ul><li>快速构建项目，绝对没有代码生成，也无需 XML 配置</li><li>对主流开发框架的无配置集成 </li><li>项目可独立运行，无须外部依赖Servlet容器 </li><li>提供运行时的应用监控 </li><li>极大的提高了开发、部署效率</li><li>与云计算的天然集成</li></ul><p><strong>坏</strong></p><ul><li>从原来的XML配置方式转换到JAVA配置方式变化有点大，不太适应</li><li>至少要了解Spring，才能很容易上手</li></ul><h2 id="创建SpringBoot项目"><a href="#创建SpringBoot项目" class="headerlink" title="创建SpringBoot项目"></a>创建SpringBoot项目</h2><h3 id="1-创建项目"><a href="#1-创建项目" class="headerlink" title="1. 创建项目"></a>1. 创建项目</h3><p>首先，&#x3D;&#x3D;SpringBoot必须使用Maven项目&#x3D;&#x3D;</p><p>然后创建工程</p><p><img src="https://s2.loli.net/2022/03/28/982e1ioSjTwOnxG.png" alt="image-20220328231423463"></p><p><img src="https://s2.loli.net/2022/03/28/oVYbiGQfNcnem1a.png" alt="image-20220328231532542"></p><p><img src="https://s2.loli.net/2022/03/28/6yK8u1tqnSb2ERa.png" alt="image-20220328231821426"></p><h3 id="2-添加依赖"><a href="#2-添加依赖" class="headerlink" title="2. 添加依赖"></a>2. 添加依赖</h3><p>&#x3D;&#x3D;springboot项目必须继承自父项目spring-boot-starter-parent&#x3D;&#x3D;</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.2.4.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>该parent包含了大量默认的配置，大大简化了我们的开发。</strong></p><p>添加web启动器，让项目具有web项目响应的功能。例如：处理请求和响应、启动内置的服务器(tomcat)等。</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注：springboot提供了44种启动器。每种启动器都包含与之对应的功能，其实就是很多jar的集合。在项目中要使用某种或某些功能时，只需要在项目中添加对应的启动器即可。这些启动器中包含大量的自动配置，减少程序中手工配置的工作，从而提高开发效率。</p><h3 id="3-编写控制器"><a href="#3-编写控制器" class="headerlink" title="3. 编写控制器"></a>3. 编写控制器</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/hello"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"hello!"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>@ResponseBody</code>声明了这是一个异步方法</p><h3 id="4-编写启动类"><a href="#4-编写启动类" class="headerlink" title="4. 编写启动类"></a>4. 编写启动类</h3><p>在<code>com.hengxing</code>下创建启动类</p><ul><li>类名随意，一般是<code>MyApplication</code></li><li>与controller类文件同级目录或上一级，我们一般放在上一级</li><li>添加启动类的注解<code> @SpringBootApplication</code></li><li>调用SpringApplication.run方法传入启动类的名称</li></ul> <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyApplication</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">MyApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>直接运行这个方法即可启动SpringBoot项目</p><p><img src="https://s2.loli.net/2022/03/29/JKr5XTiahq6vH3w.png" alt="image-20220329002154007"></p><p>大功告成</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Servlet学习</title>
      <link href="/2022/04/02/Servlet%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/04/02/Servlet%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="Spring预知识-Servlet的学习"><a href="#Spring预知识-Servlet的学习" class="headerlink" title="Spring预知识-Servlet的学习"></a>Spring预知识-Servlet的学习</h1><h2 id="Day02"><a href="#Day02" class="headerlink" title="Day02"></a>Day02</h2><blockquote><p>今天的目标</p><ul><li><p><input disabled="" type="checkbox"> html传值Servlet</p></li><li><p><input disabled="" type="checkbox"> Servlet + Dao</p></li></ul></blockquote><hr><p>在此之前你可以看我的这篇文章<a href="https://blog.csdn.net/hengxingtoongxue/article/details/123765213?spm=1001.2014.3001.5502">Spring预知识[01]-Tomcat&amp;Servlet学习</a>来学习此课程的预备知识</p><h3 id="一、HTML传值Servlet"><a href="#一、HTML传值Servlet" class="headerlink" title="一、HTML传值Servlet"></a>一、HTML传值Servlet</h3><p>我们有如下需求：</p><ol><li>客户端使用HTML写表单</li><li>提交给Servlet，Servlet获取表单内容</li><li>服务器在控制台打印表单数据</li></ol><p>先写个界面出来：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Login<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>登录界面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">cellpadding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span> <span class="token attr-name">cellspacing</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>用户名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>密 码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>登录<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>再向Servlet包中添加Servlet的服务</p><blockquote><p>在包文件夹上右键，点击new-&gt;create new servlet</p></blockquote><p>request负责请求，我们的表单就是客户端传来的请求</p><p>LoginServlet.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span><span class="token string">"/LoginServlet"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> username <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> password <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"username = "</span> <span class="token operator">+</span> username<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"password = "</span> <span class="token operator">+</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token function">doPost</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个文件中<code>@WebServlet(&quot;/LoginServlet&quot;)</code>就指定了你的页面，这样如果你在浏览器中访问<code>http://localhost:8080/LoginServlet</code>它就会执行这个方法。</p><p>现在，如何让HTML页面的表单提交时执行这个方法？</p><p>很简单，将你的表单用它包装起来，它指定了表单提交时执行的方法</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/LoginServlet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    这里是你的表单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>运行服务器，随便在表单中填点什么，点击登录，你可以在服务器控制台看到</p><p><img src="https://s2.loli.net/2022/03/27/rUZOzWpYQuoHvLa.png" alt="image-20220327104427314"></p><h3 id="二、Servlet-DAO-实现一个登录界面"><a href="#二、Servlet-DAO-实现一个登录界面" class="headerlink" title="二、Servlet + DAO 实现一个登录界面"></a>二、Servlet + DAO 实现一个登录界面</h3><p>首先你要知道Dao是做什么的</p><blockquote><p>Data Access Object</p><p>数据访问对象：专门和数据库进行增删改查操作的</p><p>JDBC是DAO的实现技术</p></blockquote><pre class="line-numbers language-flow" data-language="flow"><code class="language-flow">st<span class="token operator">=></span>start<span class="token operator">:</span> MySQL数据库op<span class="token operator">=></span>operation<span class="token operator">:</span> <span class="token constant">DAO</span>（<span class="token constant">JDBC</span>）和数据库交互数据op2<span class="token operator">=></span>operation<span class="token operator">:</span> Servlet从<span class="token constant">HTML</span>页面获取数据e<span class="token operator">=></span>end<span class="token operator">:</span> <span class="token constant">HTML</span>页面st<span class="token operator">-</span><span class="token operator">></span>opop<span class="token operator">-</span><span class="token operator">></span>op2op2<span class="token operator">-</span><span class="token operator">></span>e<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>了解原理后我们实操一下</p><p>在工程中创建dao包，再在包中创建接口（右键-&gt;new-&gt;Java class）,记得选择Interface</p><p><img src="https://s2.loli.net/2022/03/27/MXDVcjaFWEgl4eK.png" alt="image-20220327153110238"></p><p>写上如下内容：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">LoginDao</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">findByUsernameAndPassword</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>你也发现了，这其中并没有如何实现，只是声明了这个方法，所以还需要进行实现，再创建一个<code>impl</code>包，写明实现方法，具体过程和上面一样，我这里只贴出代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginDaoImpl</span> <span class="token keyword">implements</span> <span class="token class-name">LoginDao</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">findByUsernameAndPassword</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">PreparedStatement</span> pstm <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">ResultSet</span> rs <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"select id, name, password from user where name = ? and password = ?"</span><span class="token punctuation">;</span><span class="token comment">//从user表中查询</span>        <span class="token keyword">try</span><span class="token punctuation">&#123;</span>            <span class="token class-name">ComboPooledDataSource</span> dataSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ComboPooledDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            conn <span class="token operator">=</span> dataSource<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            pstm <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>            pstm<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>            pstm<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//rs就是执行查询后返回的值</span>            rs <span class="token operator">=</span> pstm<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            rs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            pstm<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>因为要连接MySQL，并且需要用到连接池，所以需要引入驱动，请自行搜索<code>c3p0连接池</code>和<code>JDBC</code>下载,还有c3p0-config.xml文件（如果不会用可以直接查看c3p0连接池用法，很简单）</p><p><img src="https://s2.loli.net/2022/03/27/yLlUGYtEKSoHqMw.png" alt="image-20220327154911012"></p><p>执行项目，在登录页面登录你数据库中已存在的用户，我这里有一个用户</p><table><thead><tr><th align="center">username</th><th align="center">password</th></tr></thead><tbody><tr><td align="center">Tifa</td><td align="center">123456</td></tr></tbody></table><p>登录后你会在控制台看到</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">欢迎，Tifa<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>恭喜你，你已经完成了今天的学习</p><hr><h3 id="三、完成登录信息提示功能"><a href="#三、完成登录信息提示功能" class="headerlink" title="三、完成登录信息提示功能"></a>三、完成登录信息提示功能</h3><p>我们刚刚是在控制台打印了成功的信息，可是用户并不知道是否成功，如果我们想让客户端提示“登录成功”或者“登录失败”，要怎么做呢</p><p><em>需要引入JSP</em></p><p>html页面是静态的，它无法完成交互的任务。</p><h4 id="引入JSP"><a href="#引入JSP" class="headerlink" title="引入JSP"></a>引入JSP</h4><p>下面我们简单介绍一下JSP</p><blockquote><p>JSP本质上就是Servlet</p><p>jsp第一次访问时，会被服务器中的jsp引擎编译成一个Servlet，放在Tomcat的work目录下。</p></blockquote><img src="https://s2.loli.net/2022/03/27/bnOZjG7kqWmQfcr.png" alt="image-20220327165532552" style="zoom:80%;" /><p>Servlet和html的配合十分麻烦，我们仅仅实现一个登录就用了这么多步骤，所以，Sun公司开发出了jsp，&#x3D;&#x3D;JSP使用起来会容易的多&#x3D;&#x3D;</p><p>实操一下，在web文件夹下右键-&gt;new-&gt;JSP,你就能得到一个jsp页面，在body标签中写点内容，比如：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>这是第一个jsp页面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后直接运行Tomcat，你会在<a href="http://localhost:8080/firstJsp.jsp">http://localhost:8080/firstJsp.jsp</a>中看到下图内容，路径是你jsp页面的文件名</p><p><img src="https://s2.loli.net/2022/03/27/3DLqcFU8zTXhgY5.png" alt="image-20220327171036333"></p><h4 id="传递数据-实现提示功能"><a href="#传递数据-实现提示功能" class="headerlink" title="传递数据-实现提示功能"></a>传递数据-实现提示功能</h4><p>servlet与jsp直接通过什么方法传递数据？</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"key"</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//key值是唯一的，不可重复</span><span class="token class-name">Object</span> value <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"key"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//通过key取出值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>我们只需要修改LoginServlet.java中判断是否登录成功的业务逻辑</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"message"</span><span class="token punctuation">,</span><span class="token string">"登录成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"message"</span><span class="token punctuation">,</span> <span class="token string">"用户名或密码错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在HTML中插入java代码，使用如下格式即可</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">%</span> your java code <span class="token operator">%</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>所以我们在JSP中插入如下代码，来向页面传输数据</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;%    String message = (String)request.getAttribute("message");%>&lt;%=message%>%这里是你的表单%<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过<code>getAttribute</code>方法获得参数再打印出来</p><p>这个时候你已经完成了页面的内容，但是此时程序还在LoginServlet.java中，你需要将它的逻辑跳转回来，在LoginServlet.java中添加</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">request<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">"firstJsp.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//在doPost方法的最后一步添加</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>点击运行，登录之后你会看到</p><p><img src="https://s2.loli.net/2022/03/27/dxysVBFuORCnQ6q.png" alt="image-20220327174147498"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>学会了Servlet如何传值，如何使用DAO与数据库进行交互，DAO相当于简化了我们查询的流程，所以现在你知道DAO层是在做什么了吧。</li><li>学会了怎么在Servlet和jsp中交互，现在你已经会写可以交互的页面了！</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Servlet </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
