<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>视频监控系统的组成</title>
      <link href="/2023/07/15/dailyLife/%E8%A7%86%E9%A2%91%E7%9B%91%E6%8E%A7%E6%8A%80%E6%9C%AF/"/>
      <url>/2023/07/15/dailyLife/%E8%A7%86%E9%A2%91%E7%9B%91%E6%8E%A7%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="视频监控系统的组成"><a href="#视频监控系统的组成" class="headerlink" title="视频监控系统的组成"></a>视频监控系统的组成</h1><p>五个部分</p><ul><li><p>音视频采集系统</p><ul><li>2.1 2.2 成像及编解码技术</li></ul></li><li><p>传输系统</p></li><li><p>控制系统</p></li><li><p>存储系统</p><ul><li>阵列、NAS</li></ul></li><li><p>显示系统</p></li></ul><h1 id="视频监控基础"><a href="#视频监控基础" class="headerlink" title="视频监控基础"></a>视频监控基础</h1><h2 id="学习目的"><a href="#学习目的" class="headerlink" title="学习目的"></a>学习目的</h2><ol><li>掌握成像基础知识</li><li>了解视频监控系统中的编解码、传输、存储、管理常见的协议及技术</li><li>了解视频监控系统中智能技术的应用</li></ol><h2 id="第一节-成像技术基础"><a href="#第一节-成像技术基础" class="headerlink" title="第一节 成像技术基础"></a>第一节 成像技术基础</h2><h3 id="镜头选择"><a href="#镜头选择" class="headerlink" title="镜头选择"></a>镜头选择</h3><p>摄像头就是一个摄像机，摄像机重要的是镜头，如何选择？</p><ol><li>先看摄像机和镜头匹配</li></ol><table><thead><tr><th align="center">类型\匹配</th><th align="center">CS摄像机</th><th align="center">C型摄像机</th><th align="center">至传感器距离</th></tr></thead><tbody><tr><td align="center">CS镜头</td><td align="center">√</td><td align="center">×</td><td align="center">12.55mm</td></tr><tr><td align="center">C镜头</td><td align="center">√<br />需加CS-C接口适配器</td><td align="center">√</td><td align="center">17.5mm</td></tr></tbody></table><p>镜头</p><p><img src="https://s2.loli.net/2023/03/06/oxhRT7jPNeMD4Ws.png" alt="image-20230306202654852"></p><ol start="2"><li>再看sensor（传感器）</li></ol><p>选择时的原则</p><p>&#x3D;&#x3D;镜头尺寸&gt;&#x3D;sensor尺寸&#x3D;&#x3D;</p><p>下图中圆型是镜头，方形是sensor</p><img src="https://s2.loli.net/2023/03/06/FzYrP6domMbSEtU.png" alt="image-20230306203153335" style="zoom:50%;" /><ol start="3"><li>焦距</li></ol><img src="https://s2.loli.net/2023/03/06/YPiTjwSlvQ1ngVL.png" alt="image-20230306204019958" style="zoom:50%;" /><blockquote><p>焦距越小，视野越广，是广角镜头；焦距越大，视野越小，是远摄镜头</p></blockquote><p>镜头选择公式：</p><blockquote><p>F &#x3D; W D &#x2F; M</p><p>F：镜头焦距</p><p>W：CCD靶面宽度</p><p>D：被摄物与镜头的距离</p><p>M：需要拍摄的宽度</p><p>附上CCD靶面规格尺寸</p><p><img src="https://s2.loli.net/2023/03/06/RCXzKwOptuUnNx9.png" alt="image-20230306205203793"></p></blockquote><ol start="4"><li><p>夜视能力</p><p>日间镜头在夜间会出现失焦，需要重新调焦</p><p>采用特别设计的光学镜片令纵向色差减到最低，让24小时监控工作带来&#x3D;&#x3D;不需要二次调焦&#x3D;&#x3D;的方便</p><p>请采用夜间镜头</p></li><li><p>景深</p><p>就是摄像机能够清晰成像的范围</p><p>请保证&#x3D;&#x3D;监视区域在景深范围内&#x3D;&#x3D;</p><p>一般来说，焦距越小景深值越大，反之景深越小。</p><img src="https://s2.loli.net/2023/03/06/FM3mjGQrUOY64Po.png" alt="image-20230306205748538" style="zoom:67%;" /></li><li><p>照度</p><p>指物体被照亮的程度，光照强度。单位勒克斯（Lux，lx）</p><blockquote><h3 id="caution"><a href="#caution" class="headerlink" title="caution"></a>caution</h3><p>注意与流明区分，流明是亮度，指反射到人眼所能看到的亮度。</p></blockquote></li><li><p>对比度</p><p>对比度是一幅图像中明暗区域最亮和最暗的层级差异，差异越大对比度越大。</p><blockquote><p>提高对比度可以看到更多细节。但不是越高越好，过高可能反而会丢失细节。</p><p>并没有客观的确定最佳对比度的方法，只能通过&#x3D;&#x3D;人眼来分别&#x3D;&#x3D;</p></blockquote></li><li><p>饱和度</p><p>色彩的鲜艳程度，有颜色的部分对比灰色的部分</p><p>黑白照片饱和度最低，越鲜艳越高。只能通过&#x3D;&#x3D;人眼来分别&#x3D;&#x3D;</p></li><li><p>锐度</p><p>图像边缘的对比度。高锐度图像由于图像边缘对比度高，棱角分明，看起更清晰。但过高锐度会导致失真。只能通过&#x3D;&#x3D;人眼来分别&#x3D;&#x3D;</p></li><li><p>白平衡</p><p>白色的平衡。</p><p>摄像机针对不同色温，通过内部色彩电路使拍摄出的影像抵消偏色。更接近人眼视觉习惯。差的白平衡会导致&#x3D;&#x3D;色彩偏红、偏蓝&#x3D;&#x3D;</p></li><li><p>快门、光圈</p><p>快门-&gt;摄像机感光时间。快门越长，感光时间越长。</p><p>光圈-&gt;控制镜头进入机身内部感光面的光量。光圈大小我们用F值表示。F值越大，光圈越大，进光量越多</p></li><li><p>背光补偿</p><p>也称逆光补偿。以中间区域的亮度为基础，把画面分成几个部分，每个部分分别曝光。可以有效解决逆光环境拍摄主体，主体黑暗（看不清）的缺陷。</p><p>假如人物不在中心区域，依然会存在缺陷。为了解决这个问题，出现了宽动态。</p></li><li><p>宽动态</p><p>对明暗部分分别曝光</p></li><li><p>扫描、场、帧</p><p><img src="https://s2.loli.net/2023/03/06/8WgAhrDFsnl2byo.png" alt="image-20230306213602492"></p></li></ol><p>逐行扫描，一帧一场</p><p>隔行扫描中，一帧两场，合并基数场和偶数场。</p><ol start="15"><li><p>图像分辨率</p><p>画面的解析度，即图像由多少像素组成</p><p>分辨率越大越清晰。</p><ul><li><p>视频制式</p><ul><li>PAL</li><li>NTSC</li></ul><blockquote><h3 id="caution-1"><a href="#caution-1" class="headerlink" title="caution"></a>caution</h3><p>摄像机的制式必须与编解码器的制式相同。</p><p>如果制式不同，会出现图像颠倒，图像被分割等现象。</p></blockquote></li></ul></li><li><p>码率 </p><p>单位时间内，数据传输的数据位数，一般用kbps。</p><p>有两种码率模式</p><ul><li><p>CBR 恒定比率</p><p>比率在单位时间内（通常1s）不发生变化，&#x3D;&#x3D;适合流式传输&#x3D;&#x3D;</p><blockquote><p>宇视科技的CBR误差大概在1.85-2.16mbps内波动</p></blockquote></li><li><p>VBR 可变比率</p><p>图像复杂时，提高视频的比率以提高图像质量。&#x3D;&#x3D;适合本地存储&#x3D;&#x3D;</p></li></ul></li></ol><h2 id="第二节-视频编解码技术"><a href="#第二节-视频编解码技术" class="headerlink" title="第二节 视频编解码技术"></a>第二节 视频编解码技术</h2><p>主要是两个组织发布的技术：国际电信联盟ITU、ISO国际标准化组织<img src="/../AppData/Roaming/Typora/typora-user-images/image-20230306221758308.png" alt="image-20230306221758308"></p><h3 id="视频、图像编解码"><a href="#视频、图像编解码" class="headerlink" title="视频、图像编解码"></a>视频、图像编解码</h3><h4 id="H-264"><a href="#H-264" class="headerlink" title="H.264"></a>H.264</h4><p>联合视频组（JVT）开发，特点：</p><ul><li>低码率</li><li>高质量–DVD质量</li><li>容错能力强–解决丢包</li><li>网络适应性强–提供网络抽象层</li></ul><h4 id="MPEG"><a href="#MPEG" class="headerlink" title="MPEG"></a>MPEG</h4><p>针对低带宽设计，使得低码率传输成为可能。</p><h4 id="JPEG"><a href="#JPEG" class="headerlink" title="JPEG"></a>JPEG</h4><p>第一个国际图像压缩标准。有损压缩，图像不至于失真的同时，体积小。</p><h3 id="音频编解码"><a href="#音频编解码" class="headerlink" title="音频编解码"></a>音频编解码</h3><img src="https://s2.loli.net/2023/03/06/8zmqDS342bnrAeG.png" alt="image-20230306224312530" style="zoom:50%;" /><p>一般在视频监控中使用G.711和AAC，质量好。</p><h2 id="第三节-存储技术"><a href="#第三节-存储技术" class="headerlink" title="第三节 存储技术"></a>第三节 存储技术</h2><h3 id="IP-SAN存储架构"><a href="#IP-SAN存储架构" class="headerlink" title="IP SAN存储架构"></a>IP SAN存储架构</h3><p>IP SAN（IP Storage Area Network，存储局域网）</p><ul><li>将存储系统、服务器和客户端都通过网络相互连接</li><li>以网络为中心</li><li>基于以太网搭建存储架构</li></ul><p>优点：</p><ul><li>设备整合</li><li>性能优越</li><li>数据集中，易管理</li><li>高扩展性和高可用性</li><li>适用于存储量大的块级应用</li></ul><h3 id="NAS存储架构"><a href="#NAS存储架构" class="headerlink" title="NAS存储架构"></a>NAS存储架构</h3><p>NAS（Network Attached Storage，网络附属存储）</p><p>优点：</p><ul><li>不占用应用服务器资源</li><li>广泛支持操作系统及应用</li><li>扩展较容易</li><li>即插即用，安装简单方便</li></ul><p>缺点：</p><ul><li>相比SAN架构，存取速度慢</li><li>不适合存储量大的块级应用</li><li>数据备份及恢复占用网络带宽</li></ul><p>主要区别：</p><ol><li>NAS与公司内部业务系统共用一套网络，占用带宽</li><li>提供文件访问的支持，必须使用文件系统，相较于IP SAN块级存储在性能上较差</li><li>稳定性差。NAS的稳定性依赖文件系统的稳定。</li></ol><h3 id="iSCSI技术"><a href="#iSCSI技术" class="headerlink" title="iSCSI技术"></a>iSCSI技术</h3><p><code>iSCSl</code>:Internet小型计算机系统接口（<code>Internet Small Computer System Interface）</code><br>iSCSl是一种基于TCP&#x2F;IP的协议，用来建立和管理P存储设备、主机和客户机等之间的互相连接，并创建存储区域网络（SAN）</p><p>技术优势：</p><ul><li>硬件成本低</li><li>操作简单，维护方便</li><li>扩充性强</li><li>带宽和性能不断提升</li></ul><h3 id="SAS接口"><a href="#SAS接口" class="headerlink" title="SAS接口"></a>SAS接口</h3><p>SAS是新一代的SCSI技术，和现在流行的SerialATA（SATA）硬盘相同，都是采用串行技术以获得更高的传输速度，并通过缩短连结线改善内部空间</p><p>SAS是并行SCSI接口之后开发出的全新接口，改善存储系统的效能、可用性和扩充性，提供与串行ATA（SerialATA，缩写为SATA）硬盘的兼容性。</p><p>技术优势</p><ul><li>降低了磁盘阵列的成本</li><li>串行接口让传输性能提高</li><li>更好的扩展性与兼容性</li><li>安装简单</li></ul><h3 id="RAID"><a href="#RAID" class="headerlink" title="RAID"></a>RAID</h3><p>RAID（RedundantArray of Independent Disks，独立冗余磁盘阵列）：将多个独立的物理硬盘按照不同的方式组合起来，形成一个虚拟的硬盘</p><p>组成RAID阵列的不同方式称为RAID级别，不同的RAID级别：</p><ul><li>不同的存储性能</li><li>不同的数据可靠性</li><li>不同的存储成本</li></ul><table><thead><tr><th align="center">阵列</th><th>特点</th></tr></thead><tbody><tr><td align="center">RAID 0</td><td>数据条带化，无校验</td></tr><tr><td align="center">RAID 1</td><td>数据镜像，无校验</td></tr><tr><td align="center">RAID 5</td><td>数据条带化，校验信息分布式存放</td></tr><tr><td align="center">RAID 6</td><td>数据条带化，校验信息分布式存放，允许损坏2块硬盘</td></tr><tr><td align="center">RAID 10</td><td>RAIDO和RAID1的结合，同时提供数据条带化和镜像</td></tr><tr><td align="center">RAID 50</td><td>先做RAID5，后做RAID0，能有效提高RAID5的性能</td></tr></tbody></table><ol><li><p>RAID 0</p><img src="https://s2.loli.net/2023/03/07/drm3l4X6zKPLQJV.png" alt="image-20230307100700878" style="zoom:67%;" /><p>数据以条带形式均匀分布，&#x3D;&#x3D;数据不安全&#x3D;&#x3D;一旦磁盘损坏，全部阵列都不可读取。</p><p>但&#x3D;&#x3D;读写速度快&#x3D;&#x3D;</p></li><li><p>RAID 1 镜像</p><p>同时读写到主硬盘和镜像</p><img src="https://s2.loli.net/2023/03/07/Wnj8LQUIkdYlGsB.png" alt="image-20230307101623425" style="zoom:67%;" /><p>读性能可以并发，写性能无优势。&#x3D;&#x3D;成本高&#x3D;&#x3D;，只有一半的有效空间存储</p></li><li><p>RAID 5 奇偶校验</p><img src="https://s2.loli.net/2023/03/07/h35b2yZGnRitaA1.png" alt="image-20230307110800373" style="zoom: 50%;" /><p>读性能好，可以并发。&#x3D;&#x3D;写性能差&#x3D;&#x3D;，需要进行奇偶校验运算。</p><p>&#x3D;&#x3D;N+1级数据保护&#x3D;&#x3D;，或可通过添加热备盘的方式升级为&#x3D;&#x3D;N+2&#x3D;&#x3D;，热备盘有两种：</p><ol><li>专用热备盘 Dedicated Spare -&gt; 只为某一个阵列服务。</li><li>全局热备盘 Global Spare -&gt; 同时为多个阵列服务</li></ol><blockquote><h5 id="N-1是允许一个磁盘出现问题，N-2是两个。提升的原理是什么？"><a href="#N-1是允许一个磁盘出现问题，N-2是两个。提升的原理是什么？" class="headerlink" title="N+1是允许一个磁盘出现问题，N+2是两个。提升的原理是什么？"></a>N+1是允许一个磁盘出现问题，N+2是两个。提升的原理是什么？</h5><ul><li>当RAID 5 阵列出现某个磁盘损坏，我们必须立即对数据进行回复，如果在恢复前，又有一个磁盘损坏，数据就丢失了。</li><li>当拥有全局热备的RAID 5 阵列出现某个磁盘损坏，热备盘会首先顶替坏掉的磁盘，根据奇偶校验，做一次数据恢复。恢复完成后，就是一个完整的RAID 5 阵列，此时允许再损坏一个磁盘。</li></ul></blockquote></li><li><p>RAID 6 </p><p>带有两个独立分布式校验方案</p><p>在RAID 5基础上加一位校验方案</p><ul><li>最少需要4块硬盘（两块做校验）</li><li>允许&#x3D;&#x3D;同时&#x3D;&#x3D;坏两块</li><li>&#x3D;&#x3D;写性能更差&#x3D;&#x3D;</li></ul></li><li><p>RAID 10</p><p>RAID 1 + RAID 0</p><p>利用RAID 1做读写的同时，用RAID 0做镜像备份。</p><img src="https://s2.loli.net/2023/03/07/tYlp1FUfCaIcXdk.png" alt="image-20230307130815041" style="zoom:67%;" /></li><li><p>RAID 50</p><p>由两组RAID 5组成（每组最少3个），两组组成RAID 0。&#x3D;&#x3D;最少需要6块硬盘&#x3D;&#x3D;</p><img src="https://s2.loli.net/2023/03/07/ecUo5vFStnBJX3M.png" alt="image-20230307131111101" style="zoom: 50%;" /></li></ol><h4 id="JBOD"><a href="#JBOD" class="headerlink" title="JBOD"></a>JBOD</h4><p>Just a Bunch Of Disks，磁盘簇。又称Span</p><p>在逻辑上把几个物理磁盘一个接一个串联到一起，从而提供一个大的逻辑磁盘。JBOD上的数据简单的从第一个磁盘开始存储，当第一个碳盘的存储空间用完后，再依次从后面的磁盘开始存储数据。</p><table><thead><tr><th></th><th align="center">可靠性</th><th align="center">控制器</th><th align="center">智能功能</th><th align="center">成本</th></tr></thead><tbody><tr><td>JBOD</td><td align="center">较低</td><td align="center">无</td><td align="center">无</td><td align="center">低</td></tr><tr><td>RAID</td><td align="center">较高</td><td align="center">有</td><td align="center">有</td><td align="center">高</td></tr></tbody></table><h4 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h4><ol><li><p>组成RAID 5至少要几块硬盘？</p><p>3块。两块存储，一块奇偶校验。</p></li><li><p>12块2T磁盘组成RAID 5阵列，可用磁盘几块？</p><p>11块可用。正常RAID 5 是N+1的数据保护，一个用来做奇偶校验。</p></li><li><p>5块2T硬盘组成RAID6阵列，可用磁盘几块？</p><p>3块。两块做奇偶校验。</p></li></ol><h3 id="流媒体存储所需存储容量计算"><a href="#流媒体存储所需存储容量计算" class="headerlink" title="流媒体存储所需存储容量计算"></a>流媒体存储所需存储容量计算</h3><p>全网视频所需存储容量为各单路视频所需存储容量之和</p><ol><li>单路所需容量计算公式</li></ol><p>​容量（GB）&#x3D; 码率（Mbps）* 3600 * 存储计划时长（小时）* CBR系数 &#x2F; (8*1024)</p><p>​CBR系数为 1.08</p><p>​8*1024: 8是转换bit到MB，1024是换算MB到GB</p><ul><li><p>例子；</p></li><li><p>一路视频的码率为2Mbps，该视频每天存储时间为8:00-12:00，13:30-18:30，录像保留期为15天，求所需存储容量？</p><p>录像保留期内录像总时长：<code>9*15=135</code>小时</p><p>存储容量：<code>2*3600*135*1.08/(8*1024)=128.15</code>GB</p></li></ul><ol start="2"><li><p>存储设备有效容量计算公式</p><p>存储容量(GB) &#x3D; 有效磁盘数 * 单磁盘有效容量(GB)</p><ul><li><p>有效磁盘数</p><table><thead><tr><th>等级</th><th>有效磁盘</th></tr></thead><tbody><tr><td>JBOD</td><td>物理磁盘数（不计热备盘）</td></tr><tr><td>RAID 0</td><td>物理磁盘数（不计热备盘）</td></tr><tr><td>RAID 1</td><td>物理磁盘数 * 0.5（不计热备盘）</td></tr><tr><td>RAID 5</td><td>物理磁盘数 - 1（不计热备盘）</td></tr></tbody></table></li><li><p>单磁盘有效容量</p><table><thead><tr><th>磁盘类型</th><th>有效容量（GB）</th></tr></thead><tbody><tr><td>1TB SATA</td><td>931.5</td></tr><tr><td>2TB SATA</td><td>1863</td></tr><tr><td>3TB SATA</td><td>2794.5</td></tr></tbody></table></li></ul></li></ol><h2 id="第四节-常见协议"><a href="#第四节-常见协议" class="headerlink" title="第四节 常见协议"></a>第四节 常见协议</h2><h3 id="管理控制协议-SIP"><a href="#管理控制协议-SIP" class="headerlink" title="管理控制协议 SIP"></a>管理控制协议 SIP</h3><p>SIP（Session lnitiation Protocol，会话初始协议）是应用层的会话控制协议，用于创建、修改和释放一个或多个参与者参加的会话</p><p>SIP协议采用基于文本格式的客户&#x2F;服务器模式</p><p>SIP的基本功能包含</p><ul><li>用户定位</li><li>用户能力协商</li><li>用户可用性确定</li><li>会话建立</li><li>会话管理</li></ul><blockquote><h3 id="caution-2"><a href="#caution-2" class="headerlink" title="caution"></a>caution</h3><p>SDP是会话描述协议，用于为SIP、RTSP、HTTP等协议描述会话信息</p></blockquote><p>SIP消息</p><ul><li>分为Request消息和Response消息</li><li>Request消息通过Request-Line中method区分</li><li>Response消息通过Status-Line中的Status Code区分</li></ul><p>常用的SIP请求消息</p><ul><li>INVITE：表示主叫用户发起会话请求，邀请其他用户加入一个会话。<br>也可以用在呼叫建立后用于更新会话</li><li>ACK：客户端向服务器端证实它已经收到了对INVITE请求的最终响应</li><li>BYE：表示终止一个已经建立的呼叫</li><li>CANCEL：表示在收到对请求的最终响应之前取消该请求，对于已完成的请求则无影响</li><li>REGISTER：表示客户端向SIP服务器端注册列在To字段中的地址信息</li><li>OPTIONS：表示查询被叫的相关信息和功能</li></ul><p>常用SIP响应消息：</p><ul><li>100试呼叫（Trying）</li><li>180振铃（Ringing）</li><li>200成功响应（OK）</li><li>400错误请求（Bad Request）</li><li>401未授权（Unauthorized）</li><li>403禁止（Forbidden）</li><li>404用户不存在（NotFound）</li><li>408请求超时（Request Timeout）</li></ul><h3 id="管理控制协议-SNMP"><a href="#管理控制协议-SNMP" class="headerlink" title="管理控制协议 SNMP"></a>管理控制协议 SNMP</h3><p>SNMP（Simple Network Management Protocol，简单网络管理协议）是对网络进行管理的一个框架，它提供一组基本的操作来监视和维护网络</p><p>SNMP可以实现自动化管理并可以屏蔽不同设备的物理差异，实现对不同厂商产品的自动化管理.<br>SNMP包含SNMPV1、SNMPV2c和SNMPV3三个版本</p><ul><li>SNMP网络元素分为NMS和Agent两种<ul><li>NMS（Network Management Station，网络管理站）</li><li>Agent是驻留在设备上的一个进程，负责接收、处理来自NMS的请求报文</li><li><img src="/../AppData/Roaming/Typora/typora-user-images/image-20230307142501372.png" alt="image-20230307142501372"></li><li>MIB（Management Information Base，管理信息库）指代理进程包含的、能够被管理进程进行查询和设置的所有信息的集合</li><li>MIB是以树状结构进行存储的，像这样<img src="/../AppData/Roaming/Typora/typora-user-images/image-20230307142816319.png" alt="image-20230307142816319"></li></ul></li></ul><h3 id="传输协议"><a href="#传输协议" class="headerlink" title="传输协议"></a>传输协议</h3><h4 id="TS-amp-PS"><a href="#TS-amp-PS" class="headerlink" title="TS&amp;PS"></a>TS&amp;PS</h4><p>TS流（Transport Stream）：传输流，将具有共同时间基准或独立时间基准的一个或多个PES组合（复合）而成的单一数据流（用于数据传输）。</p><p>PS流（Program Stream）：节目流，将具有共同时间基准的一个或多个PES组合（复合）而成）单一数据流（用于播放或编辑系</p><p>TS流和PS流的区别：&#x3D;&#x3D;TS流的包结构是长度是固定的；PS流的包结构是可变长度的。&#x3D;&#x3D;这导致了TS流的抵抗传输误码的能力强于PS流（在信道环境较为恶劣，传输误码较高时，一般采用TS码流；而在信道环境较好，传输误码较低时，一般采用PS码流。）</p><h4 id="RTP"><a href="#RTP" class="headerlink" title="RTP"></a>RTP</h4><p>RTP（Real-time Transport Protocol）：实时传输协议，详细说明了在互联网上传递音频和视频的标准数据包格式，是一个传输层的、基于UDP的协议</p><h3 id="存储回放协议"><a href="#存储回放协议" class="headerlink" title="存储回放协议"></a>存储回放协议</h3><h4 id="iSCSI"><a href="#iSCSI" class="headerlink" title="iSCSI"></a>iSCSI</h4><p>之前介绍了，这里不再赘述</p><p>这是iSCSI协议栈</p><img src="https://s2.loli.net/2023/03/07/JeN2ushZ8qjQ4vg.png" alt="image-20230307144202358" style="zoom:50%;" /><h4 id="RTSP协议"><a href="#RTSP协议" class="headerlink" title="RTSP协议"></a>RTSP协议</h4><p>RISP（Real Time Streaming Protocol）实时流传输协议，是ICP&#x2F;IP协议体系中的一个应用层协议。该协议定义了一对多应用程序如何有效地通过IP网络传送多媒体数据。RTSP在体系结构上位于RTP和RTCP之上，它使用TCP或UDP完成数据传输。</p><img src="https://s2.loli.net/2023/03/07/zt2VXTUW5JHeRsa.png" alt="image-20230307144604588" style="zoom:50%;" /><p>客户端和数据管理服务器之间交互的RTSP命令包括Setup、Play、Options、Teardown、Pause。</p><img src="https://s2.loli.net/2023/03/07/2RFe8naODiQ4zZc.png" alt="image-20230307145250025" style="zoom:50%;" /><h3 id="互联协议"><a href="#互联协议" class="headerlink" title="互联协议"></a>互联协议</h3><h4 id="ONVIF"><a href="#ONVIF" class="headerlink" title="ONVIF"></a>ONVIF</h4><p>ONVIF（Open Network Video lnterface Forum），开放型网络视频接口论坛，述了网络视频的模型、接口、数据类型以及数据交互的模式，目标是实现一个网络视频框架协议，使不同厂商所生产的网络视频产品（包括摄录前端、录像设备等）完全互通。</p><h4 id="国标"><a href="#国标" class="headerlink" title="国标"></a>国标</h4><p>GB&#x2F;T28181《安全防范视频监控联网系统信息传输、交换、控制技术要求》规定了安全防范视频监控联网系统中信息传输、交换、控制的互联结构，通信协议结构，传输、交换、控制的基本要求和安全性要求，以及控制、传输流程和协议接口等技术要求。<br>GB&#x2F;T 28181标准对于<strong>视频监控平台互联</strong>、视频监控平台与设备互联提供了统一的信令接口、视音频编解码接口，所有系统之间通过统一公开的标准信令互访，简化了不同厂商之间的互联对接工作。</p><h2 id="第五节-技术应用"><a href="#第五节-技术应用" class="headerlink" title="第五节 技术应用"></a>第五节 技术应用</h2><ul><li>前端智能 -&gt; 智能摄像头，自主完成操作，后端只接收数据</li><li>后端智能 -&gt; 摄像头只负责视频采集，后端自行处理</li></ul><p>常用方式仍然是前后端互补。</p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 视频监控 </tag>
            
            <tag> 硬盘阵列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正斜杠(&quot; / &quot;)和反斜杠(&quot; &#92; &quot;)的区别</title>
      <link href="/2022/05/02/forwardAndBackwordSlash/"/>
      <url>/2022/05/02/forwardAndBackwordSlash/</url>
      
        <content type="html"><![CDATA[<h1 id="正斜杠-“-x2F-“-和反斜杠-“-“-的区别"><a href="#正斜杠-“-x2F-“-和反斜杠-“-“-的区别" class="headerlink" title="正斜杠(“ &#x2F; “)和反斜杠(“ \ “)的区别"></a>正斜杠(“ &#x2F; “)和反斜杠(“ \ “)的区别</h1><blockquote><p>反斜杠“\”是电脑出现了之后为了表示程序设计里的特殊含义才发明的专用标点。所以除了程序设计领域外，任何地方都不应该使用反斜杠。</p></blockquote><p><img src="https://s2.loli.net/2022/03/28/AnhzNDmES4yCteo.png" alt="slash"></p><p>英语：</p><blockquote><p><code>/ </code>英文是forward slash, <code>\</code>是backward slash<br>        形象些比喻的话，<code>/</code>是一个人站立着向前倾倒, 而<code>\</code>是一个人站立着向后倾倒。</p></blockquote><p>在系统中的区别：</p><blockquote><p>在绝大多数地方，用的都是&#x2F;（slash），包括Mac&#x2F;Linux，也包括URL。&#x3D;&#x3D;你唯一需要记住的是，Microsoft这个怪鸡在自己的操作系统里面偏要用\（backslash），使得自己与众不同。&#x3D;&#x3D;</p></blockquote><p>在Unix系统中，&#x2F;表示目录；\表示跳脱字符将特殊字符变成一般字符<br>Windows由于使用斜杠&#x2F;作为DOS命令提示符的参数标志了，为了不混淆，所以采用反斜杠\作为路径分隔符。所以目前windows系统上的文件浏览器都是用反斜杠\作为路径分隔符。<br>随着发展，DOS系统已经被淘汰了，命令提示符也用得很少，斜杠和反斜杠在大多数情况下可以互换，没有影响。现在在cmd中，已经不区分正斜杠和反斜杠了！</p><p>作为目录分割符</p><ul><li><p>Unix中只用斜杠(“ &#x2F; “)</p></li><li><p>Linux中目前正反斜杠后支持</p></li></ul><p>作为运算符号</p><ul><li><p>&#x2F; 表示除法（%是取余，还有取模的）</p></li><li><p>\表示转意。比如 \n 是换行</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机知识 </tag>
            
            <tag> 趣闻 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TypeScript_如何遍历Object</title>
      <link href="/2022/05/02/ts%E9%81%8D%E5%8E%86%E5%AF%B9%E8%B1%A1/"/>
      <url>/2022/05/02/ts%E9%81%8D%E5%8E%86%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="如何遍历Object"><a href="#如何遍历Object" class="headerlink" title="如何遍历Object"></a>如何遍历Object</h1><p>不要使用 for in，<a href="https://stackoverflow.com/questions/65300784/declare-key-type-of-for-in-loop-in-typescript">参考这里</a></p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> val<span class="token punctuation">]</span> <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>当然，const是常量，如果你还需要在循环中对他进行改变，可以使用var变量</p><p>这个<code>Object.entries(obj))</code>是关键，它可以把obj（一个不可迭代的对象）转成一个可以迭代的对象</p>]]></content>
      
      
      <categories>
          
          <category> 编程文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TypeScript </tag>
            
            <tag> 编程技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Youtube_SpringBoot+Angular实战</title>
      <link href="/2022/04/26/%5BYoutube%5DSpringBoot+Angular%E5%AE%9E%E6%88%98/"/>
      <url>/2022/04/26/%5BYoutube%5DSpringBoot+Angular%E5%AE%9E%E6%88%98/</url>
      
        <content type="html"><![CDATA[<h1 id="使用Springboot和angular开发web项目"><a href="#使用Springboot和angular开发web项目" class="headerlink" title="使用Springboot和angular开发web项目"></a>使用Springboot和angular开发web项目</h1><h2 id="这个教程是面对谁的"><a href="#这个教程是面对谁的" class="headerlink" title="这个教程是面对谁的"></a>这个教程是面对谁的</h2><p>&#x3D;&#x3D;初学者&#x3D;&#x3D;，但前提是你熟悉各种java，nodejs，angular环境的安装，初步熟悉Java代码，明白JPA、JDBC等数据库交互的大概原理和使用方法</p><h1 id="后端部分"><a href="#后端部分" class="headerlink" title="后端部分"></a>后端部分</h1><h2 id="springboot项目创建"><a href="#springboot项目创建" class="headerlink" title="springboot项目创建"></a>springboot项目创建</h2><p>准备spring的依赖和项目POM参数</p><p>在<a href="https://start.spring.io/">spring快速开始界面</a>，选择你的参数</p><p>可以点击explore查看具体的pom文件参数，也可以点击generate直接下载工程文件</p><h2 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h2><p>创建model，与数据库里的数据产生映射</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Entity</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Employee</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">&#123;</span><span class="token comment">//    @Id make it to be the primary key</span>    <span class="token annotation punctuation">@Id</span>    <span class="token annotation punctuation">@GeneratedValue</span><span class="token punctuation">(</span>strategy <span class="token operator">=</span> <span class="token class-name">GenerationType</span><span class="token punctuation">.</span><span class="token constant">AUTO</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>nullable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> updatable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> email<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> jobTitle<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> phone<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> imageUrl<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>nullable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> updatable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> employeeCode<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>有几个注解你要认识</p><ul><li>@Entity<br><code>@Entity</code> make sure that this class is mapped to any database that we have configured on the classpath</li><li>@Id<br>告诉springboot这是Id</li><li>@GeneratedValue(strategy &#x3D; GenerationType.AUTO)<br>告诉spring用何种方式生成这些值</li><li>@Column(nullable &#x3D; false, updatable &#x3D; false)<br>这是告诉Spring注解的这一行在数据库中不能为空，一旦赋值也不能被更新</li></ul><p>接下来配置一些数据库选项</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment">#MySQL Configuration</span><span class="token key attr-name">spring.datasource.url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:mysql://localhost::3306/employeemanager</span><span class="token key attr-name">spring.datasource.username</span><span class="token punctuation">=</span><span class="token value attr-value">root</span><span class="token key attr-name">spring.datasource.password</span><span class="token punctuation">=</span><span class="token value attr-value">123456</span><span class="token key attr-name">spring.jpa.show-sql</span><span class="token punctuation">=</span><span class="token value attr-value">true</span><span class="token key attr-name">spring.jpa.hibernate.ddl-auto</span><span class="token punctuation">=</span><span class="token value attr-value">update</span><span class="token comment">#设置数据库引擎</span><span class="token key attr-name">spring.jpa.properties.hibernate.dialect</span><span class="token punctuation">=</span><span class="token value attr-value">org.hibernate.dialect.MySQL5Dialect</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="会出现的问题"><a href="#会出现的问题" class="headerlink" title="会出现的问题"></a>会出现的问题</h3><p>springboot首先会报<code>CLIENT_PLUGIN_AUTH is required.</code></p><p>原因如下，是版本的问题</p><blockquote><p>The Spring Boot project creator will download the latest MySQL connector (currently Version 8) so if you are running an older version of MySQL then the CLIENT_PLUGIN_AUTH error probably results from this.</p></blockquote><p>你需要在pom.xml文件中修改mysql连接的版本</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.1.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后确保<code>#MySQL Configuration</code>中有</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">spring.datasource.driver-class-name</span><span class="token punctuation">=</span><span class="token value attr-value">com.mysql.jdbc.Driver</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>即可连接成功</p><p>如果你的数据库已经存在，就可以正确连接，并且Hibernat会帮你自动创建表，表名就是你的实体类名称</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Hibernate: create table employee <span class="token punctuation">(</span>id bigint not null, email varchar<span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>, employee_code varchar<span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> not null, image_url varchar<span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>, job_title varchar<span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>, name varchar<span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>, phone varchar<span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>, primary key <span class="token punctuation">(</span>id<span class="token punctuation">))</span> <span class="token assign-left variable">engine</span><span class="token operator">=</span>MyISAMHibernate: create table hibernate_sequence <span class="token punctuation">(</span>next_val bigint<span class="token punctuation">)</span> <span class="token assign-left variable">engine</span><span class="token operator">=</span>MyISAMHibernate: insert into hibernate_sequence values <span class="token punctuation">(</span> <span class="token number">1</span> <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="创建repo仓库"><a href="#创建repo仓库" class="headerlink" title="创建repo仓库"></a>创建repo仓库</h3><p>我们需要一种方式来保存这个表中的内容，Jpa就是我们的mechanism</p><p>建立一个接口，接口拓展Jpa仓库，我们需要告诉Jpa，这个仓库是为哪个类准备的，并且告诉它主键的类型</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">EmployeeRepo</span> <span class="token keyword">extends</span> <span class="token class-name">JpaRepository</span><span class="token generics"><span class="token punctuation">&lt;</span>employee<span class="token punctuation">,</span><span class="token class-name">Long</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="创建Service"><a href="#创建Service" class="headerlink" title="创建Service"></a>创建Service</h3><p>有了接口，我们需要使用服务，这样我们就可以在controller中使用它对仓库进行操作</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Service</span><span class="token annotation punctuation">@Transactional</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EmployeeService</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">EmployeeRepo</span> employeeRepo<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">public</span> <span class="token class-name">EmployeeService</span><span class="token punctuation">(</span><span class="token class-name">EmployeeRepo</span> employeeRepo<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>employeeRepo <span class="token operator">=</span> employeeRepo<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里有几点</p><ol><li>@Service</li></ol><p>这是声明这个类是服务</p><ol start="2"><li>@Autowired</li></ol><p>注入employee对象</p><ol start="3"><li>@Transactional</li></ol><p>使用这个注解的类或者方法表示该类里面的所有方法或者这个方法的事务由spring处理，来保证事务的<a href="https://so.csdn.net/so/search?q=%E5%8E%9F%E5%AD%90%E6%80%A7&spm=1001.2101.3001.7020">原子性</a>，即是方法里面对数据库操作，如果失败则spring负责回滚操作，成功则提交操作。</p><ol start="4"><li>因为我们要在服务中对仓库进行操作，所以也要引入仓库对象employeeRepo</li></ol><p>接下来我们就可以在服务类中写一些查询用户的代码，例如添加用户</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//添加用户</span>    <span class="token keyword">public</span> <span class="token class-name">Employee</span> <span class="token function">addEmp</span><span class="token punctuation">(</span><span class="token class-name">Employee</span> employee<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        employee<span class="token punctuation">.</span><span class="token function">setEmployeeCode</span><span class="token punctuation">(</span><span class="token constant">UUID</span><span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> employeeRepo<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>employee<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token comment">//查询所有用户</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">></span></span> <span class="token function">findAllEmp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> employeeRepo<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token comment">//更新用户</span>    <span class="token keyword">public</span> <span class="token class-name">Employee</span> <span class="token function">updateEmp</span><span class="token punctuation">(</span><span class="token class-name">Employee</span> employee<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> employeeRepo<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>employee<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们的重点是通过id查询用户和通过Id删除用户，这会涉及两个要点问题，我们先看删除用户</p><ol><li><p>通过Id删除用户</p><p>由于employee Repo中没有定义这个方法，我们需要自己定义，所以需要在repo接口类中去实现</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">deleteEmployeeById</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>这里需要注意的是，此处的方法是spring自动识别的，你需要完整的写出delete、Employee、By等等关键字，这是重要的接口，spring无法识别的话就无法帮你生成查询语句，会报错</strong></p><p>然后在服务中写删除方法</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;删除用户    public void delEmp(Long id)&#123;        employeeRepo.delEmpById(id);    &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>&#x3D;&#x3D;这是我们自定义方法的实现方式&#x3D;&#x3D;</p></li><li><p>通过Id查询用户</p><p>首先这是一个自定义方法，所以步骤和上面的一样，其次，查询用户时可能会出现没有找到id对应用户的情况，如果这时候还是要返回employee对象，明显是有问题的。</p><p>所以我们可以返回一个异常，在repo接口类中将方法修改为</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">></span></span> <span class="token function">findEmployeeById</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>Optional 类是一个可以为null的容器对象。如果值存在则isPresent()方法会返回true，调用get()方法会返回该对象。</p><p>Optional 是个容器：它可以保存类型T的值，或者仅仅保存null。Optional提供很多有用的方法，这样我们就不用显式进行空值检测</p><p>Optional 类的引入很好的解决空指针异常。</p></blockquote><p>然后可以将方法写为</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//通过id查找用户</span>    <span class="token keyword">public</span> <span class="token class-name">Employee</span> <span class="token function">findEmployeeById</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> employeeRepo<span class="token punctuation">.</span><span class="token function">findEmployeeById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">orElseThrow</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">new</span> <span class="token class-name">UserNotFoundException</span><span class="token punctuation">(</span><span class="token string">"user by id "</span> <span class="token operator">+</span> id <span class="token operator">+</span> <span class="token string">" was not found."</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>你可以看到我们新建了一个异常对象，<code>orElseThrow()</code>在前面的方法出现异常时会返回<code>UserNotFoundException</code>定义的信息<code>&quot;user by id &quot; + id + &quot; was not found.&quot;</code>。</p><p>为了使这个异常类可以使用，我们需要将异常类方法写一下，新建一个包exception，写如下类，需要继承<code>RuntimeException</code></p><pre class="line-numbers language-none"><code class="language-none">public class UserNotFoundException extends RuntimeException&#123;    public UserNotFoundException(String s) &#123;        super(s);    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>super(s)可以调用父类的有参方法把s这个字符串传进去</p><p>&#x3D;&#x3D;这是我们处理异常的方式&#x3D;&#x3D;</p></li></ol><h3 id="回顾api设计，创建controller"><a href="#回顾api设计，创建controller" class="headerlink" title="回顾api设计，创建controller"></a>回顾api设计，创建controller</h3><p><img src="https://s2.loli.net/2022/04/21/7N6RshTckyH3W8G.png" alt="image-20220421164623585"></p><p>我们现在已经完成了数据库和服务的部分，现在需要controller来控制用户的操作</p><p>controller中不应该放置真正的逻辑代码，应该专注于接收请求，处理请求和返回请求</p><p>我们新建一个EmployeeResour.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>hengxing<span class="token punctuation">.</span>employeemanager</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>hengxing<span class="token punctuation">.</span>employeemanager<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">Employee</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>hengxing<span class="token punctuation">.</span>employeemanager<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">EmployeeService</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpStatus</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">ResponseEntity</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token comment">/** * @projectName: employeemanager * @package: com.hengxing.employeemanager * @className: EmployeeResource * @author: HengxingStu * @description: 整个程序的控制器，专注于处理请求 * @date: 4/21/2022 4:54 PM * @version: 1.0 */</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/employee"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EmployeeResource</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">EmployeeService</span> employeeService<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">EmployeeResource</span><span class="token punctuation">(</span><span class="token class-name">EmployeeService</span> employeeService<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>employeeService <span class="token operator">=</span> employeeService<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//返回所有用户</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/all"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">></span><span class="token punctuation">></span></span> <span class="token function">getAllEmployees</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">></span></span> allEmp <span class="token operator">=</span> employeeService<span class="token punctuation">.</span><span class="token function">findAllEmp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>allEmp<span class="token punctuation">,</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">OK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//通过id返回用户</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/find/&#123;id&#125;"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">></span></span> <span class="token function">getEmployeeById</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> id<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Employee</span> employee <span class="token operator">=</span> employeeService<span class="token punctuation">.</span><span class="token function">findEmployeeById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>employee<span class="token punctuation">,</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">OK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//添加用户</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/add"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">></span></span> <span class="token function">addEmployee</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">Employee</span> employee<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Employee</span> newEmployee <span class="token operator">=</span> employeeService<span class="token punctuation">.</span><span class="token function">addEmp</span><span class="token punctuation">(</span>employee<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>newEmployee<span class="token punctuation">,</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">CREATED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//更新用户</span>    <span class="token annotation punctuation">@PutMapping</span><span class="token punctuation">(</span><span class="token string">"/update"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">></span></span> <span class="token function">updateEmployee</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">Employee</span> employee<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Employee</span> updateEmployee <span class="token operator">=</span> employeeService<span class="token punctuation">.</span><span class="token function">updateEmp</span><span class="token punctuation">(</span>employee<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>updateEmployee<span class="token punctuation">,</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">OK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//删除用户</span>    <span class="token annotation punctuation">@DeleteMapping</span><span class="token punctuation">(</span><span class="token string">"/delete/&#123;id&#125;"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span> <span class="token function">deleteEmployee</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> id<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        employeeService<span class="token punctuation">.</span><span class="token function">delEmp</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">OK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们来逐步拆解这些代码</p><p>首先，这个文件是整个程序的控制器，需要处理请求，所以我们需要告诉spring这是一个rest风格的controller，使用<code>@RestController</code></p><p><code>@RequestMapping(&quot;/employee&quot;)</code>告诉spring将<code>/employee</code>的请求发送给当前类或方法来处理，并且可以层层递进</p><p>由于在controller中我们需要使用服务，所以也需要对服务进行声明和注入<code>@RestController</code></p><p>编写Mapping，每个mapping就对应一个api，我们可以使用如下的http方式</p><ul><li><p><code>@GetMapping(&quot;/all&quot;)</code></p><p>通过get方法，这种方法只能接收零星的参数，接收参数时使用实例&lt;通过id返回用户&gt;方法中的方式，要注意的是，如下图所示的两个字段必须相同</p><p><img src="https://s2.loli.net/2022/04/21/XTr7NKpcUSZGL1l.png" alt="image-20220421170534313"></p></li><li><p><code>@PostMapping(&quot;/add&quot;)</code></p><p>通过post方法，可以在requestbody中通过JSON等方式传递信息，使用方法是在controller的mapping方法参数中注解<code>@RequestBody</code></p></li><li><p><code>@PutMapping(&quot;/update&quot;)</code></p><p>使用put方法，因为我们要修改数据库中的信息&#x3D;&#x3D;这一部分存疑，我并不知道为何使用put，需要补习http协议的知识&#x3D;&#x3D;</p></li><li><p><code>@DeleteMapping(&quot;/delete/&#123;id&#125;&quot;)</code></p><p>也是通过get方法，只不过会告诉spring这是一个删除操作，方法中也可以在<code>ResponseEntity&lt;?&gt;</code>直接写问号，因为你不必返回任何信息，只需要返回状态码就行</p></li></ul><h3 id="使用PostMan进行api调试"><a href="#使用PostMan进行api调试" class="headerlink" title="使用PostMan进行api调试"></a>使用PostMan进行api调试</h3><p>postman可以帮我们发送各种http请求，比浏览器方便多了，安装方法略，自己找吧，应用总在更新，每天的安装方式都不同</p><p>或者可以使用<a href="https://httpie.io/">http Pi</a>，这是一个完全命令行的工具</p><h4 id="查询用户"><a href="#查询用户" class="headerlink" title="查询用户"></a>查询用户</h4><p>如果我们使用get方法向<code>http://localhost:8080/employee/all</code>发送请求，可以得到回复<code>[]</code>，里面没有信息是因为你还没添加用户，不过你可以在你的调试窗口看到http的状态码</p><p><img src="https://s2.loli.net/2022/04/21/aXvR6MoeCqiQlTf.png" alt="image-20220421183904855"></p><h4 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h4><p>使用POST方式向<code>http://localhost:8080/employee/add</code>发送请求，并在Body中附带你要添加的用户信息</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"email"</span><span class="token operator">:</span> <span class="token string">"daniel@encrpt.com"</span><span class="token punctuation">,</span>  <span class="token property">"imageUrl"</span><span class="token operator">:</span> <span class="token string">"https://www.bootdey.com/img/Content/avatar/avatar1.png"</span><span class="token punctuation">,</span>  <span class="token property">"jobTitle"</span><span class="token operator">:</span> <span class="token string">"JavaScript"</span><span class="token punctuation">,</span>  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Daniel Craig"</span><span class="token punctuation">,</span>  <span class="token property">"phone"</span><span class="token operator">:</span> <span class="token string">"1331497835"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>你会得到以下回复</p><pre class="line-numbers language-none"><code class="language-none">&#123;  &quot;id&quot;: 1,  &quot;name&quot;: &quot;Daniel Craig&quot;,  &quot;email&quot;: &quot;daniel@encrpt.com&quot;,  &quot;jobTitle&quot;: &quot;JavaScript&quot;,  &quot;phone&quot;: &quot;1331497835&quot;,  &quot;imageUrl&quot;: &quot;https:&#x2F;&#x2F;bootdey.com&#x2F;img&#x2F;Content&#x2F;anatar&#x2F;avatar1.png&quot;,  &quot;employeeCode&quot;: &quot;a34c8fd0-e3d2-4b5c-837e-a123990f0be0&quot;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="更新用户"><a href="#更新用户" class="headerlink" title="更新用户"></a>更新用户</h4><p>使用put方法<code>http://localhost:8080/employee/update</code>进行修改</p><p>不过要上传完整信息</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>        <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Daniel Craig"</span><span class="token punctuation">,</span>        <span class="token property">"email"</span><span class="token operator">:</span> <span class="token string">"daniel@encrpt.com"</span><span class="token punctuation">,</span>        <span class="token property">"jobTitle"</span><span class="token operator">:</span> <span class="token string">"JavaScript"</span><span class="token punctuation">,</span>        <span class="token property">"phone"</span><span class="token operator">:</span> <span class="token string">"1331497835"</span><span class="token punctuation">,</span>        <span class="token property">"imageUrl"</span><span class="token operator">:</span> <span class="token string">"https://bootdey.com/img/Content/avatar/avatar1.png"</span><span class="token punctuation">,</span>        <span class="token property">"employeeCode"</span><span class="token operator">:</span> <span class="token string">"a34c8fd0-e3d2-4b5c-837e-a123990f0be0"</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例如这里我们修改了图片连接，你也可以自行修改更明显的地方</p><h5 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Exception <span class="token keyword">in</span> thread <span class="token string">"main"</span> org.hibernate.InstantiationException: No default constructor <span class="token keyword">for</span> entity:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这是以为你的实体类没有默认的构造方法，加上就好了，在本例中是这样的</p><p><code>public Employee() &#123;&#125;</code></p><h2 id="前端部分-angular"><a href="#前端部分-angular" class="headerlink" title="前端部分-angular"></a>前端部分-angular</h2><h3 id="前端设计"><a href="#前端设计" class="headerlink" title="前端设计"></a>前端设计</h3><p>现在来看我们的前端部分的设计</p><p><img src="https://s2.loli.net/2022/04/21/PkfTGUFuASDtCH8.png" alt="image-20220421192055948"></p><p>UI就是用户在页面看到的，UI会连接到一个component中，component又可以访问一个service，这个service就是我们访问后端的方法</p><p>关于Angular如何使用可以去看官网文档</p><p>首先需要Angular中创建一个Service，这是我们访问后端的http服务</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Injectable <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@angular/core'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Observable <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'rxjs'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> HttpClient <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@angular/common/http'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Employee <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./employee'</span><span class="token punctuation">;</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">Injectable</span></span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  providedIn<span class="token operator">:</span><span class="token string">'root'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">EmployeeService</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">private</span> apiServerUrl <span class="token operator">=</span> <span class="token string">'http://localhost:8080'</span><span class="token punctuation">;</span>  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> http<span class="token operator">:</span> HttpClient<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span>  <span class="token keyword">public</span> <span class="token function">getEmployees</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Observable<span class="token operator">&lt;</span>Employee<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span>Employee<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>apiServerUrl<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/employee/all</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">public</span> <span class="token function">addEmploye</span><span class="token punctuation">(</span>employee<span class="token operator">:</span> Employee<span class="token punctuation">)</span><span class="token operator">:</span> Observable<span class="token operator">&lt;</span>Employee<span class="token operator">></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">post</span><span class="token generic class-name"><span class="token operator">&lt;</span>Employee<span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>apiServerUrl<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/employee/add</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>employee<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">public</span> <span class="token function">updateEmploye</span><span class="token punctuation">(</span>employee<span class="token operator">:</span> Employee<span class="token punctuation">)</span><span class="token operator">:</span> Observable<span class="token operator">&lt;</span>Employee<span class="token operator">></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">put</span><span class="token generic class-name"><span class="token operator">&lt;</span>Employee<span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>apiServerUrl<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/employee/update</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>employee<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">public</span> <span class="token function">deleteEmploye</span><span class="token punctuation">(</span>employeeId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> Observable<span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">delete</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>apiServerUrl<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/employee/delete/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>employeeId<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>@Injectable</code>可以将服务作为依赖注入到组件中，更多关于此的内容请查看<a href="https://angular.cn/guide/architecture-services">angular依赖注入</a>，下图是依赖注入的原理</p><p><img src="https://angular.cn/generated/images/guide/architecture/injector-injects.png" alt="angular依赖注入"></p><p>你可以看到我们定义了访问api的各种请求，但这其中用到了一些实体类的内容，Angular并不能直接访问spring的内部类，所以我们需要在angular中创建一个镜像类</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Employee</span><span class="token punctuation">&#123;</span>  id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>  email<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>  jobTitle<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>  phone<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>  imageUrl<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>  employeeCode<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>定义好了服务，你就可以在component中使用它，先在构造方法中注入服务</p><h3 id="报错-1"><a href="#报错-1" class="headerlink" title="报错"></a>报错</h3><p><code>Uncaught Error: Type HttpClient does not have &#39;ɵmod&#39; property</code></p><p>stackOverflow的回答</p><ol><li>Don’t import HttpClient on app.module.ts</li><li>Don’t import HttpClientModule in app.component.ts</li><li>Don’t inject HttpClient directly in your app.component.ts, instead use a service.</li></ol><p>This are 3 errors&#x2F;bad practices I can see!</p><p>你可以查看这位回答者在下面给出了进一步的回答</p><blockquote><p>tutorial must be old,In angular we should import modules, i.e HttpClientModule.this will load all exported classes inside this particular module &amp; after that you can just use HttpClient as a injected variable inside component&#x2F;service constructor. Try creating module yourself to understand it better.</p></blockquote><p>言下之意就是&#x3D;&#x3D;应该引入HttpClientModule&#x3D;&#x3D;这个模组而不是HttpClient这个模块</p><h3 id="启动angular服务器"><a href="#启动angular服务器" class="headerlink" title="启动angular服务器"></a>启动angular服务器</h3><p>这时，你会发现你得到了一个错误<code>Access to XMLHttpRequest at &#39;http://localhost:8080/employee/all&#39; from origin &#39;http://localhost:4200&#39; has been blocked by CORS policy: No &#39;Access-Control-Allow-Origin&#39; header is present on the requested resource.</code></p><p>因为你的web服务器和后端服务器使用的是不同的域名，后端拒绝了你的访问，你可以查看<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS">跨域资源分享文档</a></p><p>为了解决跨域问题，你需要在后端中设置<code>CORS configuration</code>，在SpringBootApplication启动类中添加如下方法</p><pre class="line-numbers language-none"><code class="language-none">@Beanpublic CorsFilter corsFilter()&#123;CorsConfiguration corsConfiguration &#x3D; new CorsConfiguration();corsConfiguration.setAllowCredentials(true);corsConfiguration.setAllowedOrigins(Arrays.asList(&quot;http:&#x2F;&#x2F;localhost:4200&quot;));corsConfiguration.setAllowedHeaders(Arrays.asList(&quot;Origin&quot;, &quot;Access-Control-Allow-Origin&quot;,&quot;Content-Type&quot;,&quot;Accept&quot;, &quot;Authorization&quot;, &quot;Origin, Accept&quot;, &quot;X-Requested-With&quot;,&quot;Access-Control-Request-Method&quot;, &quot;Access-Control-Request-Headers&quot;));corsConfiguration.setExposedHeaders(Arrays.asList(&quot;Origin&quot;,&quot;Content-Type&quot;,&quot;Accept&quot;,&quot;Authorization&quot;, &quot;Access-Control-Allow-Origin&quot;, &quot;Access-Control-Allow-Credentials&quot;));corsConfiguration.setAllowedMethods(Arrays.asList(&quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;DELETE&quot;, &quot;OPTIONS&quot;));UrlBasedCorsConfigurationSource urlBasedCorsConfigurationSource &#x3D; new UrlBasedCorsConfigurationSource();urlBasedCorsConfigurationSource.registerCorsConfiguration(&quot;&#x2F;**&quot;,corsConfiguration);return new CorsFilter(urlBasedCorsConfigurationSource);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>app.component.html</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nav<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navbar navbar-expand-lg navbar-dark bg-dark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navbar-brand<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>Employee Manager<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navbar-toggler<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">data-toggle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>collapse<span class="token punctuation">"</span></span> <span class="token attr-name">data-target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#navbarColor02<span class="token punctuation">"</span></span> <span class="token attr-name">aria-controls</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navbar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navbar-toggler-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>collapse navbar-collapse<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navbarColor02<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navbar-nav mr-auto<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nav-item active<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nav-link<span class="token punctuation">"</span></span> <span class="token attr-name">data-toggle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal<span class="token punctuation">"</span></span> <span class="token attr-name">data-target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#exampleModal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Add Employee <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sr-only<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>(current)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-inline my-2 my-lg-0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>key<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>searchName<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control mr-sm-2<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Search employees..<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>let employee of employees<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-6 col-xl-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card m-b-30<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-body row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;employee?.imageUrl&#125;&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img-fluid rounded-circle w-60<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-6 card-title align-self-center mb-0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>Emma A. Main<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m-0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Graphics Designer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list-group list-group-flush<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list-group-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-envelope float-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>Email : <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>PaulGoyette@gmail.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list-group-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-phone float-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>Phone : 000 123-456<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-body<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>float-right btn-group btn-group-sm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-primary tooltips<span class="token punctuation">"</span></span> <span class="token attr-name">data-placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-toggle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tooltip<span class="token punctuation">"</span></span> <span class="token attr-name">data-original-title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Edit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-pencil<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-secondary tooltips<span class="token punctuation">"</span></span> <span class="token attr-name">data-placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-toggle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tooltip<span class="token punctuation">"</span></span> <span class="token attr-name">data-original-title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Delete<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-times<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>social-links list-inline mb-0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list-inline-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">data-placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-toggle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tooltip<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tooltips<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">data-original-title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Facebook<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-facebook-f<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list-inline-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">data-placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-toggle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tooltip<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tooltips<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">data-original-title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Twitter<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-twitter<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list-inline-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">data-placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-toggle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tooltip<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tooltips<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">data-original-title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Skype<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-skype<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>styless.css</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* You can add global styles to this file, and also import other style files */</span><span class="token comment">/* import Bootstrap*/</span><span class="token atrule"><span class="token rule">@import</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">'https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css'</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span></span><span class="token selector">body</span><span class="token punctuation">&#123;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> #f5f5f5<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.card</span> <span class="token punctuation">&#123;</span>  <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 1px 2px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.05<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 1px 2px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.05<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.w-60</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">h1, h2, h3, h4, h5, h6</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 0 0 10px<span class="token punctuation">;</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> 600<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.social-links li a</span> <span class="token punctuation">&#123;</span>  <span class="token property">-webkit-border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>89<span class="token punctuation">,</span>206<span class="token punctuation">,</span>181<span class="token punctuation">,</span>.85<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">a</span> <span class="token punctuation">&#123;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #707070<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中，在引入employee的时候使用了<code>employee?.imageUrl</code>这个问号是为了防止服务器在emploee不存在时报错</p><p>现在介绍一种控制按钮展现页面的方法，通过统一的方法控制modal的展现</p><p>在按钮上通过<code>(click)=&quot;onOpenModal(null, &#39;add&#39;)&quot;</code>，控制并调用对应的modal，当我们点击按钮，就会触发<code>onOpenModal</code>方法，同时传入需要的参数，参数有何作用稍候解释，我们来看方法的代码</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">public</span> <span class="token function">onOpenModal</span><span class="token punctuation">(</span>employee<span class="token operator">:</span> Employee <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> mode<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> container <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'main-container'</span><span class="token punctuation">)</span>    <span class="token keyword">const</span> button <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    button<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">'button'</span><span class="token punctuation">;</span>    button<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>    button<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'data-toggle'</span><span class="token punctuation">,</span><span class="token string">'modal'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>mode <span class="token operator">===</span> <span class="token string">'add'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    button<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'data-target'</span><span class="token punctuation">,</span><span class="token string">'#addEmployeeModal'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>mode <span class="token operator">===</span> <span class="token string">'edit'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      button<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'data-target'</span><span class="token punctuation">,</span><span class="token string">'#updateEmployeeModal'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>mode <span class="token operator">===</span> <span class="token string">'delete'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      button<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'data-target'</span><span class="token punctuation">,</span><span class="token string">'#deleteEmployeeModal'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    container<span class="token operator">?.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span><span class="token punctuation">;</span>    button<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>进入onOpenModal方法后，我们首先要做的是获取容器，通过Id找到了main-container，在这个容器中创建新的元素，我们这里创建的是button，为其附带了modal的参数，并且设置了不显示，通过我们传入的参数，我们可以通过id设置对应的<code>data-target</code>，指向各个modal。</p><p>最后一步就是通过在container中添加子元素，并点击，完成了业务逻辑。</p><p>在调试整个项目的逻辑时可以用开发者工具</p><p><img src="https://s2.loli.net/2022/04/22/X1W5lnIP3hQMUJz.png" alt="image-20220422185820205"></p><h3 id="angular表单"><a href="#angular表单" class="headerlink" title="angular表单"></a>angular表单</h3><p>若要使用angular的表单，在<code>app.module.ts</code>中引入</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> FormsModule <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@angular/forms'</span><span class="token punctuation">;</span>imports<span class="token operator">:</span> <span class="token punctuation">[</span>    FormsModule  <span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>引入表单后就可以直接使用</p><h4 id="添加员工组件"><a href="#添加员工组件" class="headerlink" title="添加员工组件"></a>添加员工组件</h4><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- Add Employee Modal --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal fade<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addEmployeeModal<span class="token punctuation">"</span></span> <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dialog<span class="token punctuation">"</span></span> <span class="token attr-name">aria-labelledby</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addEmployeeModalLabel<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-dialog<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>document<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-title<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addEmployeeModalLabel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Add Employee<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>close<span class="token punctuation">"</span></span> <span class="token attr-name">data-dismiss</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal<span class="token punctuation">"</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Close<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&times;">&amp;times;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-body<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">#addForm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ngForm<span class="token punctuation">"</span></span> <span class="token attr-name">(ngSubmit)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onAddEmloyee(addForm)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">ngModel</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Name<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Email Address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">ngModel</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Email<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Job title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">ngModel</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jobTitle<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jobTile<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Job title<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Phone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">ngModel</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Phone<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Image URL<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">ngModel</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imageUrl<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imageUrl<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Image URL<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add-employee-form<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">data-dismiss</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Close<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addForm.invalid<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-primary<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>Save changes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在我们来解析其中的要点</p><p><strong>表单部分</strong></p><p>首先除去主要的html部分，我们要绑定form表单，所以在form标签为这个DOM对象起一个名字</p><p><code> &lt;form #addForm=&quot;ngForm&quot; (ngSubmit)=&quot;onAddEmloyee(addForm)&quot;&gt;</code></p><p>这个ngForm，我并不明白它的意思，猜想应该是绑定了表单的类型，但我的html和js方面的知识不到家，并不了解</p><p><code>(ngSubmit)</code>是绑定了方法，并将这个表单作为ngForm类型的数据传参</p><blockquote><p> []表示绑定属性，()表示绑定事件，[()]表示双向绑定</p></blockquote><p>其次，每个input中的name会被当做这个表单数据的key，所以一定要有，并为其添加<code>ngModel </code>样式</p><p><code>&lt;input type=&quot;text&quot; ngModel name=&quot;name&quot; class=&quot;form-control&quot; id=&quot;name&quot; placeholder=&quot;Name&quot; required&gt;</code></p><p>最后，为提交按钮设置表单检查，如果表单未完成，则不能点击。使用属性绑定<code>[disabled]=&quot;addForm.invalid&quot;</code></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addForm.invalid<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-primary<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>Save changes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>一旦我们点击提交，angular就会自动帮我们把表单数据作为参数传给<code>ngSubmit</code>绑定的函数</p><p><strong>逻辑部分</strong></p><p><strong>先空着</strong></p><h4 id="修改员工组件"><a href="#修改员工组件" class="headerlink" title="修改员工组件"></a>修改员工组件</h4><p>我们这次从修改按钮先来看</p><p>在html部分我们可以看到，修改标签被我们写成这样</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onOpenModal(employee , 'edit')<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-primary tooltips<span class="token punctuation">"</span></span> <span class="token attr-name">data-placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-toggle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tooltip<span class="token punctuation">"</span></span> <span class="token attr-name">data-original-title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Edit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-pencil<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中的click绑定了onOpenModal方法，传入当前的employee和字符串edit。它会执行onOpenModal方法（这里我们由于传入了新的员工数据，所以需要创建一个新的对象，所以进行了更新），进而执行<code>onUpdateEmloyee</code></p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">public</span> editEmployee<span class="token operator">:</span> Employee <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">if</span> <span class="token punctuation">(</span>mode <span class="token operator">===</span> <span class="token string">'edit'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>editEmployee <span class="token operator">=</span> employee<span class="token punctuation">;</span><span class="token comment">//将接收到的参数赋值给要修改的新对象 </span>    button<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'data-target'</span><span class="token punctuation">,</span><span class="token string">'#updateEmployeeModal'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>container<span class="token operator">?.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span><span class="token punctuation">;</span>button<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token comment">/** * onUpdateEmloyee * 修改用户信息的方法 */</span> <span class="token keyword">public</span> <span class="token function">onUpdateEmloyee</span><span class="token punctuation">(</span>employee<span class="token operator">:</span> Employee<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>  <span class="token comment">//employeeService调用updateEmploye方法，这里就已经修改了，然后我们再调用subscribe重新获取用户</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>employeeService<span class="token punctuation">.</span><span class="token function">updateEmploye</span><span class="token punctuation">(</span>employee<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>    <span class="token punctuation">(</span>response<span class="token operator">:</span> Employee<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getEmployees</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span>error<span class="token operator">:</span> HttpErrorResponse<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token function">alert</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>  <span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>调用<code>employeeService</code>的<code>getEmployees</code>方法重新获取用户信息（相当于刷新界面）</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">public</span> <span class="token function">getEmployees</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>employeeService<span class="token punctuation">.</span><span class="token function">getEmployees</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>      <span class="token punctuation">(</span>response<span class="token operator">:</span> Employee<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>employees <span class="token operator">=</span> response<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">(</span>error<span class="token operator">:</span> HttpErrorResponse<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这便是我们完整的业务逻辑</p><p>现在需要在html中写出Edit Modal</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- Edit Modal --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal fade<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>updateEmployeeModal<span class="token punctuation">"</span></span> <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dialog<span class="token punctuation">"</span></span> <span class="token attr-name">aria-labelledby</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>employeeEditModalLabel<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-dialog<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>document<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>employees?.length == 0<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-lg-12 col-md-12 col-xl-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-title<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>updateEmployeeModalLabel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Edit Employee &#123;&#123;editEmployee?.name&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>close<span class="token punctuation">"</span></span> <span class="token attr-name">data-dismiss</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal<span class="token punctuation">"</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Close<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&times;">&amp;times;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-body<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">#editForm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ngForm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">ngModel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;editEmployee?.name&#125;&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">aria-describedby</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emailHelp<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token comment">&lt;!-- 这里隐藏着id和employeeCode --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span> <span class="token attr-name">ngModel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;editEmployee?.id&#125;&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span> <span class="token attr-name">ngModel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;editEmployee?.employeeCode&#125;&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userCode<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userCode<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Email Address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">ngModel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;editEmployee?.email&#125;&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Job title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">ngModel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;editEmployee?.jobTitle&#125;&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jobTitle<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jobTitle<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Job title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Phone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">ngModel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;editEmployee?.phone&#125;&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Phone<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Image URL<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">ngModel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;editEmployee?.imageUrl&#125;&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imageUrl<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imageUrl<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Image URL<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">data-dismiss</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-secondary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Close<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onUpdateEmloyee(editForm.value)<span class="token punctuation">"</span></span> <span class="token attr-name">data-dismiss</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-primary<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>Save changes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们一一介绍</p><p>首先是如何绑定表单，还是在<code>&lt;form&gt;标签</code>中写入<code>#editForm=&quot;ngForm&quot;</code>这样就将此表单声明为一个名为editForm的ngForm组件，其次在提交按钮绑定事件，调用更新方法，传入<code>editForm.value</code></p><p>其次，这里使用的是<code>editEmployee</code>这是在onOpenModal传入的参数，也就是我们要修改的对象。</p><p>你还可以看到id和employeeCode，但我们对他进行了隐藏，因为我们不希望用户修改这些信息，不过我们还是需要这些信息，因为我们如果没有id和employeeCode，我们的服务器就会误认为这是一个新的用户，为他分配新的id。</p><p><strong>Tips：清楚表单里的数据</strong></p><p>添加一个用户之后，再次点击添加，你会看到上一次添加的用户信息依然存在，解决这个问题，只需要在onAddEmloyee方法中（完成业务逻辑后）添加如下代码，就可以清空</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript">addForm<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="删除员工组件"><a href="#删除员工组件" class="headerlink" title="删除员工组件"></a>删除员工组件</h4><p>有了前两个的经验，第三个就容易多了。</p><p>首先我们知道当点击删除按钮时，会通过<code>onOpenModal</code>引导到<code>deleteEmployeeModal</code>的模组中</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- Delete Modal --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal fade<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deleteEmployeeModal<span class="token punctuation">"</span></span> <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dialog<span class="token punctuation">"</span></span> <span class="token attr-name">aria-labelledby</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deleteModelLabel<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-dialog<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>document<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-title<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deleteModelLabel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Delete Employee<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>close<span class="token punctuation">"</span></span> <span class="token attr-name">data-dismiss</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal<span class="token punctuation">"</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Close<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&times;">&amp;times;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-body<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Are you sure you want to delete employee &#123;&#123;deleteEmployee?.name&#125;&#125;?<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal-footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">data-dismiss</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>No<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onDeleteEmloyee(deleteEmployee?.id)<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-danger<span class="token punctuation">"</span></span> <span class="token attr-name">data-dismiss</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>modal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Yes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个modal中的按钮和onDeleteEmloyee方法绑定了，同时，我们需要将当前的用户的id传给删除的方法，这就需要我们再创建一个对象deleteEmployee</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">public</span> deleteEmployee<span class="token operator">:</span> Employee <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接收用户的id，调用deleteEmployee</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token comment">/**   * onDeleteEmloyee   * 删除用户信息的方法   */</span>   <span class="token keyword">public</span> <span class="token function">onDeleteEmloyee</span><span class="token punctuation">(</span>employeeId<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//employeeService调用updateEmploye方法，这里就已经修改了，然后我们再调用subscribe重新获取这个用户</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>employeeService<span class="token punctuation">.</span><span class="token function">deleteEmploye</span><span class="token punctuation">(</span>employeeId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>      <span class="token punctuation">(</span>response<span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getEmployees</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">(</span>error<span class="token operator">:</span> HttpErrorResponse<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token function">alert</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>    <span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="没有员工时的提示"><a href="#没有员工时的提示" class="headerlink" title="没有员工时的提示"></a>没有员工时的提示</h4><p>使用ngIf对数组长度进行判断，如果为零就显示</p><pre class="line-numbers language-none"><code class="language-none">&lt;!-- Notification for no employees --&gt;&lt;div *ngIf&#x3D;&quot;employees?.length &#x3D;&#x3D; 0&quot; class&#x3D;&quot;col-lg-12 col-md-12 col-xl-12&quot;&gt;  &lt;div class&#x3D;&quot;alert alert-info&quot; role&#x3D;&quot;alert&quot;&gt;    &lt;h4 class&#x3D;&quot;alert-heading&quot;&gt;NO EMPLOYEES!&lt;&#x2F;h4&gt;    &lt;p&gt;No Employees were found.&lt;&#x2F;p&gt;  &lt;&#x2F;div&gt;&lt;&#x2F;div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="纯前端的简单搜索组件"><a href="#纯前端的简单搜索组件" class="headerlink" title="纯前端的简单搜索组件"></a>纯前端的简单搜索组件</h4><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="完整的表单"><a href="#完整的表单" class="headerlink" title="完整的表单"></a>完整的表单</h2><p>通过ngsubmit来提交，可以提交</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">#registerForm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ngForm<span class="token punctuation">"</span></span> <span class="token attr-name">(ngSubmit)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>register(registerForm)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>UserName<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">ngModel</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control form-control-lg<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Enter your username<span class="token punctuation">"</span></span> <span class="token attr-name">required</span> <span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>Password<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">ngModel</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control form-control-lg<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Enter your password<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>Confirm Password Again<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">ngModel</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>passwordAgain<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>passwordAgain<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control form-control-lg<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Confirm your password again<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>NickName<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">ngModel</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nickname<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nickname<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control form-control-lg<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Enter your nickname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-center mt-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>registerForm.invalid<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-lg btn-primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Sign up<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">;</span> <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> loginService<span class="token operator">:</span>LoginService<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token function">register</span><span class="token punctuation">(</span>form<span class="token operator">:</span> NgForm<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span>value<span class="token punctuation">)</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span>value<span class="token punctuation">.</span>password <span class="token operator">==</span> form<span class="token punctuation">.</span>value<span class="token punctuation">.</span>passwordAgain<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">.</span>username <span class="token operator">=</span> form<span class="token punctuation">.</span>value<span class="token punctuation">.</span>username      <span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">.</span>password <span class="token operator">=</span> form<span class="token punctuation">.</span>value<span class="token punctuation">.</span>password      <span class="token keyword">this</span><span class="token punctuation">.</span>loginService<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span><span class="token punctuation">&#123;</span>      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"验证失败，请检查两次密码的拼写"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java JPA </tag>
            
            <tag> SpringBoot </tag>
            
            <tag> Angular </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【尚硅谷】用户画像日志记录</title>
      <link href="/2022/04/24/ITguiguUserProfile/"/>
      <url>/2022/04/24/ITguiguUserProfile/</url>
      
        <content type="html"><![CDATA[<h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><h2 id="系统准备"><a href="#系统准备" class="headerlink" title="系统准备"></a>系统准备</h2><p>Ubuntu16.04</p><p><img src="https://s2.loli.net/2022/05/01/6TJx48l2XBd1Lsc.png" alt="image-20220404141952340"></p><h2 id="Hadoop安装"><a href="#Hadoop安装" class="headerlink" title="Hadoop安装"></a>Hadoop安装</h2><p>伪分布式配置</p><p>以Hadoop2.7.5版本为例</p><p>准备好安装文件</p><p><img src="https://s2.loli.net/2022/03/29/NCtIg8ao7cO3Ehw.jpg" alt="img"></p><p><img src="https://s2.loli.net/2022/03/29/GpjSbDFnZM8mzAv.jpg" alt="img"></p><p>解压安装包</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> hadoop-2.7.5.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>执行完后，在当前的目录下会出现一个名为 hadoop-2.7.5 的文件目录，这个目录就是 hadoop 的安装目录。</p><p>在 Hadoop 中包含了 3 个技术组件，分别是：</p><ul><li><p>分布式存储技术 - HDFS</p></li><li><p>分布式资源管理技术 - Yarn</p></li><li><p>分布式计算技术 - MapReduce</p></li></ul><p>那么，我们常说的 Hadoop 安装，实际上就包含了 HDFS 的安装、Yarn 的安装以及 MapReduce 的安装，我们接下来分别配置安装。</p><p>【JDK安装】</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> openjdk-8-jdk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>检查jdk版本，是否安装成功</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">java</span> <span class="token parameter variable">-version</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/03/29/8AD7Um9kwiNCLBR.jpg" alt="img"></p><p>成功后是这样的。</p><p>查看javahome的位置</p><p><img src="https://s2.loli.net/2022/03/29/qZH9oYPwVlJ7EBI.jpg" alt="img"></p><p>把Hadoop放到&#x2F;usr&#x2F;local下，并创建软连接</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">mv</span> hadoop-2.7.5 /usr/local<span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-snf</span> /usr/local/hadoop-2.7.5/ /usr/local/hadoop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>给Hadoop文件夹赋予权限（生产环境不推荐）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> <span class="token parameter variable">-R</span> <span class="token number">777</span> hadoop-2.7.5/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>配置环境变量</p><ul><li><p>局部环境变量：~&#x2F;.bashrc</p></li><li><p>全局环境变量：&#x2F;etc&#x2F;profile</p></li></ul><p>这里我图方便配置全局了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">HADOOP_HOME</span><span class="token operator">=</span>/usr/local/hadoop<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$HADOOP_HOME</span>/bin:<span class="token variable">$HADOOP_HOME</span>/sbin:./:<span class="token variable">$JAVA_HOME</span>/bin<span class="token comment">#JAVA_HOME</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/lib/jvm/java-8-openjdk-amd64<span class="token builtin class-name">export</span> <span class="token assign-left variable">JRE_HOME</span><span class="token operator">=</span><span class="token variable">$JAVA_HOME</span>/jre<span class="token builtin class-name">export</span> <span class="token assign-left variable">CLASSPATH</span><span class="token operator">=</span><span class="token variable">$JAVA_HOME</span>/lib<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置后生效一下</p><p>source &#x2F;etc&#x2F;profile</p><p>输入Hadoop的命令，你将看到</p><p>这时Hadoop安装好了，现在配置伪分布式：</p><p>这是它的配置文件以及路径</p><img src="https://s2.loli.net/2022/03/30/U76RD1ZkrQdjVHJ.png" alt="image-20220330154053686" style="zoom:80%;" /><ol><li>配置Hadoop运行环境</li></ol><p>hadoop_env.sh</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># The java implementation to use.  </span><span class="token comment">#这里最好直接写绝对路径了，搞不清楚怎么在这里写变量，这样写最保险</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/lib/jvm/java-8-openjdk-amd64/  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="2"><li>core-site.xml</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>fs.defaultFS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hdfs://hengxing:9000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hadoop.tmp.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/data/hadoopdata<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>hdfs-site.xml</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.namenode.name.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/data/hadoopdata/name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>为了保证元数据的安全一般配置多个不同目录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.datanode.data.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/data/hadoopdata/data<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>datanode 的数据存储目录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.replication<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>HDFS 的数据块的副本存储个数, 默认是3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li>mapred-site.xml</li></ol><p>在hadoop的相关目录中没有此文件，但是有一个mapred-site.xml.template文件，将该文件复制一份为mapred-site.xml</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> mapred-site.xml.template mapred-site.xml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>mapreduce.framework.name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>yarn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="5"><li>yarn-site.xml</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 指定ResourceManager的地址--></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.resourcemanager.hostname<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hengxing<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 指定reducer获取数据的方式--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.nodemanager.aux-services<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>mapreduce_shuffle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.nodemanager.local-dirs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>file:///data/hadoopdata/yarn/nodemanager<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="6"><li>创建相关目录</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /data/hadoopdata/name<span class="token function">sudo</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /data/hadoopdata/data<span class="token function">sudo</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /data/hadoopdata/yarn/nodemanager<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同时给予权限<code>sudo chmod -R 777 /data/</code></p><ol start="7"><li>对HDFS集群进行格式化，HDFS集群是用来存储数据的。</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hdfs namenode <span class="token parameter variable">-format</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>看到下图内容说明成功 <img src="https://s2.loli.net/2022/03/30/Ai47ENBrP3Rl6fF.png" alt="image-20220330160138305"></p><p>启动集群</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hadoop-daemon.sh start namenode <span class="token comment">#启动主节点</span>hadoop-daemon.sh start datanode <span class="token comment">#启动从节点</span>yarn-daemon.sh start resourcemanageryarn-daemon.sh start nodemanager<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ol><li>启动HDFS集群</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hadoop-daemon.sh start namenode <span class="token comment">#启动主节点</span>hadoop-daemon.sh start datanode <span class="token comment">#启动从节点</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/03/29/s8gKjXZhbcSGnqA.jpg" alt="img"></p><ol start="2"><li>启动YARN集群</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yarn-daemon.sh start resourcemanageryarn-daemon.sh start nodemanager<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/03/30/KGPnXZraIL1TMkw.png" alt="image-20220330160554080"></p><p><img src="https://s2.loli.net/2022/03/30/aAOcXnigJWzCvKw.png" alt="image-20220330160606652"></p><ol start="3"><li>启动作业历史服务器</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mr-jobhistory-daemon.sh start historyserver<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/03/29/flKV6z5o2uAdZUx.jpg" alt="img"></p><p>jps可以查看是否启动成功</p><p>也可以在浏览器的ui界面查看，网址见截图</p><p><img src="https://s2.loli.net/2022/03/29/NxleSpOs8EK7M2G.jpg" alt="img"></p><p><img src="https://s2.loli.net/2022/03/29/TQelB4fsNnKAhXL.jpg" alt="img"></p><p>用自带的圆周率程序测试一下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> jar /usr/local/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.5.jar pi <span class="token number">4</span> <span class="token number">100</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/03/29/C1mM8Diwpy6OToY.jpg" alt="img"></p><p>关闭命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hadoop-daemon.sh stop namenodehadoop-daemon.sh stop datanodeyarn-daemon.sh stop resourcemanageryarn-daemon.sh stop nodemanager<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>关闭节点安全模式</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hdfs dfsadmin <span class="token parameter variable">-safemode</span> leave<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>遇到[There are 2 missing blocks. The following files may be corrupted:]</p><p><a href="https://stackoverflow.com/questions/19205057/how-to-fix-corrupt-hdfs-files">外网上的解决方式</a> &lt;–  点击即可进入 </p><p>找到中断文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hengxing@hengxing:~$ hdfs <span class="token function">fsck</span> -list-corruptfileblocksConnecting to namenode via http://hengxing:50070/fsck?ugi<span class="token operator">=</span>hengxing<span class="token operator">&amp;</span><span class="token assign-left variable">listcorruptfileblocks</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span><span class="token assign-left variable">path</span><span class="token operator">=</span>%2FThe list of corrupt files under path <span class="token string">'/'</span> are:blk_1073741838/tmp/hadoop-yarn/staging/history/done/2022/03/24/000000/job_1648112897030_0001-1648113971406-hengxing-QuasiMonteCarlo-1648114019450-4-1-SUCCEEDED-default-1648113983899.jhistblk_1073741839/tmp/hadoop-yarn/staging/history/done/2022/03/24/000000/job_1648112897030_0001_conf.xmlThe filesystem under path <span class="token string">'/'</span> has <span class="token number">2</span> CORRUPT files<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>删除它</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hdfs <span class="token function">fsck</span> %你文件的路径% <span class="token parameter variable">-delete</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Hadoop-跑MapReduce-Job-的时候卡住-unhealthy-nodes-x3D-1"><a href="#Hadoop-跑MapReduce-Job-的时候卡住-unhealthy-nodes-x3D-1" class="headerlink" title="Hadoop 跑MapReduce Job 的时候卡住,unhealthy-nodes&#x3D;1"></a>Hadoop 跑MapReduce Job 的时候卡住,unhealthy-nodes&#x3D;1</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hengxing@hengxing:~$ <span class="token function">yarn</span> <span class="token function">node</span> <span class="token parameter variable">-list</span> <span class="token parameter variable">-all</span><span class="token number">22</span>/03/30 <span class="token number">22</span>:38:39 INFO client.RMProxy: Connecting to ResourceManager at hengxing/192.168.59.140:8032Total Nodes:1         Node-Id     Node-StateNode-Http-AddressNumber-of-Running-Containers  hengxing:40085      UNHEALTHY    hengxing:8042                           <span class="token number">0</span>hengxing@hengxing:~$ <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>节点被判断为unhealthy，有以下几点原因：</p><ul><li>节点的磁盘空间占用达到了阈值</li><li>节点的文件存储位置没有权限创建文件</li></ul><p>通常可以用以下几种方式解决</p><ul><li>提高阈值、清理磁盘空间</li><li>给hadoop存文件的文件夹修改权限和拥有者、直接重新设置存储文件夹（记得别放在home文件夹下，会有权限问题）</li></ul><p>你可以看到报错里说</p><p>local-dir are bad，说明这个文件有问题，应该是没权限新建job文件，被判定为了不健康</p><h2 id="Hive安装"><a href="#Hive安装" class="headerlink" title="Hive安装"></a>Hive安装</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>下载解压，加软连接</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">tar</span> xvfz apache-hive-2.3.7-bin.tar.gz <span class="token parameter variable">-C</span> /usr/local/<span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-snf</span> apache-hive-2.3.7-bin/ hive<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>添加环境变量</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#Hive Home</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">HIVE_HOME</span><span class="token operator">=</span>/usr/local/hive<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$HIVE_HOME</span>/bin<span class="token builtin class-name">export</span> <span class="token assign-left variable">CLASSPATH</span><span class="token operator">=</span><span class="token variable">$CLASSPATH</span>:/usr/local/hadoop/lib/*:.:/usr/local/hive/lib/*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>定义仓库目录</p><pre class="line-numbers language-none"><code class="language-none">hdfs dfs -mkdir -p &#x2F;user&#x2F;hengxing&#x2F;warehouse#修改读写权限：&#x2F;usr&#x2F;local$ hdfs dfs -chmod 777 &#x2F;user&#x2F;hengxing&#x2F;warehouse<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>配置文件</p><p>新建conf下的hive-site.xml，注意配置文件中的<value></value>中的内容必须在同一行上且不能有空格，即不能包含换行符和空格，否则就会出错，请检查其它的配置是否还在存在这类问题。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?></span><span class="token prolog">&lt;?xml-stylesheet type="text/xsl" href="configuration.xsl"?></span><span class="token comment">&lt;!--Licensed to the Apache Software Foundation (ASF) under one or morecontributor license agreements. See the NOTICE file distributed withthis work for additional information regarding copyright ownership.The ASF licenses this file to You under the Apache License, Version 2.0(the "License"); you may not use this file except in compliance withthe License. You may obtain a copy of the License athttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, softwaredistributed under the License is distributed on an "AS IS" BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.See the License for the specific language governing permissions andlimitations under the License.--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>javax.jdo.option.ConnectionURL<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>jdbc:mysql://localhost:3306/metastore?createDatabaseIfNotExist=true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>JDBC connect string for a JDBC metastore.To use SSL to encrypt/authenticate the connection, provide database-specific SSL flag in the connection URL.For example, jdbc:postgresql://myhost/db?ssl=true for postgres database.        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.metastore.warehouse.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hdfs://hengxing:9000/user/hengxing/warehouse<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>location of default database for the warehouse<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--     &lt;property>        &lt;name>hive.metastore.local&lt;/name>        &lt;value>true&lt;/value>    &lt;/property>    在0.10 0.11或者之后的hive版本 hive.metastore.local 属性不再使用,请去掉 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>javax.jdo.option.ConnectionDriverName<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>com.mysql.jdbc.Driver<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>Driver class name for a JDBC metastore<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>javax.jdo.option.ConnectionUserName<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>root<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>javax.jdo.option.ConnectionPassword<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>123456<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>javax.jdo.PersistenceManagerFactoryClass<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>org.datanucleus.api.jdo.JDOPersistenceManagerFactory<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>class implementing the jdo persistence<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.metastore.uris<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>thrift://hengxing:9083<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>另外在这里注意一点，这个文件中的<code>hive.metastore.local</code>配置在0.10 0.11或者之后的hive版本 hive.metastore.local 属性不再使用，请删掉，否则会报如下错误：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">WARN conf.HiveConf: HiveConf of name hive.metastore.local does not exist<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>把jdbc依赖包导入到hive&#x2F;lib下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hengxing@hengxing:/usr/local/hive/lib$ <span class="token function">cp</span> ~/pkg/mysql-connector-java-5.1.49/mysql-connector-java-5.1.49.jar ./<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>初始化hive元数据</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hengxing@hengxing:/usr/local/hive$ ./bin/schematool <span class="token parameter variable">-dbType</span> mysql <span class="token parameter variable">-initSchema</span> root <span class="token number">123456</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>成功后返回</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">SLF4J: Class path contains multiple SLF4J bindings.SLF4J: Found binding <span class="token keyword">in</span> <span class="token punctuation">[</span>jar:file:/usr/local/apache-hive-2.3.7-bin/lib/log4j-slf4j-impl-2.6.2.jar<span class="token operator">!</span>/org/slf4j/impl/StaticLoggerBinder.class<span class="token punctuation">]</span>SLF4J: Found binding <span class="token keyword">in</span> <span class="token punctuation">[</span>jar:file:/usr/local/hadoop-2.7.5/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar<span class="token operator">!</span>/org/slf4j/impl/StaticLoggerBinder.class<span class="token punctuation">]</span>SLF4J: See http://www.slf4j.org/codes.html<span class="token comment">#multiple_bindings for an explanation.</span>SLF4J: Actual binding is of <span class="token builtin class-name">type</span> <span class="token punctuation">[</span>org.apache.logging.slf4j.Log4jLoggerFactory<span class="token punctuation">]</span>Metastore connection URL: jdbc:mysql://localhost:3306/metastore?createDatabaseIfNotExist<span class="token operator">=</span>trueMetastore Connection Driver <span class="token builtin class-name">:</span> com.mysql.jdbc.DriverMetastore connection User: rootStarting metastore schema initialization to <span class="token number">2.3</span>.0Initialization script hive-schema-2.3.0.mysql.sqlInitialization script completedschemaTool completed<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>也可以在MySQL中看到新创建的数据库</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mysql<span class="token operator">></span> show databases<span class="token punctuation">;</span>+--------------------+<span class="token operator">|</span> Database           <span class="token operator">|</span>+--------------------+<span class="token operator">|</span> information_schema <span class="token operator">|</span><span class="token operator">|</span> metastore          <span class="token operator">|</span><span class="token operator">|</span> mysql              <span class="token operator">|</span><span class="token operator">|</span> performance_schema <span class="token operator">|</span><span class="token operator">|</span> sys                <span class="token operator">|</span>+--------------------+<span class="token number">5</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.02</span> sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="启动hive元存储thrift服务器"><a href="#启动hive元存储thrift服务器" class="headerlink" title="启动hive元存储thrift服务器"></a>启动hive元存储thrift服务器</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hengxing@hengxing:~/pkg$ hive <span class="token parameter variable">--service</span> metastore <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">64323</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>hive打开DEBUG模式</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hive <span class="token parameter variable">--hiveconf</span> <span class="token assign-left variable">hive.root.logger</span><span class="token operator">=</span>DEBUG,console<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>为root用户授权</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; grant all privileges on *.* to &#39;root&#39;@&#39;%&#39; identified by &#39;123456&#39; with grant option;mysql&gt; flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>mysql警告</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Wed Mar <span class="token number">30</span> 01:15:25 CST <span class="token number">2022</span> WARN: Establishing SSL connection without server<span class="token string">'s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn'</span>t set. For compliance with existing applications not using SSL the verifyServerCertificate property is <span class="token builtin class-name">set</span> to <span class="token string">'false'</span><span class="token builtin class-name">.</span> You need either to explicitly disable SSL by setting <span class="token assign-left variable">useSSL</span><span class="token operator">=</span>false, or <span class="token builtin class-name">set</span> <span class="token assign-left variable">useSSL</span><span class="token operator">=</span>true and provide truststore <span class="token keyword">for</span> server certificate verification.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这是因为MySQL在高版本需要指明是否进行SSL连接，在mysql连接字符串url中加入ssl&#x3D;true或者false即可</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">jdbc:mysql://127.0.0.1:3306/framework?characterEncoding=utf8<span class="token entity named-entity" title="&amp;">&amp;amp;</span>useSSL=true<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之后可能会报错</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">javax.net.ssl.SSLHandshakeException: java.security.cert.CertPathValidatorException: Path does not chain with any of the trust anchors<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>则可以关掉SSL连接<code>useSSL=false</code></p><h3 id="HIVE无法正常启动，报找不到jdbc的驱动类"><a href="#HIVE无法正常启动，报找不到jdbc的驱动类" class="headerlink" title="HIVE无法正常启动，报找不到jdbc的驱动类"></a>HIVE无法正常启动，报找不到jdbc的驱动类</h3><p>通过启动脚本：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> <span class="token variable">$HIVE_HOME</span>./bin/hive  <span class="token parameter variable">--hiveconf</span> <span class="token assign-left variable">hive.root.logger</span><span class="token operator">=</span>DEBUG,console<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>启动报如下错误：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">16</span>/08/25 <span class="token number">19</span>:06:18 <span class="token punctuation">[</span>main<span class="token punctuation">]</span>: DEBUG bonecp.BoneCPDataSource: JDBC URL <span class="token operator">=</span> jdbc:mysql://slave1:3306/hive?createDatabaseIfNotExist<span class="token operator">=</span>true, Username <span class="token operator">=</span> hive, partitions <span class="token operator">=</span> <span class="token number">1</span>, max <span class="token punctuation">(</span>per partition<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">10</span>, min <span class="token punctuation">(</span>per partition<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>, idle max age <span class="token operator">=</span> <span class="token number">60</span> min, idle <span class="token builtin class-name">test</span> period <span class="token operator">=</span> <span class="token number">240</span> min, strategy <span class="token operator">=</span> DEFAULT<span class="token number">16</span>/08/25 <span class="token number">19</span>:06:19 <span class="token punctuation">[</span>BoneCP-pool-watch-thread<span class="token punctuation">]</span>: ERROR bonecp.BoneCP: Failed to acquire connection to jdbc:mysql://slave1:3306/hive?createDatabaseIfNotExist<span class="token operator">=</span>true. Sleeping <span class="token keyword">for</span> <span class="token number">7000</span> ms. Attempts left: <span class="token number">5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这是报没有找到连接mysql的jdbc驱动，&#x3D;&#x3D;但是实际上$HIVE_HOME&#x2F;lib下已经有mysql的驱动包了&#x3D;&#x3D;</p><p>说明驱动包没有问题，经过百度后发现是配置文件$HIVE_HOME&#x2F;conf&#x2F;hive-site.xml内配置有问题：</p><blockquote><p>原因是配置文件中的<value></value>中的内容必须在同一行上且不能有空格，即不能包含换行符和空格，否则就会出错，请检查其它的配置是否还在存在这类问题。</p></blockquote><p>上一个问题解决了，接着又报下面的错误</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">FAILED: Execution Error, <span class="token builtin class-name">return</span> code <span class="token number">1</span> from org.apache.hadoop.hive.ql.exec.DDLTask. MetaException<span class="token punctuation">(</span>message:Got exception: java.net.ConnectException Call From hengxing/192.168.59.140 to localhost:9000 failed on connection exception: java.net.ConnectException: Connection refused<span class="token punctuation">;</span> For <span class="token function">more</span> details see:  http://wiki.apache.org/hadoop/ConnectionRefused<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>网上查相关资料的话，会说这是因为hdfs的datanode没启动，但我的明显不是这样，仔细看报错，他说<code>From hengxing/192.168.59.140 to localhost:9000</code>的连接失败，<code>localhost:9000</code>可用吗？我们telnet一下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hengxing@hengxing:/usr/local/hadoop/etc/hadoop$ telnet localhost <span class="token number">9000</span>Trying <span class="token number">127.0</span>.0.1<span class="token punctuation">..</span>.telnet: Unable to connect to remote host: Connection refused<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>并不行，仔细想想这是哪里的配置，哦，是元数据服务的地址。我应该设置的是hdfs的地址，hdfs的地址又是什么呢？看看你Hadoop的webUI</p><p><img src="https://s2.loli.net/2022/03/30/dehg6lTj8X2GbDO.png" alt="image-20220330165909687"></p><p>是<code>hengxing:9000</code>，telnet一下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hengxing@hengxing:/usr/local/hadoop/etc/hadoop$ telnet hengxing <span class="token number">9000</span>Trying <span class="token number">192.168</span>.59.140<span class="token punctuation">..</span>.Connected to hengxing.Escape character is <span class="token string">'^]'</span><span class="token builtin class-name">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>你看，hdfs是启动的，把hive-site.xml中的<code>hive.metastore.warehouse.dir</code>配置变成这个地址吧</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.metastore.warehouse.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hdfs://hengxing:9000/user/hengxing/warehouse<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>location of default database for the warehouse<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但是，问题来了，按理说这两个地址都是我当前的本机啊，并没有本质的区别，可是别忘记，这是两张不同的网卡，你用ifconfig看一下</p><p><img src="https://s2.loli.net/2022/03/30/uaxs4mFhE8YSlbW.png" alt="image-20220330170822427"></p><p>明白了吧，网卡不同，它所在的端口也就不同。</p><h2 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h2><p>在hive中创建一个数据库，用来存放你系统的数据</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">hive&gt; create database ecommerce;OKTime taken: 0.099 secondshive&gt; show databases;OKdefaultecommerceTime taken: 0.031 seconds, Fetched: 2 row(s)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在MySQL中建数据库，存放原始数据，这里的数据是假设由真实数据导入的，作为业务最初始的数据集。</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; create database ecommerce charset&#x3D;utf8;Query OK, 1 row affected (0.01 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="表设计"><a href="#表设计" class="headerlink" title="表设计"></a>表设计</h3><p>这些数据内容，主要可以分为：用户信息，商品信息，订单信息，运营相关信息，服务相关信息五大类，我们后续可以根据这个标准做标签建模。</p><ul><li>用户信息表（t_member）</li><li>用户地址表（t_member_addr）</li><li>商品信息表（t_commodity）</li><li>商品类别信息表（t_commodity_cate）</li><li>订单表（t_order）</li><li>订单商品表（t_order_commodity）</li><li>优惠券表（t_coupon）</li><li>用户优惠券表（t_coupon_member）</li><li>订单优惠券表（t_coupon_order）</li><li>快递表（t_delivery）</li><li>反馈表（t_feedback）</li><li>商店表（t_shop）</li><li>商家订单表（t_shop_order，订单对于卖家也有记录）</li><li>后台用户表（t_user，员工表）</li></ul><p>要打开mysql远程连接</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hengxing@hengxing:/etc/mysql/mysql.conf.d$ <span class="token function">vim</span> mysqld.cnf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>找到bind-address &#x3D; 127.0.0.1这一行<br>        改为bind-address &#x3D; 0.0.0.0即可</p><p>把ddl文件拖进navicat执行</p><img src="https://s2.loli.net/2022/03/30/o2aDupv3lzPebNS.png" alt="image-20220330184253874" style="zoom: 67%;" /><img src="https://s2.loli.net/2022/03/30/AdHDMq1RiNSP9sJ.png" alt="image-20220330184331847" style="zoom:67%;" /><p>一共14张表</p><h3 id="配置sqoop做数据迁移"><a href="#配置sqoop做数据迁移" class="headerlink" title="配置sqoop做数据迁移"></a>配置sqoop做数据迁移</h3><p>解压sqoop安装包</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hengxing@hengxing:~/pkg$ <span class="token function">sudo</span> <span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> sqoop-1.4.7.bin__hadoop-2.6.0.tar.gz <span class="token parameter variable">-C</span> /usr/local<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>为sqoop添加软连接（可选）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hengxing@hengxing:/usr/local$ <span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-snf</span> sqoop-1.4.7.bin__hadoop-2.6.0/ sqoop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>添加mysql的连接器jar包</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hengxing@hengxing:~/pkg/mysql-connector-java-5.1.49$ <span class="token function">cp</span> mysql-connector-java-5.1.49-bin.jar /usr/local/sqoop-1.4.7.bin__hadoop-2.6.0/lib/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>另外注意，还应该把hive-site.xml拷贝到sqoop&#x2F;conf下面</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hengxing@hengxing:/usr/local/sqoop$ <span class="token function">cp</span> /usr/local/hive/conf/hive-site.xml conf/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>添加环境变量，便于以后执行命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#sqoop</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">SQOOP_HOME</span><span class="token operator">=</span>/usr/local/sqoop<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$SQOOP_HOME</span>/bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>修改配置文件，加入hive的环境变量：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hengxing@hengxing:/usr/local/sqoop/conf$ <span class="token function">mv</span> sqoop-env-template.sh sqoop-env.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>写入如下内容</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">HIVE_HOME</span><span class="token operator">=</span>/usr/local/hive<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上传<code>datamigrate.sh</code>脚本，检查脚本是否有错误，执行，脚本内容在后</p><pre class="line-numbers language-none"><code class="language-none">sudo apt-get install dos2unix #下载dos转unix工具hengxing@hengxing:~&#x2F;profile_tool$ dos2unix datamigrate.sh dos2unix: converting file datamigrate.sh to Unix format ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token function-name function">sq</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>sqoop <span class="token function">import</span> <span class="token punctuation">\</span><span class="token parameter variable">--connect</span> jdbc:mysql://localhost:3306/ecommerce <span class="token punctuation">\</span><span class="token parameter variable">--username</span> root <span class="token punctuation">\</span><span class="token parameter variable">--password</span> <span class="token number">123456</span> <span class="token punctuation">\</span><span class="token parameter variable">--table</span> <span class="token variable">$1</span> <span class="token punctuation">\</span>--num-mappers <span class="token number">1</span> <span class="token punctuation">\</span>--hive-import <span class="token punctuation">\</span>--fields-terminated-by <span class="token string">"<span class="token entity" title="\t">\t</span>"</span> <span class="token punctuation">\</span>--hive-overwrite <span class="token punctuation">\</span>--hive-database ecommerce <span class="token punctuation">\</span>--hive-table <span class="token variable">$1</span><span class="token punctuation">&#125;</span>sq t_commoditysq t_commodity_catesq t_couponsq t_coupon_membersq t_coupon_ordersq t_deliverysq t_feedbacksq t_membersq t_member_addrsq t_ordersq t_order_commoditysq t_shopsq t_shop_ordersq t_user<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="yarn-杀死-application-命令"><a href="#yarn-杀死-application-命令" class="headerlink" title="yarn 杀死 application 命令"></a>yarn 杀死 application 命令</h4><p><img src="https://s2.loli.net/2022/03/30/rEjN8LHM2iwocUJ.png" alt="image-20220330211003135"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> application <span class="token parameter variable">-kill</span> application_1648627463824_0001<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>即可杀死</p><h4 id="hive没有找到类HiveConf"><a href="#hive没有找到类HiveConf" class="headerlink" title="hive没有找到类HiveConf"></a>hive没有找到类HiveConf</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">22</span>/03/31 <span class="token number">14</span>:30:23 ERROR hive.HiveConfig: Could not load org.apache.hadoop.hive.conf.HiveConf. Make sure HIVE_CONF_DIR is <span class="token builtin class-name">set</span> correctly.<span class="token number">22</span>/03/31 <span class="token number">14</span>:30:23 ERROR tool.ImportTool: Import failed: java.io.IOException: java.lang.ClassNotFoundException: org.apache.hadoop.hive.conf.HiveConf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>我们先看hive命令中有没有这个类</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hengxing@hengxing:/usr/local/hive/lib$ jar tf hive-common-2.3.7.jar <span class="token operator">|</span> <span class="token function">grep</span> HiveConf.classorg/apache/hadoop/hive/conf/HiveConf.class<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>有，只是没找到。所以我设置了下面的环境变量，注意是在<code>/etc/profile</code>下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">HIVE_CONF_DIR</span><span class="token operator">=</span><span class="token variable">$HIVE_HOME</span>/conf<span class="token builtin class-name">export</span> <span class="token assign-left variable">HADOOP_CLASSPATH</span><span class="token operator">=</span><span class="token variable">$HADOOP_CLASSPATH</span><span class="token builtin class-name">:</span><span class="token variable">$HIVE_HOME</span>/lib/*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>但是并没有什么卵用，网上还推荐了一步，将hive 里面的lib下的<code>hive-exec-**.jar</code> 放到sqoop 的lib 下，最后成功了。</p><h2 id="ES安装"><a href="#ES安装" class="headerlink" title="ES安装"></a>ES安装</h2><h3 id="下载、安装、配置"><a href="#下载、安装、配置" class="headerlink" title="下载、安装、配置"></a>下载、安装、配置</h3><p>地址:<a href="https://www.elastic.co/cn/downloads/past-releases/elasticsearch-6-8-5">https://www.elastic.co/cn/downloads/past-releases/elasticsearch-6-8-5</a></p><p>下载后，上传并解压</p><p>把es放到&#x2F;usr&#x2F;local下，并创建软连接</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-snf</span> elasticsearch-6.8.5/ es<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改配置文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hengxing@hengxing:/usr/local/es$ <span class="token builtin class-name">cd</span> config/hengxing@hengxing:/usr/local/es/config$ <span class="token function">ls</span>elasticsearch.yml  log4j2.properties  roles.yml  users_rolesjvm.options        role_mapping.yml   <span class="token function">users</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>修改elasticsearch.yml</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#-----集群名称------</span>cluster.name: hengxing<span class="token comment"># ------- Node名称 -----------</span><span class="token comment"># Use a descriptive name for the node:</span>node.name: hengxing_node1<span class="token comment"># ------------- Paths ---------------</span><span class="token comment"># Path to directory where to store the data (separate multiple locations by comma):</span>path.data: /home/hengxing/data/esdata/data<span class="token comment"># Path to log files:</span>path.logs: /home/hengxing/data/esdata/logs<span class="token comment"># ------------------ Network -------------------</span><span class="token comment"># Set the bind address to a specific IP (IPv4 or IPv6):0.0.0.0是允许所有IP访问</span>network.host: <span class="token number">0.0</span>.0.0<span class="token comment"># Set a custom port for HTTP:</span>http.port: <span class="token number">9200</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改jvm.options</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## You should always set the min and max JVM heap</span><span class="token comment">## size to the same value. For example, to set</span><span class="token comment">## the heap to 4 GB, set:</span><span class="token comment">##</span><span class="token parameter variable">-Xms1g</span><span class="token parameter variable">-Xmx1g</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="启动命令"><a href="#启动命令" class="headerlink" title="启动命令"></a>启动命令</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/usr/local/es/bin/elasticsearch <span class="token operator">&amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>访问地址<a href="http://hengxing:9200/%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0">http://hengxing:9200/，可以看到</a></p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"hengxing_node1"</span><span class="token punctuation">,</span>  <span class="token property">"cluster_name"</span> <span class="token operator">:</span> <span class="token string">"hengxing"</span><span class="token punctuation">,</span>  <span class="token property">"cluster_uuid"</span> <span class="token operator">:</span> <span class="token string">"NnCvOW_LRLmTKrdApgxWRw"</span><span class="token punctuation">,</span>  <span class="token property">"version"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"number"</span> <span class="token operator">:</span> <span class="token string">"6.8.5"</span><span class="token punctuation">,</span>    <span class="token property">"build_flavor"</span> <span class="token operator">:</span> <span class="token string">"default"</span><span class="token punctuation">,</span>    <span class="token property">"build_type"</span> <span class="token operator">:</span> <span class="token string">"tar"</span><span class="token punctuation">,</span>    <span class="token property">"build_hash"</span> <span class="token operator">:</span> <span class="token string">"78990e9"</span><span class="token punctuation">,</span>    <span class="token property">"build_date"</span> <span class="token operator">:</span> <span class="token string">"2019-11-13T20:04:24.100411Z"</span><span class="token punctuation">,</span>    <span class="token property">"build_snapshot"</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token property">"lucene_version"</span> <span class="token operator">:</span> <span class="token string">"7.7.2"</span><span class="token punctuation">,</span>    <span class="token property">"minimum_wire_compatibility_version"</span> <span class="token operator">:</span> <span class="token string">"5.6.0"</span><span class="token punctuation">,</span>    <span class="token property">"minimum_index_compatibility_version"</span> <span class="token operator">:</span> <span class="token string">"5.0.0"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"tagline"</span> <span class="token operator">:</span> <span class="token string">"You Know, for Search"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h3><p>[报错]max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [655360]</p><p>sudo vim &#x2F;etc&#x2F;sysctl.conf</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">vm.max_map_count</span><span class="token operator">=</span><span class="token number">655360</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再执行<code>sysctl -p</code>即可</p><p>启动成功后可以访问</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"hengxing_node1"</span><span class="token punctuation">,</span>  <span class="token property">"cluster_name"</span> <span class="token operator">:</span> <span class="token string">"hengxing"</span><span class="token punctuation">,</span>  <span class="token property">"cluster_uuid"</span> <span class="token operator">:</span> <span class="token string">"NnCvOW_LRLmTKrdApgxWRw"</span><span class="token punctuation">,</span>  <span class="token property">"version"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"number"</span> <span class="token operator">:</span> <span class="token string">"6.8.5"</span><span class="token punctuation">,</span>    <span class="token property">"build_flavor"</span> <span class="token operator">:</span> <span class="token string">"default"</span><span class="token punctuation">,</span>    <span class="token property">"build_type"</span> <span class="token operator">:</span> <span class="token string">"tar"</span><span class="token punctuation">,</span>    <span class="token property">"build_hash"</span> <span class="token operator">:</span> <span class="token string">"78990e9"</span><span class="token punctuation">,</span>    <span class="token property">"build_date"</span> <span class="token operator">:</span> <span class="token string">"2019-11-13T20:04:24.100411Z"</span><span class="token punctuation">,</span>    <span class="token property">"build_snapshot"</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token property">"lucene_version"</span> <span class="token operator">:</span> <span class="token string">"7.7.2"</span><span class="token punctuation">,</span>    <span class="token property">"minimum_wire_compatibility_version"</span> <span class="token operator">:</span> <span class="token string">"5.6.0"</span><span class="token punctuation">,</span>    <span class="token property">"minimum_index_compatibility_version"</span> <span class="token operator">:</span> <span class="token string">"5.0.0"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"tagline"</span> <span class="token operator">:</span> <span class="token string">"You Know, for Search"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="kibana安装"><a href="#kibana安装" class="headerlink" title="kibana安装"></a>kibana安装</h2><h3 id="下载、安装、配置-1"><a href="#下载、安装、配置-1" class="headerlink" title="下载、安装、配置"></a>下载、安装、配置</h3><p>【下载地址】<a href="https://www.elastic.co/cn/downloads/past-releases/kibana-6-8-5">https://www.elastic.co/cn/downloads/past-releases/kibana-6-8-5</a></p><p>老一套，接着去改配置</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">server.host: <span class="token string">"hengxing"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>启动</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/usr/local/kibana/bin/kibana <span class="token operator">&amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>报错</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cause: undefined, path: <span class="token punctuation">[</span> <span class="token string">'basePath'</span> <span class="token punctuation">]</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> FATAL  Error: <span class="token punctuation">[</span>server.basePath<span class="token punctuation">]</span>: must start with a slash, don't end with one<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这是因为写了basepath，并且报错写的很明显了。在这里可以注释掉</p><h3 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h3><p>在DevTools中 <code>PUT /usertag</code></p><p>再去Dashboard中的Index Management中就可以看到这个查询</p><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><p>为了试验，我们添加一个查询<code>PUT /user</code>，然后添加一条数据</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">POST /user/_doc/<span class="token number">1</span><span class="token punctuation">&#123;</span>  <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"Tifa"</span><span class="token punctuation">,</span>  <span class="token property">"age"</span><span class="token operator">:</span><span class="token number">17</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>能在控制台得到反馈</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"_index"</span> <span class="token operator">:</span> <span class="token string">"user"</span><span class="token punctuation">,</span>  <span class="token property">"_type"</span> <span class="token operator">:</span> <span class="token string">"_doc"</span><span class="token punctuation">,</span>  <span class="token property">"_id"</span> <span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>  <span class="token property">"_version"</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token property">"result"</span> <span class="token operator">:</span> <span class="token string">"created"</span><span class="token punctuation">,</span>  <span class="token property">"_shards"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"total"</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>    <span class="token property">"successful"</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    <span class="token property">"failed"</span> <span class="token operator">:</span> <span class="token number">0</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"_seq_no"</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token property">"_primary_term"</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对这用户数据进行查询<code>GET /user/_search</code>，可以得到用户数据</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"took"</span> <span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>  <span class="token property">"timed_out"</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>  <span class="token property">"_shards"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"total"</span> <span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>    <span class="token property">"successful"</span> <span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>    <span class="token property">"skipped"</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token property">"failed"</span> <span class="token operator">:</span> <span class="token number">0</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"hits"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"total"</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    <span class="token property">"max_score"</span> <span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>    <span class="token property">"hits"</span> <span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        <span class="token property">"_index"</span> <span class="token operator">:</span> <span class="token string">"user"</span><span class="token punctuation">,</span>        <span class="token property">"_type"</span> <span class="token operator">:</span> <span class="token string">"_doc"</span><span class="token punctuation">,</span>        <span class="token property">"_id"</span> <span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>        <span class="token property">"_score"</span> <span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>        <span class="token property">"_source"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"Tifa"</span><span class="token punctuation">,</span>          <span class="token property">"age"</span> <span class="token operator">:</span> <span class="token number">17</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>若要进行条件查询，附加条件即可，不过我们还要多加两条数据，还是按照刚才的post方法</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>      <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"Cloud"</span><span class="token punctuation">,</span>      <span class="token property">"age"</span> <span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>      <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"Tifa"</span><span class="token punctuation">,</span>      <span class="token property">"age"</span> <span class="token operator">:</span> <span class="token number">17</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>      <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"Aurith"</span><span class="token punctuation">,</span>      <span class="token property">"age"</span> <span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li><p>查询名字为Cloud<strong>或</strong>年龄大于18小于20岁的</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">GET /user/_search<span class="token punctuation">&#123;</span>  <span class="token property">"query"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token property">"bool"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"should"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        <span class="token property">"match"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Cloud"</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        <span class="token property">"range"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"age"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"gte"</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>            <span class="token property">"lte"</span><span class="token operator">:</span> <span class="token number">20</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"took"</span> <span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>  <span class="token property">"timed_out"</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>  <span class="token property">"_shards"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"total"</span> <span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>    <span class="token property">"successful"</span> <span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>    <span class="token property">"skipped"</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token property">"failed"</span> <span class="token operator">:</span> <span class="token number">0</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"hits"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"total"</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>    <span class="token property">"max_score"</span> <span class="token operator">:</span> <span class="token number">1.287682</span><span class="token punctuation">,</span>    <span class="token property">"hits"</span> <span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        <span class="token property">"_index"</span> <span class="token operator">:</span> <span class="token string">"user"</span><span class="token punctuation">,</span>        <span class="token property">"_type"</span> <span class="token operator">:</span> <span class="token string">"_doc"</span><span class="token punctuation">,</span>        <span class="token property">"_id"</span> <span class="token operator">:</span> <span class="token string">"2"</span><span class="token punctuation">,</span>        <span class="token property">"_score"</span> <span class="token operator">:</span> <span class="token number">1.287682</span><span class="token punctuation">,</span>        <span class="token property">"_source"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"Cloud"</span><span class="token punctuation">,</span>          <span class="token property">"age"</span> <span class="token operator">:</span> <span class="token number">20</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        <span class="token property">"_index"</span> <span class="token operator">:</span> <span class="token string">"user"</span><span class="token punctuation">,</span>        <span class="token property">"_type"</span> <span class="token operator">:</span> <span class="token string">"_doc"</span><span class="token punctuation">,</span>        <span class="token property">"_id"</span> <span class="token operator">:</span> <span class="token string">"3"</span><span class="token punctuation">,</span>        <span class="token property">"_score"</span> <span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>        <span class="token property">"_source"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"Aurith"</span><span class="token punctuation">,</span>          <span class="token property">"age"</span> <span class="token operator">:</span> <span class="token number">18</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>查询名字为Cloud<strong>且</strong>年龄大于18小于20岁的</p><p>结果：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"took"</span> <span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>  <span class="token property">"timed_out"</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>  <span class="token property">"_shards"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"total"</span> <span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>    <span class="token property">"successful"</span> <span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>    <span class="token property">"skipped"</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token property">"failed"</span> <span class="token operator">:</span> <span class="token number">0</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"hits"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"total"</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    <span class="token property">"max_score"</span> <span class="token operator">:</span> <span class="token number">1.287682</span><span class="token punctuation">,</span>    <span class="token property">"hits"</span> <span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        <span class="token property">"_index"</span> <span class="token operator">:</span> <span class="token string">"user"</span><span class="token punctuation">,</span>        <span class="token property">"_type"</span> <span class="token operator">:</span> <span class="token string">"_doc"</span><span class="token punctuation">,</span>        <span class="token property">"_id"</span> <span class="token operator">:</span> <span class="token string">"2"</span><span class="token punctuation">,</span>        <span class="token property">"_score"</span> <span class="token operator">:</span> <span class="token number">1.287682</span><span class="token punctuation">,</span>        <span class="token property">"_source"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"Cloud"</span><span class="token punctuation">,</span>          <span class="token property">"age"</span> <span class="token operator">:</span> <span class="token number">20</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h1 id="项目架构和工具类"><a href="#项目架构和工具类" class="headerlink" title="项目架构和工具类"></a>项目架构和工具类</h1><h2 id="IDEA项目"><a href="#IDEA项目" class="headerlink" title="IDEA项目"></a>IDEA项目</h2><p>新建Maven项目，参数如下：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">GroupId：com.hengxingArtifactid：EcommerceUserProfile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>依赖文件POM，及版本信息</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--定义版本信息--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spark.version</span><span class="token punctuation">></span></span>2.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spark.version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scala.version</span><span class="token punctuation">></span></span>2.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scala.version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>springboot.version</span><span class="token punctuation">></span></span>2.2.0.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>springboot.version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>elasticsearch.version</span><span class="token punctuation">></span></span>6.8.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>elasticsearch.version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lombok.version</span><span class="token punctuation">></span></span>1.18.10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lombok.version</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--自动生成getter/setter等方法，为配合此依赖还需安装插件lombok--></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fastjson.version</span><span class="token punctuation">></span></span>1.2.59<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fastjson.version</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--json转换器--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--spring boot 相关依赖--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;springboot.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-thymeleaf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;springboot.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-data-elasticsearch<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;springboot.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-devtools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>runtime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;springboot.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--spark 相关依赖，需要core、sql和hive--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.spark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spark-core_$&#123;scala.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;spark.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.spark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spark-sql_$&#123;scala.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;spark.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.spark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spark-hive_$&#123;scala.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;spark.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;lombok.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>fastjson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;fastjson.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.elasticsearch<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>elasticsearch-hadoop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;elasticsearch.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.elasticsearch<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>elasticsearch<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;elasticsearch.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- Java High Level REST Client --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.elasticsearch.client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>elasticsearch-rest-high-level-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;elasticsearch.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profiles</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--开发环境--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>dev<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build.profile.id</span><span class="token punctuation">></span></span>dev<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build.profile.id</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activation</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeByDefault</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeByDefault</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- 此标签可以切换生产环境和开发环境 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activation</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--生产环境--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>prod<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build.profile.id</span><span class="token punctuation">></span></span>prod<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build.profile.id</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profiles</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--用resource定义打包时的资源文件--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- 过滤其中的配置，符合条件的使用maven配置将其覆盖 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>excludes</span><span class="token punctuation">></span></span>                <span class="token comment">&lt;!--除了这里声明的配置，其他的都可以被maven默认的配置覆盖--></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">></span></span>application-*.properties<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>excludes</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">></span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>application-$&#123;build.profile.id&#125;.properties<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>安装lombok插件</p><p><img src="https://s2.loli.net/2022/03/31/kbnKUB7RZyXJVrE.png" alt="image-20220331210805710"></p><p>设置远程连接，将服务器中hive的<code>hive-site.xml</code>文件拷贝至resources文件夹下</p><h2 id="编写类文件"><a href="#编写类文件" class="headerlink" title="编写类文件"></a>编写类文件</h2><h3 id="个人标签展示"><a href="#个人标签展示" class="headerlink" title="个人标签展示"></a>个人标签展示</h3><p>编写用户标签提取的文件，分成两种，一种是平台用户标签，另一种是个人用户标签提取，分别写两个包</p><p>SparkUtil.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>hengxing<span class="token punctuation">.</span>ecommerceuserprofile<span class="token punctuation">.</span>utils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">SparkSession</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SparkUtils</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//定义一个Spark Session的会话池</span>    <span class="token keyword">private</span>  <span class="token keyword">static</span>  <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SparkSession</span><span class="token punctuation">></span></span> sessionPool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//初始化spark session的方法</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">SparkSession</span> <span class="token function">initSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//先判断会话池中是否由session，如果有，直接用，没就创建</span>        <span class="token keyword">if</span><span class="token punctuation">(</span> sessionPool<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> sessionPool<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"hadoop.home.dir"</span><span class="token punctuation">,</span><span class="token string">"C:\\tmp\\hadoop"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">SparkSession</span> session <span class="token operator">=</span> <span class="token class-name">SparkSession</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">appName</span><span class="token punctuation">(</span><span class="token string">"UserProfile-etl"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">master</span><span class="token punctuation">(</span><span class="token string">"local[*]"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token string">"es.nodes"</span><span class="token punctuation">,</span><span class="token string">"hengxing"</span><span class="token punctuation">)</span>  <span class="token comment">//elasticsearch的节点</span>                <span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token string">"es.port"</span><span class="token punctuation">,</span><span class="token string">"9200"</span><span class="token punctuation">)</span>   <span class="token comment">//elasticsearch的端口</span>                <span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token string">"ex.index.auto.create"</span><span class="token punctuation">,</span><span class="token string">"false"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">enableHiveSupport</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">//启用hive支持</span>                <span class="token punctuation">.</span><span class="token function">getOrCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sessionPool<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> session<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>memberEtl.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>hengxing<span class="token punctuation">.</span>ecommerceuserprofile<span class="token punctuation">.</span>etls<span class="token punctuation">.</span>platform</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span></span><span class="token class-name">JSON</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>hengxing<span class="token punctuation">.</span>ecommerceuserprofile<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">SparkUtils</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Dataset</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Row</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">SparkSession</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token class-name">Collectors</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MemberEtl</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"hadoop.home.dir"</span><span class="token punctuation">,</span><span class="token string">"C:\\tmp\\hadoop"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//初始化一个sparksession</span>        <span class="token class-name">SparkSession</span> session <span class="token operator">=</span> <span class="token class-name">SparkUtils</span><span class="token punctuation">.</span><span class="token function">initSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        写sql查询想要的数据</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberSex</span><span class="token punctuation">></span></span> memberSexes <span class="token operator">=</span> <span class="token function">memberSexEtl</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberChannel</span><span class="token punctuation">></span></span> memberChannels <span class="token operator">=</span> <span class="token function">memberChannelEtl</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberMpSub</span><span class="token punctuation">></span></span> memberMpSubs <span class="token operator">=</span> <span class="token function">memberMpSubEtl</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">MemberHeat</span> memberHeat <span class="token operator">=</span> <span class="token function">memberHeatEtl</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        拼成想要展示的结果，给前端</span>        <span class="token class-name">MemberVo</span> memberVo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MemberVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        memberVo<span class="token punctuation">.</span><span class="token function">setMemberSexes</span><span class="token punctuation">(</span>memberSexes<span class="token punctuation">)</span><span class="token punctuation">;</span>        memberVo<span class="token punctuation">.</span><span class="token function">setMemberChannels</span><span class="token punctuation">(</span>memberChannels<span class="token punctuation">)</span><span class="token punctuation">;</span>        memberVo<span class="token punctuation">.</span><span class="token function">setMemberMpSubs</span><span class="token punctuation">(</span>memberMpSubs<span class="token punctuation">)</span><span class="token punctuation">;</span>        memberVo<span class="token punctuation">.</span><span class="token function">setMemberHeat</span><span class="token punctuation">(</span>memberHeat<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//控制台打印</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"=====ETL数据来啦=====\n"</span> <span class="token operator">+</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>memberVo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//统计平台用户性别分布</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberSex</span><span class="token punctuation">></span></span> <span class="token function">memberSexEtl</span><span class="token punctuation">(</span><span class="token class-name">SparkSession</span> session<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//写sql，查询得到一个dataset</span>        <span class="token class-name">Dataset</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span><span class="token punctuation">></span></span> dataset <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">sql</span><span class="token punctuation">(</span><span class="token string">"select sex as memberSex, count(id) as sexCount "</span> <span class="token operator">+</span>                <span class="token string">"from ecommerce.t_member group by sex"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//先将dataset转成list</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> list <span class="token operator">=</span> dataset<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collectAsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//将list转成流，进行每一行数据的遍历，转成memberSex</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberSex</span><span class="token punctuation">></span></span> result <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>str <span class="token operator">-></span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token class-name">MemberSex</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//用户注册渠道的分布统计</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberChannel</span><span class="token punctuation">></span></span> <span class="token function">memberChannelEtl</span><span class="token punctuation">(</span><span class="token class-name">SparkSession</span> session<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Dataset</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span><span class="token punctuation">></span></span> dataset <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">sql</span><span class="token punctuation">(</span>                <span class="token string">"select member_channel as memberChannel, count(id) as channelCount "</span> <span class="token operator">+</span>                        <span class="token string">" from ecommerce.t_member group by member_channel"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> list <span class="token operator">=</span> dataset<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collectAsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberChannel</span><span class="token punctuation">></span></span> result <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>str <span class="token operator">-></span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token class-name">MemberChannel</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*    * sql中if()的用法    * if(&lt;筛选条件>,&lt;匹配时返回>,&lt;不匹配时返回>)    * */</span>    <span class="token comment">//媒体平台关注分布统计</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberMpSub</span><span class="token punctuation">></span></span> <span class="token function">memberMpSubEtl</span><span class="token punctuation">(</span><span class="token class-name">SparkSession</span> session<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Dataset</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span><span class="token punctuation">></span></span> sub <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">sql</span><span class="token punctuation">(</span>                <span class="token string">"select count(if(mp_open_id !='null',true,null)) as subCount, "</span> <span class="token operator">+</span>                        <span class="token string">" count(if(mp_open_id ='null',true,null)) as unSubCount "</span> <span class="token operator">+</span>                        <span class="token string">" from ecommerce.t_member"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> list <span class="token operator">=</span> sub<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collectAsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberMpSub</span><span class="token punctuation">></span></span> result <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>str <span class="token operator">-></span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token class-name">MemberMpSub</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//平台用户热度分布统计</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">MemberHeat</span> <span class="token function">memberHeatEtl</span><span class="token punctuation">(</span><span class="token class-name">SparkSession</span> session<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//reg，complete从用户表中提取</span>        <span class="token class-name">Dataset</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span><span class="token punctuation">></span></span> reg_complete_count <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">sql</span><span class="token punctuation">(</span>                <span class="token string">"select count(if(phone = 'null',true,null)) as reg,"</span> <span class="token operator">+</span>                <span class="token string">" count(if(phone != 'null',true,null)) as complete"</span> <span class="token operator">+</span>                <span class="token string">" from ecommerce.t_member"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//order, orderAgain从订单表中提取</span>        <span class="token class-name">Dataset</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span><span class="token punctuation">></span></span> order_andAgain_count <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">sql</span><span class="token punctuation">(</span><span class="token string">"select"</span> <span class="token operator">+</span>                <span class="token string">" count(if(t.orderCount = 1,true,null)) as order,"</span> <span class="token operator">+</span>                <span class="token string">" count(if(t.orderCount >= 2,true,null)) as orderAgain"</span> <span class="token operator">+</span>                <span class="token string">" from (select count(order_id) as orderCount, member_id from ecommerce.t_order group by member_id) as t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//coupon,买了消费券人数，从t_coupon_member表提取，对member_id进行去重，然后count</span>        <span class="token class-name">Dataset</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span><span class="token punctuation">></span></span> coupon_count <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">sql</span><span class="token punctuation">(</span><span class="token string">"select"</span> <span class="token operator">+</span>                <span class="token string">" count(distinct member_id) as coupon from ecommerce.t_coupon_member "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//最终合并</span>        <span class="token class-name">Dataset</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span><span class="token punctuation">></span></span> heat <span class="token operator">=</span> coupon_count<span class="token punctuation">.</span><span class="token function">crossJoin</span><span class="token punctuation">(</span>reg_complete_count<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">crossJoin</span><span class="token punctuation">(</span>order_andAgain_count<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//先将dataset转成list</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> list <span class="token operator">=</span> heat<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collectAsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//这一次我们只有一条数据，取出第一个就可以了，这里是为了复用代码</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberHeat</span><span class="token punctuation">></span></span> result <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>str <span class="token operator">-></span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token class-name">MemberHeat</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//    定义一个最终想要生成的ViewObject，用来展示饼图</span>    <span class="token annotation punctuation">@Data</span>    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MemberVo</span><span class="token punctuation">&#123;</span>        <span class="token comment">//由四部分构成</span>        <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberSex</span><span class="token punctuation">></span></span> memberSexes<span class="token punctuation">;</span>    <span class="token comment">//性别统计信息</span>        <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberChannel</span><span class="token punctuation">></span></span> memberChannels<span class="token punctuation">;</span> <span class="token comment">//渠道统计信息</span>        <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberMpSub</span><span class="token punctuation">></span></span> memberMpSubs<span class="token punctuation">;</span> <span class="token comment">//是否关注媒体平台统计</span>        <span class="token keyword">private</span> <span class="token class-name">MemberHeat</span> memberHeat<span class="token punctuation">;</span>  <span class="token comment">//用户热度统计</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Data</span>    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MemberSex</span><span class="token punctuation">&#123;</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> memberSex<span class="token punctuation">;</span><span class="token comment">//性别编号</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> sexCount<span class="token punctuation">;</span>   <span class="token comment">//当前性别的count数量</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Data</span>    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MemberChannel</span><span class="token punctuation">&#123;</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> memberChannel<span class="token punctuation">;</span>      <span class="token comment">//渠道编号</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> channelCount<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Data</span>    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MemberMpSub</span><span class="token punctuation">&#123;</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> subCount<span class="token punctuation">;</span>   <span class="token comment">//已关注的用户统计数</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> unSubCount<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Data</span>    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MemberHeat</span><span class="token punctuation">&#123;</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> reg<span class="token punctuation">;</span>        <span class="token comment">//只注册未填手机号的用户</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> complete<span class="token punctuation">;</span>   <span class="token comment">//填了手机号的</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> order<span class="token punctuation">;</span>    <span class="token comment">//下过单</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> orderAgain<span class="token punctuation">;</span> <span class="token comment">//多次下单</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> coupon<span class="token punctuation">;</span>     <span class="token comment">//买过消费券的用户统计数</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>正确配置环境并使用，需要以下几个条件：</p><blockquote><p>1、打开hive、spark、Hadoop以及hive元数据服务</p><p>2、在resource下放hive-site.xml</p><p>3、配置hive on spark</p><p>4、打开hive支持</p></blockquote><h4 id="报错-1"><a href="#报错-1" class="headerlink" title="报错"></a>报错</h4><h5 id="Caused-by-java-lang-NullPointerException"><a href="#Caused-by-java-lang-NullPointerException" class="headerlink" title="Caused by: java.lang.NullPointerException"></a>Caused by: java.lang.NullPointerException</h5><p>编写完文件后连接测试</p><p>报错</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">22</span>:30:37.257 <span class="token punctuation">[</span>main<span class="token punctuation">]</span> WARN hive.ql.metadata.Hive - Failed to access metastore. This class should not accessed <span class="token keyword">in</span> runtime.org.apache.hadoop.hive.ql.metadata.HiveException: java.lang.RuntimeException: Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClientat Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClientCaused by: java.lang.reflect.InvocationTargetException: null<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这是完整的：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">00:02:42.923 <span class="token punctuation">[</span>main<span class="token punctuation">]</span> WARN hive.ql.metadata.Hive - Failed to access metastore. This class should not accessed <span class="token keyword">in</span> runtime.org.apache.hadoop.hive.ql.metadata.HiveException: java.lang.RuntimeException: Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClientat org.apache.hadoop.hive.ql.metadata.Hive.getAllDatabases<span class="token punctuation">(</span>Hive.java:1236<span class="token punctuation">)</span>at org.apache.hadoop.hive.ql.metadata.Hive.reloadFunctions<span class="token punctuation">(</span>Hive.java:174<span class="token punctuation">)</span>at org.apache.hadoop.hive.ql.metadata.Hive.<span class="token operator">&lt;</span>clinit<span class="token operator">></span><span class="token punctuation">(</span>Hive.java:166<span class="token punctuation">)</span>at org.apache.hadoop.hive.ql.session.SessionState.start<span class="token punctuation">(</span>SessionState.java:503<span class="token punctuation">)</span>at org.apache.spark.sql.hive.client.HiveClientImpl.<span class="token operator">&lt;</span>init<span class="token operator">></span><span class="token punctuation">(</span>HiveClientImpl.scala:192<span class="token punctuation">)</span>at sun.reflect.NativeConstructorAccessorImpl.newInstance0<span class="token punctuation">(</span>Native Method<span class="token punctuation">)</span>at sun.reflect.NativeConstructorAccessorImpl.newInstance<span class="token punctuation">(</span>NativeConstructorAccessorImpl.java:62<span class="token punctuation">)</span>at sun.reflect.DelegatingConstructorAccessorImpl.newInstance<span class="token punctuation">(</span>DelegatingConstructorAccessorImpl.java:45<span class="token punctuation">)</span>at java.lang.reflect.Constructor.newInstance<span class="token punctuation">(</span>Constructor.java:423<span class="token punctuation">)</span>at org.apache.spark.sql.hive.client.IsolatedClientLoader.createClient<span class="token punctuation">(</span>IsolatedClientLoader.scala:264<span class="token punctuation">)</span>at org.apache.spark.sql.hive.HiveUtils$.newClientForMetadata<span class="token punctuation">(</span>HiveUtils.scala:366<span class="token punctuation">)</span>at org.apache.spark.sql.hive.HiveUtils$.newClientForMetadata<span class="token punctuation">(</span>HiveUtils.scala:270<span class="token punctuation">)</span>at org.apache.spark.sql.hive.HiveExternalCatalog.<span class="token operator">&lt;</span>init<span class="token operator">></span><span class="token punctuation">(</span>HiveExternalCatalog.scala:65<span class="token punctuation">)</span>at sun.reflect.NativeConstructorAccessorImpl.newInstance0<span class="token punctuation">(</span>Native Method<span class="token punctuation">)</span>at sun.reflect.NativeConstructorAccessorImpl.newInstance<span class="token punctuation">(</span>NativeConstructorAccessorImpl.java:62<span class="token punctuation">)</span>at sun.reflect.DelegatingConstructorAccessorImpl.newInstance<span class="token punctuation">(</span>DelegatingConstructorAccessorImpl.java:45<span class="token punctuation">)</span>at java.lang.reflect.Constructor.newInstance<span class="token punctuation">(</span>Constructor.java:423<span class="token punctuation">)</span>at org.apache.spark.sql.internal.SharedState$.org<span class="token variable">$apache</span><span class="token variable">$spark</span><span class="token variable">$sql</span><span class="token variable">$internal</span><span class="token variable">$SharedState</span><span class="token variable">$$</span>reflect<span class="token punctuation">(</span>SharedState.scala:166<span class="token punctuation">)</span>at org.apache.spark.sql.internal.SharedState.<span class="token operator">&lt;</span>init<span class="token operator">></span><span class="token punctuation">(</span>SharedState.scala:86<span class="token punctuation">)</span>at org.apache.spark.sql.SparkSession<span class="token variable">$$</span>anonfun<span class="token variable">$sharedState</span><span class="token variable">$1</span>.apply<span class="token punctuation">(</span>SparkSession.scala:101<span class="token punctuation">)</span>at org.apache.spark.sql.SparkSession<span class="token variable">$$</span>anonfun<span class="token variable">$sharedState</span><span class="token variable">$1</span>.apply<span class="token punctuation">(</span>SparkSession.scala:101<span class="token punctuation">)</span>at scala.Option.getOrElse<span class="token punctuation">(</span>Option.scala:121<span class="token punctuation">)</span>at org.apache.spark.sql.SparkSession.sharedState<span class="token variable">$lzycompute</span><span class="token punctuation">(</span>SparkSession.scala:101<span class="token punctuation">)</span>at org.apache.spark.sql.SparkSession.sharedState<span class="token punctuation">(</span>SparkSession.scala:100<span class="token punctuation">)</span>at org.apache.spark.sql.internal.SessionState.<span class="token operator">&lt;</span>init<span class="token operator">></span><span class="token punctuation">(</span>SessionState.scala:157<span class="token punctuation">)</span>at org.apache.spark.sql.hive.HiveSessionState.<span class="token operator">&lt;</span>init<span class="token operator">></span><span class="token punctuation">(</span>HiveSessionState.scala:32<span class="token punctuation">)</span>at sun.reflect.NativeConstructorAccessorImpl.newInstance0<span class="token punctuation">(</span>Native Method<span class="token punctuation">)</span>at sun.reflect.NativeConstructorAccessorImpl.newInstance<span class="token punctuation">(</span>NativeConstructorAccessorImpl.java:62<span class="token punctuation">)</span>at sun.reflect.DelegatingConstructorAccessorImpl.newInstance<span class="token punctuation">(</span>DelegatingConstructorAccessorImpl.java:45<span class="token punctuation">)</span>at java.lang.reflect.Constructor.newInstance<span class="token punctuation">(</span>Constructor.java:423<span class="token punctuation">)</span>at org.apache.spark.sql.SparkSession$.org<span class="token variable">$apache</span><span class="token variable">$spark</span><span class="token variable">$sql</span><span class="token variable">$SparkSession</span><span class="token variable">$$</span>reflect<span class="token punctuation">(</span>SparkSession.scala:978<span class="token punctuation">)</span>at org.apache.spark.sql.SparkSession.sessionState<span class="token variable">$lzycompute</span><span class="token punctuation">(</span>SparkSession.scala:110<span class="token punctuation">)</span>at org.apache.spark.sql.SparkSession.sessionState<span class="token punctuation">(</span>SparkSession.scala:109<span class="token punctuation">)</span>at org.apache.spark.sql.SparkSession<span class="token variable">$Builder</span><span class="token variable">$$</span>anonfun<span class="token variable">$getOrCreate</span><span class="token variable">$5</span>.apply<span class="token punctuation">(</span>SparkSession.scala:878<span class="token punctuation">)</span>at org.apache.spark.sql.SparkSession<span class="token variable">$Builder</span><span class="token variable">$$</span>anonfun<span class="token variable">$getOrCreate</span><span class="token variable">$5</span>.apply<span class="token punctuation">(</span>SparkSession.scala:878<span class="token punctuation">)</span>at scala.collection.mutable.HashMap<span class="token variable">$$</span>anonfun<span class="token variable">$foreach</span><span class="token variable">$1</span>.apply<span class="token punctuation">(</span>HashMap.scala:99<span class="token punctuation">)</span>at scala.collection.mutable.HashMap<span class="token variable">$$</span>anonfun<span class="token variable">$foreach</span><span class="token variable">$1</span>.apply<span class="token punctuation">(</span>HashMap.scala:99<span class="token punctuation">)</span>at scala.collection.mutable.HashTable<span class="token variable">$class</span>.foreachEntry<span class="token punctuation">(</span>HashTable.scala:230<span class="token punctuation">)</span>at scala.collection.mutable.HashMap.foreachEntry<span class="token punctuation">(</span>HashMap.scala:40<span class="token punctuation">)</span>at scala.collection.mutable.HashMap.foreach<span class="token punctuation">(</span>HashMap.scala:99<span class="token punctuation">)</span>at org.apache.spark.sql.SparkSession<span class="token variable">$Builder</span>.getOrCreate<span class="token punctuation">(</span>SparkSession.scala:878<span class="token punctuation">)</span>at com.hengxing.ecommerceuserprofile.utils.SparkUtils.initSession<span class="token punctuation">(</span>SparkUtils.java:32<span class="token punctuation">)</span>at com.hengxing.ecommerceuserprofile.etls.platform.MemberEtl.main<span class="token punctuation">(</span>MemberEtl.java:24<span class="token punctuation">)</span>Caused by: java.lang.RuntimeException: Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClientat org.apache.hadoop.hive.metastore.MetaStoreUtils.newInstance<span class="token punctuation">(</span>MetaStoreUtils.java:1523<span class="token punctuation">)</span>at org.apache.hadoop.hive.metastore.RetryingMetaStoreClient.<span class="token operator">&lt;</span>init<span class="token operator">></span><span class="token punctuation">(</span>RetryingMetaStoreClient.java:86<span class="token punctuation">)</span>at org.apache.hadoop.hive.metastore.RetryingMetaStoreClient.getProxy<span class="token punctuation">(</span>RetryingMetaStoreClient.java:132<span class="token punctuation">)</span>at org.apache.hadoop.hive.metastore.RetryingMetaStoreClient.getProxy<span class="token punctuation">(</span>RetryingMetaStoreClient.java:104<span class="token punctuation">)</span>at org.apache.hadoop.hive.ql.metadata.Hive.createMetaStoreClient<span class="token punctuation">(</span>Hive.java:3005<span class="token punctuation">)</span>at org.apache.hadoop.hive.ql.metadata.Hive.getMSC<span class="token punctuation">(</span>Hive.java:3024<span class="token punctuation">)</span>at org.apache.hadoop.hive.ql.metadata.Hive.getAllDatabases<span class="token punctuation">(</span>Hive.java:1234<span class="token punctuation">)</span><span class="token punctuation">..</span>. <span class="token number">42</span> common frames omittedCaused by: java.lang.reflect.InvocationTargetException: nullat sun.reflect.NativeConstructorAccessorImpl.newInstance0<span class="token punctuation">(</span>Native Method<span class="token punctuation">)</span>at sun.reflect.NativeConstructorAccessorImpl.newInstance<span class="token punctuation">(</span>NativeConstructorAccessorImpl.java:62<span class="token punctuation">)</span>at sun.reflect.DelegatingConstructorAccessorImpl.newInstance<span class="token punctuation">(</span>DelegatingConstructorAccessorImpl.java:45<span class="token punctuation">)</span>at java.lang.reflect.Constructor.newInstance<span class="token punctuation">(</span>Constructor.java:423<span class="token punctuation">)</span>at org.apache.hadoop.hive.metastore.MetaStoreUtils.newInstance<span class="token punctuation">(</span>MetaStoreUtils.java:1521<span class="token punctuation">)</span><span class="token punctuation">..</span>. <span class="token number">48</span> common frames omittedCaused by: java.lang.NullPointerException: nullat java.lang.ProcessBuilder.start<span class="token punctuation">(</span>ProcessBuilder.java:1012<span class="token punctuation">)</span>at org.apache.hadoop.util.Shell.runCommand<span class="token punctuation">(</span>Shell.java:404<span class="token punctuation">)</span>at org.apache.hadoop.util.Shell.run<span class="token punctuation">(</span>Shell.java:379<span class="token punctuation">)</span>at org.apache.hadoop.util.Shell<span class="token variable">$ShellCommandExecutor</span>.execute<span class="token punctuation">(</span>Shell.java:589<span class="token punctuation">)</span>at org.apache.hadoop.util.Shell.execCommand<span class="token punctuation">(</span>Shell.java:678<span class="token punctuation">)</span>at org.apache.hadoop.util.Shell.execCommand<span class="token punctuation">(</span>Shell.java:661<span class="token punctuation">)</span>at org.apache.hadoop.security.ShellBasedUnixGroupsMapping.getUnixGroups<span class="token punctuation">(</span>ShellBasedUnixGroupsMapping.java:83<span class="token punctuation">)</span>at org.apache.hadoop.security.ShellBasedUnixGroupsMapping.getGroups<span class="token punctuation">(</span>ShellBasedUnixGroupsMapping.java:52<span class="token punctuation">)</span>at org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback.getGroups<span class="token punctuation">(</span>JniBasedUnixGroupsMappingWithFallback.java:50<span class="token punctuation">)</span>at org.apache.hadoop.security.Groups.getGroups<span class="token punctuation">(</span>Groups.java:89<span class="token punctuation">)</span>at org.apache.hadoop.security.UserGroupInformation.getGroupNames<span class="token punctuation">(</span>UserGroupInformation.java:1352<span class="token punctuation">)</span>at org.apache.hadoop.hive.metastore.HiveMetaStoreClient.open<span class="token punctuation">(</span>HiveMetaStoreClient.java:436<span class="token punctuation">)</span>at org.apache.hadoop.hive.metastore.HiveMetaStoreClient.<span class="token operator">&lt;</span>init<span class="token operator">></span><span class="token punctuation">(</span>HiveMetaStoreClient.java:236<span class="token punctuation">)</span>at org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient.<span class="token operator">&lt;</span>init<span class="token operator">></span><span class="token punctuation">(</span>SessionHiveMetaStoreClient.java:74<span class="token punctuation">)</span><span class="token punctuation">..</span>. <span class="token number">53</span> common frames omitted00:02:42.924 <span class="token punctuation">[</span>main<span class="token punctuation">]</span> INFO hive.metastore - Trying to connect to metastore with URI thrift://hengxing:9083Exception <span class="token keyword">in</span> thread <span class="token string">"main"</span> java.lang.IllegalArgumentException: Error <span class="token keyword">while</span> instantiating <span class="token string">'org.apache.spark.sql.hive.HiveSessionState'</span><span class="token builtin class-name">:</span>at org.apache.spark.sql.SparkSession$.org<span class="token variable">$apache</span><span class="token variable">$spark</span><span class="token variable">$sql</span><span class="token variable">$SparkSession</span><span class="token variable">$$</span>reflect<span class="token punctuation">(</span>SparkSession.scala:981<span class="token punctuation">)</span>at org.apache.spark.sql.SparkSession.sessionState<span class="token variable">$lzycompute</span><span class="token punctuation">(</span>SparkSession.scala:110<span class="token punctuation">)</span>at org.apache.spark.sql.SparkSession.sessionState<span class="token punctuation">(</span>SparkSession.scala:109<span class="token punctuation">)</span>at org.apache.spark.sql.SparkSession<span class="token variable">$Builder</span><span class="token variable">$$</span>anonfun<span class="token variable">$getOrCreate</span><span class="token variable">$5</span>.apply<span class="token punctuation">(</span>SparkSession.scala:878<span class="token punctuation">)</span>at org.apache.spark.sql.SparkSession<span class="token variable">$Builder</span><span class="token variable">$$</span>anonfun<span class="token variable">$getOrCreate</span><span class="token variable">$5</span>.apply<span class="token punctuation">(</span>SparkSession.scala:878<span class="token punctuation">)</span>at scala.collection.mutable.HashMap<span class="token variable">$$</span>anonfun<span class="token variable">$foreach</span><span class="token variable">$1</span>.apply<span class="token punctuation">(</span>HashMap.scala:99<span class="token punctuation">)</span>at scala.collection.mutable.HashMap<span class="token variable">$$</span>anonfun<span class="token variable">$foreach</span><span class="token variable">$1</span>.apply<span class="token punctuation">(</span>HashMap.scala:99<span class="token punctuation">)</span>at scala.collection.mutable.HashTable<span class="token variable">$class</span>.foreachEntry<span class="token punctuation">(</span>HashTable.scala:230<span class="token punctuation">)</span>at scala.collection.mutable.HashMap.foreachEntry<span class="token punctuation">(</span>HashMap.scala:40<span class="token punctuation">)</span>at scala.collection.mutable.HashMap.foreach<span class="token punctuation">(</span>HashMap.scala:99<span class="token punctuation">)</span>at org.apache.spark.sql.SparkSession<span class="token variable">$Builder</span>.getOrCreate<span class="token punctuation">(</span>SparkSession.scala:878<span class="token punctuation">)</span>at com.hengxing.ecommerceuserprofile.utils.SparkUtils.initSession<span class="token punctuation">(</span>SparkUtils.java:32<span class="token punctuation">)</span>at com.hengxing.ecommerceuserprofile.etls.platform.MemberEtl.main<span class="token punctuation">(</span>MemberEtl.java:24<span class="token punctuation">)</span>Caused by: java.lang.reflect.InvocationTargetExceptionat sun.reflect.NativeConstructorAccessorImpl.newInstance0<span class="token punctuation">(</span>Native Method<span class="token punctuation">)</span>at sun.reflect.NativeConstructorAccessorImpl.newInstance<span class="token punctuation">(</span>NativeConstructorAccessorImpl.java:62<span class="token punctuation">)</span>at sun.reflect.DelegatingConstructorAccessorImpl.newInstance<span class="token punctuation">(</span>DelegatingConstructorAccessorImpl.java:45<span class="token punctuation">)</span>at java.lang.reflect.Constructor.newInstance<span class="token punctuation">(</span>Constructor.java:423<span class="token punctuation">)</span>at org.apache.spark.sql.SparkSession$.org<span class="token variable">$apache</span><span class="token variable">$spark</span><span class="token variable">$sql</span><span class="token variable">$SparkSession</span><span class="token variable">$$</span>reflect<span class="token punctuation">(</span>SparkSession.scala:978<span class="token punctuation">)</span><span class="token punctuation">..</span>. <span class="token number">12</span> <span class="token function">more</span>Caused by: java.lang.IllegalArgumentException: Error <span class="token keyword">while</span> instantiating <span class="token string">'org.apache.spark.sql.hive.HiveExternalCatalog'</span><span class="token builtin class-name">:</span>at org.apache.spark.sql.internal.SharedState$.org<span class="token variable">$apache</span><span class="token variable">$spark</span><span class="token variable">$sql</span><span class="token variable">$internal</span><span class="token variable">$SharedState</span><span class="token variable">$$</span>reflect<span class="token punctuation">(</span>SharedState.scala:169<span class="token punctuation">)</span>at org.apache.spark.sql.internal.SharedState.<span class="token operator">&lt;</span>init<span class="token operator">></span><span class="token punctuation">(</span>SharedState.scala:86<span class="token punctuation">)</span>at org.apache.spark.sql.SparkSession<span class="token variable">$$</span>anonfun<span class="token variable">$sharedState</span><span class="token variable">$1</span>.apply<span class="token punctuation">(</span>SparkSession.scala:101<span class="token punctuation">)</span>at org.apache.spark.sql.SparkSession<span class="token variable">$$</span>anonfun<span class="token variable">$sharedState</span><span class="token variable">$1</span>.apply<span class="token punctuation">(</span>SparkSession.scala:101<span class="token punctuation">)</span>at scala.Option.getOrElse<span class="token punctuation">(</span>Option.scala:121<span class="token punctuation">)</span>at org.apache.spark.sql.SparkSession.sharedState<span class="token variable">$lzycompute</span><span class="token punctuation">(</span>SparkSession.scala:101<span class="token punctuation">)</span>at org.apache.spark.sql.SparkSession.sharedState<span class="token punctuation">(</span>SparkSession.scala:100<span class="token punctuation">)</span>at org.apache.spark.sql.internal.SessionState.<span class="token operator">&lt;</span>init<span class="token operator">></span><span class="token punctuation">(</span>SessionState.scala:157<span class="token punctuation">)</span>at org.apache.spark.sql.hive.HiveSessionState.<span class="token operator">&lt;</span>init<span class="token operator">></span><span class="token punctuation">(</span>HiveSessionState.scala:32<span class="token punctuation">)</span><span class="token punctuation">..</span>. <span class="token number">17</span> <span class="token function">more</span>Caused by: java.lang.reflect.InvocationTargetExceptionat sun.reflect.NativeConstructorAccessorImpl.newInstance0<span class="token punctuation">(</span>Native Method<span class="token punctuation">)</span>at sun.reflect.NativeConstructorAccessorImpl.newInstance<span class="token punctuation">(</span>NativeConstructorAccessorImpl.java:62<span class="token punctuation">)</span>at sun.reflect.DelegatingConstructorAccessorImpl.newInstance<span class="token punctuation">(</span>DelegatingConstructorAccessorImpl.java:45<span class="token punctuation">)</span>at java.lang.reflect.Constructor.newInstance<span class="token punctuation">(</span>Constructor.java:423<span class="token punctuation">)</span>at org.apache.spark.sql.internal.SharedState$.org<span class="token variable">$apache</span><span class="token variable">$spark</span><span class="token variable">$sql</span><span class="token variable">$internal</span><span class="token variable">$SharedState</span><span class="token variable">$$</span>reflect<span class="token punctuation">(</span>SharedState.scala:166<span class="token punctuation">)</span><span class="token punctuation">..</span>. <span class="token number">25</span> <span class="token function">more</span>Caused by: java.lang.reflect.InvocationTargetExceptionat sun.reflect.NativeConstructorAccessorImpl.newInstance0<span class="token punctuation">(</span>Native Method<span class="token punctuation">)</span>at sun.reflect.NativeConstructorAccessorImpl.newInstance<span class="token punctuation">(</span>NativeConstructorAccessorImpl.java:62<span class="token punctuation">)</span>at sun.reflect.DelegatingConstructorAccessorImpl.newInstance<span class="token punctuation">(</span>DelegatingConstructorAccessorImpl.java:45<span class="token punctuation">)</span>at java.lang.reflect.Constructor.newInstance<span class="token punctuation">(</span>Constructor.java:423<span class="token punctuation">)</span>at org.apache.spark.sql.hive.client.IsolatedClientLoader.createClient<span class="token punctuation">(</span>IsolatedClientLoader.scala:264<span class="token punctuation">)</span>at org.apache.spark.sql.hive.HiveUtils$.newClientForMetadata<span class="token punctuation">(</span>HiveUtils.scala:366<span class="token punctuation">)</span>at org.apache.spark.sql.hive.HiveUtils$.newClientForMetadata<span class="token punctuation">(</span>HiveUtils.scala:270<span class="token punctuation">)</span>at org.apache.spark.sql.hive.HiveExternalCatalog.<span class="token operator">&lt;</span>init<span class="token operator">></span><span class="token punctuation">(</span>HiveExternalCatalog.scala:65<span class="token punctuation">)</span><span class="token punctuation">..</span>. <span class="token number">30</span> <span class="token function">more</span>Caused by: java.lang.RuntimeException: java.lang.RuntimeException: Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClientat org.apache.hadoop.hive.ql.session.SessionState.start<span class="token punctuation">(</span>SessionState.java:522<span class="token punctuation">)</span>at org.apache.spark.sql.hive.client.HiveClientImpl.<span class="token operator">&lt;</span>init<span class="token operator">></span><span class="token punctuation">(</span>HiveClientImpl.scala:192<span class="token punctuation">)</span><span class="token punctuation">..</span>. <span class="token number">38</span> <span class="token function">more</span>Caused by: java.lang.RuntimeException: Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClientat org.apache.hadoop.hive.metastore.MetaStoreUtils.newInstance<span class="token punctuation">(</span>MetaStoreUtils.java:1523<span class="token punctuation">)</span>at org.apache.hadoop.hive.metastore.RetryingMetaStoreClient.<span class="token operator">&lt;</span>init<span class="token operator">></span><span class="token punctuation">(</span>RetryingMetaStoreClient.java:86<span class="token punctuation">)</span>at org.apache.hadoop.hive.metastore.RetryingMetaStoreClient.getProxy<span class="token punctuation">(</span>RetryingMetaStoreClient.java:132<span class="token punctuation">)</span>at org.apache.hadoop.hive.metastore.RetryingMetaStoreClient.getProxy<span class="token punctuation">(</span>RetryingMetaStoreClient.java:104<span class="token punctuation">)</span>at org.apache.hadoop.hive.ql.metadata.Hive.createMetaStoreClient<span class="token punctuation">(</span>Hive.java:3005<span class="token punctuation">)</span>at org.apache.hadoop.hive.ql.metadata.Hive.getMSC<span class="token punctuation">(</span>Hive.java:3024<span class="token punctuation">)</span>at org.apache.hadoop.hive.ql.session.SessionState.start<span class="token punctuation">(</span>SessionState.java:503<span class="token punctuation">)</span><span class="token punctuation">..</span>. <span class="token number">39</span> <span class="token function">more</span>Caused by: java.lang.reflect.InvocationTargetExceptionat sun.reflect.NativeConstructorAccessorImpl.newInstance0<span class="token punctuation">(</span>Native Method<span class="token punctuation">)</span>at sun.reflect.NativeConstructorAccessorImpl.newInstance<span class="token punctuation">(</span>NativeConstructorAccessorImpl.java:62<span class="token punctuation">)</span>at sun.reflect.DelegatingConstructorAccessorImpl.newInstance<span class="token punctuation">(</span>DelegatingConstructorAccessorImpl.java:45<span class="token punctuation">)</span>at java.lang.reflect.Constructor.newInstance<span class="token punctuation">(</span>Constructor.java:423<span class="token punctuation">)</span>at org.apache.hadoop.hive.metastore.MetaStoreUtils.newInstance<span class="token punctuation">(</span>MetaStoreUtils.java:1521<span class="token punctuation">)</span><span class="token punctuation">..</span>. <span class="token number">45</span> <span class="token function">more</span>Caused by: java.lang.NullPointerExceptionat java.lang.ProcessBuilder.start<span class="token punctuation">(</span>ProcessBuilder.java:1012<span class="token punctuation">)</span>at org.apache.hadoop.util.Shell.runCommand<span class="token punctuation">(</span>Shell.java:404<span class="token punctuation">)</span>at org.apache.hadoop.util.Shell.run<span class="token punctuation">(</span>Shell.java:379<span class="token punctuation">)</span>at org.apache.hadoop.util.Shell<span class="token variable">$ShellCommandExecutor</span>.execute<span class="token punctuation">(</span>Shell.java:589<span class="token punctuation">)</span>at org.apache.hadoop.util.Shell.execCommand<span class="token punctuation">(</span>Shell.java:678<span class="token punctuation">)</span>at org.apache.hadoop.util.Shell.execCommand<span class="token punctuation">(</span>Shell.java:661<span class="token punctuation">)</span>at org.apache.hadoop.security.ShellBasedUnixGroupsMapping.getUnixGroups<span class="token punctuation">(</span>ShellBasedUnixGroupsMapping.java:83<span class="token punctuation">)</span>at org.apache.hadoop.security.ShellBasedUnixGroupsMapping.getGroups<span class="token punctuation">(</span>ShellBasedUnixGroupsMapping.java:52<span class="token punctuation">)</span>at org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback.getGroups<span class="token punctuation">(</span>JniBasedUnixGroupsMappingWithFallback.java:50<span class="token punctuation">)</span>at org.apache.hadoop.security.Groups.getGroups<span class="token punctuation">(</span>Groups.java:89<span class="token punctuation">)</span>at org.apache.hadoop.security.UserGroupInformation.getGroupNames<span class="token punctuation">(</span>UserGroupInformation.java:1352<span class="token punctuation">)</span>at org.apache.hadoop.hive.metastore.HiveMetaStoreClient.open<span class="token punctuation">(</span>HiveMetaStoreClient.java:436<span class="token punctuation">)</span>at org.apache.hadoop.hive.metastore.HiveMetaStoreClient.<span class="token operator">&lt;</span>init<span class="token operator">></span><span class="token punctuation">(</span>HiveMetaStoreClient.java:236<span class="token punctuation">)</span>at org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient.<span class="token operator">&lt;</span>init<span class="token operator">></span><span class="token punctuation">(</span>SessionHiveMetaStoreClient.java:74<span class="token punctuation">)</span><span class="token punctuation">..</span>. <span class="token number">50</span> <span class="token function">more</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我以为是没开metastore服务，但是打开之后还是报错</p><p>测试一下服务有没有正常启动</p><p><img src="https://s2.loli.net/2022/04/01/KwWPz3bgVijA1dy.png" alt="image-20220401225351386"></p><p>说明启动起来了</p><p>又一想，sparkshell能不能启动呢，果然启动的时候报错，说连不上hive，并且有两个包引入错误</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Caused by: java.lang.RuntimeException: Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient······<span class="token operator">&lt;</span>console<span class="token operator">></span>:14: error: not found: value spark       <span class="token function">import</span> spark.implicits._              ^<span class="token operator">&lt;</span>console<span class="token operator">></span>:14: error: not found: value spark       <span class="token function">import</span> spark.sql              ^<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>虽然不知道它是怎么想着连接hive的，但是总要试着解决，去网上查了一下sparkonhive的配置方法：</p><blockquote><p>配置spark on hive很简单，把hive-site.xml软链接到spark的conf目录下即可，spark会自动读取该配置来识别metastore的地址。</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ln</span> <span class="token parameter variable">-snf</span> /usr/local/hive/conf/hive-site.xml /usr/local/spark/conf/hive-site.xml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再重新启动sparkshell，好了，现在没有上面那个报错了，并且成功查询到hive中的数据</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Spark context Web UI available at http://192.168.59.140:4040Spark context available as <span class="token string">'sc'</span> <span class="token punctuation">(</span>master <span class="token operator">=</span> local<span class="token punctuation">[</span>*<span class="token punctuation">]</span>, app <span class="token function">id</span> <span class="token operator">=</span> local-1648828695614<span class="token punctuation">)</span>.Spark session available as <span class="token string">'spark'</span><span class="token builtin class-name">.</span>Welcome to      ____              __     / __/__  ___ _____/ /__    _<span class="token punctuation">\</span> <span class="token punctuation">\</span>/ _ <span class="token punctuation">\</span>/ _ `/ __/  '_/   /___/ .__/<span class="token punctuation">\</span>_,_/_/ /_/<span class="token punctuation">\</span>_<span class="token punctuation">\</span>   version <span class="token number">2.1</span>.0      /_/         Using Scala version <span class="token number">2.11</span>.8 <span class="token punctuation">(</span>OpenJDK <span class="token number">64</span>-Bit Server VM, Java <span class="token number">1.8</span>.0_292<span class="token punctuation">)</span>Type <span class="token keyword">in</span> expressions to have them evaluated.Type :help <span class="token keyword">for</span> <span class="token function">more</span> information.scala<span class="token operator">></span> spark.sql<span class="token punctuation">(</span><span class="token string">"select * from ecommerce.t_user"</span><span class="token punctuation">)</span>.show<span class="token punctuation">(</span>false<span class="token punctuation">)</span>+---+---------+-------------+-----------+-------------------+-------------------+<span class="token operator">|</span><span class="token function">id</span> <span class="token operator">|</span>user_name<span class="token operator">|</span>user_password<span class="token operator">|</span>user_phone <span class="token operator">|</span>create_time        <span class="token operator">|</span>update_time        <span class="token operator">|</span>+---+---------+-------------+-----------+-------------------+-------------------+<span class="token operator">|</span><span class="token number">1</span>  <span class="token operator">|</span>一号员工     <span class="token operator">|</span><span class="token number">111111</span>       <span class="token operator">|</span><span class="token number">15678990989</span><span class="token operator">|</span><span class="token number">2019</span>-08-01 08:31:46<span class="token operator">|</span><span class="token number">2019</span>-08-01 08:31:46<span class="token operator">|</span><span class="token operator">|</span><span class="token number">2</span>  <span class="token operator">|</span>二号员工     <span class="token operator">|</span><span class="token number">111111</span>       <span class="token operator">|</span><span class="token number">15678990989</span><span class="token operator">|</span><span class="token number">2019</span>-08-01 08:31:46<span class="token operator">|</span><span class="token number">2019</span>-08-01 08:31:46<span class="token operator">|</span><span class="token operator">|</span><span class="token number">3</span>  <span class="token operator">|</span>三号员工     <span class="token operator">|</span><span class="token number">111111</span>       <span class="token operator">|</span><span class="token number">15678990989</span><span class="token operator">|</span><span class="token number">2019</span>-08-01 08:31:46<span class="token operator">|</span><span class="token number">2019</span>-08-01 08:31:46<span class="token operator">|</span>+---+---------+-------------+-----------+-------------------+-------------------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但这只是本地的sparkshell没问题，程序还是有报错</p><p>咨询了一位学长，学长给了我一个解决方案，我们看一下</p><p><a href="https://www.modb.pro/db/143244">Spark 之访问 Hive 空指针异常</a></p><p>因为学长说我的rootcause应该是<code> Caused by: java.lang.NullPointerException</code>，这里还要普及一个小知识点</p><blockquote><p>看报错的时候要从下网上看，最下面的是最根本的原因</p></blockquote><p>根据文章所说的添加了winutils.exe就行，具体的原因还是–&gt;<code>Spark需要用到Hadoop中的一些类库&amp;使用winutils.exe文件初始化Hive的上下文</code></p><h5 id="table-or-view-not-found"><a href="#table-or-view-not-found" class="headerlink" title="table or view not found"></a>table or view not found</h5><p>如果遇到<code>table or view not found</code>，我是因为sparkSession没有打开hive支持</p><h3 id="热词词云"><a href="#热词词云" class="headerlink" title="热词词云"></a>热词词云</h3><h5 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h5><p>将文件上传至hdfs中</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hdfs dfs <span class="token parameter variable">-put</span> /data/SogouQ.sample.txt /data/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="类文件"><a href="#类文件" class="headerlink" title="类文件"></a>类文件</h5><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>hengxing<span class="token punctuation">.</span>ecommerceuserprofile<span class="token punctuation">.</span>etls<span class="token punctuation">.</span>platform</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span></span><span class="token class-name">SparkConf</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>api<span class="token punctuation">.</span>java<span class="token punctuation">.</span></span><span class="token class-name">JavaPairRDD</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>api<span class="token punctuation">.</span>java<span class="token punctuation">.</span></span><span class="token class-name">JavaRDD</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>api<span class="token punctuation">.</span>java<span class="token punctuation">.</span></span><span class="token class-name">JavaSparkContext</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>api<span class="token punctuation">.</span>java<span class="token punctuation">.</span>function<span class="token punctuation">.</span></span><span class="token class-name">Function2</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>api<span class="token punctuation">.</span>java<span class="token punctuation">.</span>function<span class="token punctuation">.</span></span><span class="token class-name">PairFunction</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">scala<span class="token punctuation">.</span></span><span class="token class-name">Tuple2</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token comment">/** * @projectName: EcommerceUserProfile * @package: com.hengxing.ecommerceuserprofile.etls.platform * @className: HotWordEtl * @author: HengxingStu * @description: TODO * @date: 4/12/2022 11:19 PM * @version: 1.0 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HotWordEtl</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//创建一个javaspark context ，方便后面调用transform操作</span>        <span class="token class-name">SparkConf</span> sparkConf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SparkConf</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setAppName</span><span class="token punctuation">(</span><span class="token string">"Hot word etl"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">setMaster</span><span class="token punctuation">(</span><span class="token string">"local[*]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JavaSparkContext</span> jsc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JavaSparkContext</span><span class="token punctuation">(</span>sparkConf<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//1.先从hdfs读数据</span>        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"HADOOP_USER_NAME"</span><span class="token punctuation">,</span><span class="token string">"hengxing"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JavaRDD</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> linesRdd <span class="token operator">=</span> jsc<span class="token punctuation">.</span><span class="token function">textFile</span><span class="token punctuation">(</span><span class="token string">"hdfs://hengxing:9000/data/SogouQ.sample.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//2.mapToPair得到二元组，准备word count</span>        <span class="token class-name">JavaPairRDD</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span> pairRDD <span class="token operator">=</span> linesRdd<span class="token punctuation">.</span><span class="token function">mapToPair</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PairFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token class-name">Tuple2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">String</span> word <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Tuple2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>word<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//3.以word为key，通过reducebykey聚合</span>        <span class="token class-name">JavaPairRDD</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span> countRdd <span class="token operator">=</span> pairRDD<span class="token punctuation">.</span><span class="token function">reduceByKey</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Function2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">,</span> <span class="token class-name">Integer</span> integer2<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> integer <span class="token operator">+</span> integer2<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//排序，但是由于sortbykey只能根据第一个元素进行排序，所以排序前需要调整参数位置</span><span class="token comment">//       1.exchange position first</span>        <span class="token class-name">JavaPairRDD</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> swapedRdd <span class="token operator">=</span> countRdd<span class="token punctuation">.</span><span class="token function">mapToPair</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PairFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Tuple2</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token class-name">Tuple2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Tuple2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span> stringIntegerTuple2<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> stringIntegerTuple2<span class="token punctuation">.</span><span class="token function">swap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        2.count desc</span>        <span class="token class-name">JavaPairRDD</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> sortedRdd <span class="token operator">=</span> swapedRdd<span class="token punctuation">.</span><span class="token function">sortByKey</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        3.exchange again,back to previous,extract TopN,get a list finally</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Tuple2</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span><span class="token punctuation">></span></span> resultlist <span class="token operator">=</span> sortedRdd<span class="token punctuation">.</span><span class="token function">mapToPair</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PairFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Tuple2</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token class-name">Tuple2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">Tuple2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> integerStringTuple2<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> integerStringTuple2<span class="token punctuation">.</span><span class="token function">swap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        print</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Tuple2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span> hotWordCount<span class="token operator">:</span> resultlist<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hotWordCount<span class="token punctuation">.</span>_1 <span class="token operator">+</span> <span class="token string">"=== count "</span> <span class="token operator">+</span> hotWordCount<span class="token punctuation">.</span>_2 <span class="token operator">+</span> <span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="平台近期数据增量"><a href="#平台近期数据增量" class="headerlink" title="平台近期数据增量"></a>平台近期数据增量</h3><p>SQL中的模板字符串<code>&#39;%s&#39;</code>，这样就可以将字符插进去，就像这样</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">最后合成的字符串 <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>你的<span class="token constant">SQL</span>字符串<span class="token punctuation">,</span> 要添加的字符串<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>GrowthEtl.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>hengxing<span class="token punctuation">.</span>ecommerceuserprofile<span class="token punctuation">.</span>etls<span class="token punctuation">.</span>platform</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span></span><span class="token class-name">JSONObject</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>hengxing<span class="token punctuation">.</span>ecommerceuserprofile<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">SparkUtils</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>hengxing<span class="token punctuation">.</span>ecommerceuserprofile<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>dateutils<span class="token punctuation">.</span></span><span class="token class-name">DateStyle</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>hengxing<span class="token punctuation">.</span>ecommerceuserprofile<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>dateutils<span class="token punctuation">.</span></span><span class="token class-name">DateUtil</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Dataset</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Row</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">SparkSession</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>types<span class="token punctuation">.</span></span><span class="token class-name">StructType</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">scala<span class="token punctuation">.</span></span><span class="token class-name">Tuple2</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>math<span class="token punctuation">.</span></span><span class="token class-name">BigDecimal</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDate</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">Month</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">ZoneId</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GrowthEtl</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">SparkSession</span> session <span class="token operator">=</span> <span class="token class-name">SparkUtils</span><span class="token punctuation">.</span><span class="token function">initSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GrowthLineVo</span><span class="token punctuation">></span></span> growthLineVo <span class="token operator">=</span> <span class="token function">growthEtl</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>growthLineVo<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//自定义VIewObject，统计每日数据</span>    <span class="token annotation punctuation">@Data</span>    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">GrowthLineVo</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 每天新增注册数、总用户数、总订单数、总流水GMV</span>        <span class="token keyword">private</span> <span class="token class-name">String</span> day<span class="token punctuation">;</span>  <span class="token comment">//日期</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> regCount<span class="token punctuation">;</span>  <span class="token comment">// 每天新增注册数</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> memberCount<span class="token punctuation">;</span>  <span class="token comment">// 每天平台总用户数</span>        <span class="token keyword">private</span> <span class="token class-name">Integer</span> orderCount<span class="token punctuation">;</span>  <span class="token comment">// 每天总订单数</span>        <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> gmv<span class="token punctuation">;</span>  <span class="token comment">// 每天平台订单总流水金额</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GrowthLineVo</span><span class="token punctuation">></span></span> <span class="token function">growthEtl</span><span class="token punctuation">(</span><span class="token class-name">SparkSession</span> session<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 指定“当前日期”是2019.11.30，这是数据决定的</span>        <span class="token class-name">LocalDate</span> now <span class="token operator">=</span> <span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">,</span> <span class="token class-name">Month</span><span class="token punctuation">.</span><span class="token constant">NOVEMBER</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Date</span> nowDay <span class="token operator">=</span> <span class="token class-name">Date</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">atStartOfDay</span><span class="token punctuation">(</span><span class="token class-name">ZoneId</span><span class="token punctuation">.</span><span class="token function">systemDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toInstant</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Date</span> sevenDayBefore <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">addDay</span><span class="token punctuation">(</span>nowDay<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 近七天注册人数统计（总量、新增）</span>        <span class="token class-name">String</span> memberSql <span class="token operator">=</span> <span class="token string">"select date_format(create_time,'yyyy-MM-dd') as day,"</span> <span class="token operator">+</span>                <span class="token string">" count(id) as regCount, max(id) as memberCount "</span> <span class="token operator">+</span>                <span class="token string">" from ecommerce.t_member where create_time >='%s' "</span> <span class="token operator">+</span>                <span class="token string">" group by date_format(create_time,'yyyy-MM-dd') order by day"</span><span class="token punctuation">;</span>        memberSql <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>memberSql<span class="token punctuation">,</span> <span class="token class-name">DateUtil<span class="token punctuation">.</span>DateToString</span><span class="token punctuation">(</span>sevenDayBefore<span class="token punctuation">,</span> <span class="token class-name">DateStyle</span><span class="token punctuation">.</span><span class="token constant">YYYY_MM_DD_HH_MM_SS</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Dataset</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span><span class="token punctuation">></span></span> memberDs <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">sql</span><span class="token punctuation">(</span>memberSql<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 近七天订单和流水统计（新增总流水）</span>        <span class="token class-name">String</span> orderSql <span class="token operator">=</span> <span class="token string">"select date_format(create_time,'yyyy-MM-dd') as day,"</span> <span class="token operator">+</span>                <span class="token string">" max(order_id) orderCount, sum(origin_price) as gmv"</span> <span class="token operator">+</span>                <span class="token string">" from ecommerce.t_order where create_time >='%s' "</span> <span class="token operator">+</span>                <span class="token string">"group by date_format(create_time,'yyyy-MM-dd') order by day"</span><span class="token punctuation">;</span>        orderSql <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>orderSql<span class="token punctuation">,</span> <span class="token class-name">DateUtil<span class="token punctuation">.</span>DateToString</span><span class="token punctuation">(</span>sevenDayBefore<span class="token punctuation">,</span> <span class="token class-name">DateStyle</span><span class="token punctuation">.</span><span class="token constant">YYYY_MM_DD_HH_MM_SS</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Dataset</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span><span class="token punctuation">></span></span> orderDs <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">sql</span><span class="token punctuation">(</span>orderSql<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 联接两个查询结果，按照day进行内连接</span>        <span class="token class-name">Dataset</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Tuple2</span><span class="token punctuation">&lt;</span><span class="token class-name">Row</span><span class="token punctuation">,</span> <span class="token class-name">Row</span><span class="token punctuation">></span><span class="token punctuation">></span></span> tuple2Dataset <span class="token operator">=</span> memberDs<span class="token punctuation">.</span><span class="token function">joinWith</span><span class="token punctuation">(</span>orderDs<span class="token punctuation">,</span> memberDs<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token string">"day"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equalTo</span><span class="token punctuation">(</span>orderDs<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token string">"day"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"inner"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//先转换成list，然后遍历，取出每一天的数据，转成VO，放入新的list</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Tuple2</span><span class="token punctuation">&lt;</span><span class="token class-name">Row</span><span class="token punctuation">,</span> <span class="token class-name">Row</span><span class="token punctuation">></span><span class="token punctuation">></span></span> tuple2s <span class="token operator">=</span> tuple2Dataset<span class="token punctuation">.</span><span class="token function">collectAsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GrowthLineVo</span><span class="token punctuation">></span></span> vos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 遍历二元组List，包装 GrowthLineVo</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Tuple2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span><span class="token punctuation">,</span> <span class="token class-name">Row</span><span class="token punctuation">></span></span> tuple2 <span class="token operator">:</span> tuple2s<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Row</span> row1 <span class="token operator">=</span> tuple2<span class="token punctuation">.</span><span class="token function">_1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// memberSql结果</span>            <span class="token class-name">Row</span> row2 <span class="token operator">=</span> tuple2<span class="token punctuation">.</span><span class="token function">_2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// orderSql结果</span>            <span class="token class-name">JSONObject</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//提取row类型里的所有字段</span>            <span class="token class-name">StructType</span> schema <span class="token operator">=</span> row1<span class="token punctuation">.</span><span class="token function">schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strings <span class="token operator">=</span> schema<span class="token punctuation">.</span><span class="token function">fieldNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> string <span class="token operator">:</span> strings<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Object</span> as <span class="token operator">=</span> row1<span class="token punctuation">.</span><span class="token function">getAs</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">;</span>                obj<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>string<span class="token punctuation">,</span> as<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            schema <span class="token operator">=</span> row2<span class="token punctuation">.</span><span class="token function">schema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            strings <span class="token operator">=</span> schema<span class="token punctuation">.</span><span class="token function">fieldNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> string <span class="token operator">:</span> strings<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Object</span> as <span class="token operator">=</span> row2<span class="token punctuation">.</span><span class="token function">getAs</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">;</span>                obj<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>string<span class="token punctuation">,</span> as<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">GrowthLineVo</span> growthLineVo <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">toJavaObject</span><span class="token punctuation">(</span><span class="token class-name">GrowthLineVo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            vos<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>growthLineVo<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 七天前，再之前的订单流水总和（GMV）</span>        <span class="token class-name">String</span> preGmvSql <span class="token operator">=</span> <span class="token string">"select sum(origin_price) as totalGmv from ecommerce.t_order where create_time &lt;'%s'"</span><span class="token punctuation">;</span>        preGmvSql <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>preGmvSql<span class="token punctuation">,</span> <span class="token class-name">DateUtil<span class="token punctuation">.</span>DateToString</span><span class="token punctuation">(</span>sevenDayBefore<span class="token punctuation">,</span> <span class="token class-name">DateStyle</span><span class="token punctuation">.</span><span class="token constant">YYYY_MM_DD_HH_MM_SS</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Dataset</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Row</span><span class="token punctuation">></span></span> gmvDs <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">sql</span><span class="token punctuation">(</span>preGmvSql<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">double</span> previousGmv <span class="token operator">=</span> gmvDs<span class="token punctuation">.</span><span class="token function">collectAsList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDouble</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//取出第0行，第0列</span>        <span class="token class-name">BigDecimal</span> preGmv <span class="token operator">=</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>previousGmv<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 之前每天的增量gmv取出，依次叠加，得到总和</span>        <span class="token class-name">BigDecimal</span> currentGmv <span class="token operator">=</span> preGmv<span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> vos<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">GrowthLineVo</span> growthLineVo <span class="token operator">=</span> vos<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            currentGmv <span class="token operator">=</span> currentGmv<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>growthLineVo<span class="token punctuation">.</span><span class="token function">getGmv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//加上当天GMV新增量</span>            growthLineVo<span class="token punctuation">.</span><span class="token function">setGmv</span><span class="token punctuation">(</span>currentGmv<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> vos<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="标签系统"><a href="#标签系统" class="headerlink" title="标签系统"></a>标签系统</h3><p>首先保证es、kibana安装完成，然后在kibana命令行中写如下命令：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">PUT /tag/_doc/_mapping?pretty <span class="token punctuation">&#123;</span> <span class="token property">"_doc"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"properties"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"memberId"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span> <span class="token property">"fields"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"keyword"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"keyword"</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token property">"phone"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span> <span class="token property">"fields"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"keyword"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"keyword"</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token property">"sex"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span> <span class="token property">"fields"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"keyword"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"keyword"</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token property">"channel"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span> <span class="token property">"fields"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"keyword"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"keyword"</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token property">"subOpenId"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span> <span class="token property">"fields"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"keyword"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"keyword"</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>“address”<span class="token operator">:</span> <span class="token punctuation">&#123;</span> “type”<span class="token operator">:</span> “text” <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token property">"regTime"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"date"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token property">"orderCount"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"long"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token property">"orderTime"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"date"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token property">"orderMoney"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"float"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token property">"favGoods"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span> <span class="token property">"fields"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"keyword"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"keyword"</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token property">"freeCouponTime"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"date"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token property">"couponTimes"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"date"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token property">"chargeMoney"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"double"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token property">"overTime"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"long"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token property">"feedBack"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"long"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>正常情况返回</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"acknowledged"</span> <span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>也可以在dashboard-&gt;Index Management-&gt;选择你的查询index并点击-&gt;mapping，可以查看到提交的mapping</p><p>执行UserTagEtl.java可以将用户标签数据存入es，接着可以在es中查到数据<code>GET /usertag/_search</code>，其中的total表示有1000条数据</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"hits"</span> <span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"total"</span> <span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>    <span class="token property">"max_score"</span> <span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>    <span class="token property">"hits"</span> <span class="token operator">:</span> <span class="token punctuation">[</span>----省略一万字-----<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring学习</title>
      <link href="/2022/04/02/Spring%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/04/02/Spring%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>Spring学习</p><p>[TOC]</p><h1 id="Spring基础知识"><a href="#Spring基础知识" class="headerlink" title="Spring基础知识"></a>Spring基础知识</h1><h2 id="一、Spring框架简介"><a href="#一、Spring框架简介" class="headerlink" title="一、Spring框架简介"></a>一、Spring框架简介</h2><h3 id="Spring是什么"><a href="#Spring是什么" class="headerlink" title="Spring是什么"></a>Spring是什么</h3><blockquote><p>Spring是一个JEE开发框架，开源，轻量级，功能强大。</p><p>Spring框架的核心特性是&#x3D;&#x3D;依赖注入(DI)&#x3D;&#x3D;与&#x3D;&#x3D;面向切面编程(AOP)&#x3D;&#x3D;，Spring框架可以看作是一个控制反转的容器。尽管Spring主要用于JEE应用开发，但实际上这2个核心特性可用于任何Java项目。</p><p>Spring框架是Java EE开发中最流行的框架，已经成为JEE事实上的标准，全世界的开发人员都在使用Spring框架开发各种应用。</p></blockquote><h3 id="框架的优点："><a href="#框架的优点：" class="headerlink" title="框架的优点："></a>框架的优点：</h3><ul><li><strong>松耦合</strong>，组件（Bean）之间依赖很松，模块可以轻松替换</li><li><strong>简单，非侵入式</strong>，组件（Bean）本身只是简单的Java对象，无需任何特殊处理，非常简单</li></ul><h3 id="核心技术：DI-x2F-IOC和AOP"><a href="#核心技术：DI-x2F-IOC和AOP" class="headerlink" title="核心技术：DI&#x2F;IOC和AOP"></a>核心技术：<strong>DI&#x2F;IOC</strong>和<strong>AOP</strong></h3><ul><li><p>依赖注入Dependency Injection，也称控制反转Inversion of Control</p><blockquote><p>Java程序中，Java类是基本的代码组织单位。当某个类要使用另一个类时，自然的做法是创建另一个类的对象，然后调用该对象的方法。这样做在程序规模较小时没什么问题，但当程序规模很大时这些类之间过于紧密的耦合会导致后续开发维护困难。例如要替换其中某个类，就不得不修改所有涉及这个类的代码。</p><p>控制反转(Inversion of Control &#x2F; IoC)与依赖注入（Dependency Injection &#x2F; DI）就是为解决这个问题。上面提到类里面创建另外一个类对象会造成耦合太紧，Spring框架就把创建类的行为从类中拿出来放到Spring框架里去做，类与类之间创建关系就没有了。</p><p>&#x3D;&#x3D;本来由类控制其所依赖的类对象的创建，现在把创建动作放到Spring框架里了，由框架控制所有类对象的创建，这就是“控制反转”。&#x3D;&#x3D;</p><p>&#x3D;&#x3D;框架创建了类所依赖的对象，然后把这些对象传给（注入）依赖它们的类，这就是“依赖注入”。&#x3D;&#x3D;</p><p>所以可以看到，Spring框架中控制反转(Inversion of Control &#x2F; IoC)与依赖注入（Dependency Injection &#x2F; DI）实际上讲的是同一个事情，只是角度不同。</p></blockquote></li><li><p>面向切面编程(Aspect Oriented Programming&#x2F;AOP)</p><blockquote><p>面向切面编程的主要作用是，在不修改源代码的情况下，可以给目标类打补丁，让其执行补丁中的代码。</p><p>例如，用户类中有个登录方法，现在需要加用户登录日志。使用AOP就不需要修改用户登录方法，只需把日志代码注入到用户登录方法前后，让其执行。日志代码就是“切面”，插入代码的地方（用户类的登录方法）就是“连接点”。</p><p>也就是说，可以&#x3D;&#x3D;方便地修改项目功能&#x3D;&#x3D;</p></blockquote></li></ul><h2 id="二、怎么使用"><a href="#二、怎么使用" class="headerlink" title="二、怎么使用"></a>二、怎么使用</h2><h3 id="1-导入依赖包"><a href="#1-导入依赖包" class="headerlink" title="1. 导入依赖包"></a>1. 导入依赖包</h3><p>在POM.xml文件中加入依赖，注意<code>org.springframework</code>这几个包的版本必须一致</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.3.10.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.3.10.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-beans<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.3.10.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-expression<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.3.10.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>commons-logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>commons-logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.1.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-创建一个类，提供get和set方法"><a href="#2-创建一个类，提供get和set方法" class="headerlink" title="2. 创建一个类，提供get和set方法"></a>2. 创建一个类，提供get和set方法</h3><p>在你的包中创建类，例如我是在<code>src=&gt;main=&gt;java=&gt;com.hengxing.spring</code>中</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>    <span class="token comment">//此处省略getter、setter、toString方法</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-编写配置文件-applicationContext-xml"><a href="#3-编写配置文件-applicationContext-xml" class="headerlink" title="3.编写配置文件-applicationContext.xml"></a>3.编写配置文件-applicationContext.xml</h3><p>在resources文件夹上右键，选择<code>new=&gt;XML Configuration File=&gt;Spring Config</code>，将下面的内容贴进去</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema- instance<span class="token punctuation">"</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans     http://www. springframework.org/schema/beans/spring-beans-4.3.xsd <span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 将 User 对象交给 spring 容器管理，其中 name 任意，class 为全包名 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.hengxing.spring.User<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>看到中间的bean了吗？这就是你在spring中创建的对象，现在要调用它就不用再new了，比如我现在写一个测试方法，继续往下看</p><h3 id="4-使用"><a href="#4-使用" class="headerlink" title="4.使用"></a>4.使用</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testUseSpring</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//读取spring核心配置文件，并创建出文件中配置的类的对象</span>        <span class="token class-name">ApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"applicationContext.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//直接向spring要对象，getBean(&lt;这个对象的id>, &lt;对象的类型>);</span>        <span class="token class-name">User</span> user <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样我们就省去了一步new的过程。现在我们只省略了一步，如果我们的对象变多，那就能体现出这种方式的简便。运行后就可以看到：</p><p><img src="https://s2.loli.net/2022/03/27/G21z7fomPHAilZW.png" alt="image-20220327214739808"></p><p>这个对象里面的值是null？当然，因为你没有对他进行赋值操作，它默认就是null。</p><p>如果你想对它进行赋值，小小修改一下你的bean，</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span>bean id<span class="token operator">=</span><span class="token string">"user"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"com.hengxing.spring.User"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"username"</span> value<span class="token operator">=</span><span class="token string">"Cloud"</span><span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"age"</span> value<span class="token operator">=</span><span class="token string">"17"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>bean<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>它就会打印出：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">User<span class="token punctuation">&#123;</span>username<span class="token operator">=</span><span class="token string">'Cloud'</span>, <span class="token assign-left variable">age</span><span class="token operator">=</span><span class="token number">17</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再进一步，如果你想为这个对象添加一个类（比如现在我要让Cloud拥有一辆车）</p><p>首先你需要创建一个Car的类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> color<span class="token punctuation">;</span>    <span class="token comment">//此处省略getter、setter、toString方法</span><span class="token punctuation">&#125;</span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改User类，为它添加car属性</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Car</span> car<span class="token punctuation">;</span>    <span class="token comment">//此处省略getter、setter、toString方法</span><span class="token punctuation">&#125;</span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>再小小修改一下你的bean添加car的bean，在user的bean中添加car属性，注意这里的标签变成了<code>ref</code>，因为你引用的是对象</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>car<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.hengxing.spring.Car<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>红旗<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>color<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>黑色<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.hengxing.spring.User<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Cloud<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>17<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>car<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>car<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重新执行一下你的测试方法，你甚至不用改动一个字，它会打印出</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">User<span class="token punctuation">&#123;</span>username<span class="token operator">=</span><span class="token string">'Cloud'</span>, <span class="token assign-left variable">age</span><span class="token operator">=</span><span class="token number">17</span>, <span class="token assign-left variable">car</span><span class="token operator">=</span>Car<span class="token punctuation">&#123;</span>name<span class="token operator">=</span><span class="token string">'红旗'</span>, <span class="token assign-left variable">color</span><span class="token operator">=</span><span class="token string">'黑色'</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="Spring与JDBC整合"><a href="#Spring与JDBC整合" class="headerlink" title="Spring与JDBC整合"></a>Spring与JDBC整合</h1><h2 id="只是连接"><a href="#只是连接" class="headerlink" title="只是连接"></a>只是连接</h2><p>依赖如下</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.3.10.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.3.10.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-beans<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.3.10.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-expression<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.3.10.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>commons-logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>commons-logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.1.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--        事务底层管理--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-aop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.3.10.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.1.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.mchange<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>c3p0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.9.5.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--        spring-jdbc spring-tx事务--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.3.10.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-tx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.3.10.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>既然我们使用spring了，就不需要new c3p0的对象，直接在spring中声明</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--    c3p0对象--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.mchange.v2.c3p0.ComboPooledDataSource<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>可以看到还是一样的类，只不过声明方式不同，现在我们测试一下是否成功</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"applicationContext.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">DataSource</span> dataSource <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"dataSource"</span><span class="token punctuation">,</span> <span class="token class-name">DataSource</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Connection</span> connection <span class="token operator">=</span> dataSource<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取连接</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>connection<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>套路还是声明配置文件，再直接获取对象。你可以在控制台看到</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">com.mchange.v2.c3p0.ComboPooledDataSource<span class="token punctuation">[</span> id<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>说明我们连接成功了</p><h2 id="实战一下"><a href="#实战一下" class="headerlink" title="实战一下"></a>实战一下</h2><p>首先要确定User类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>   <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>   <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>   <span class="token comment">//此处省略getter、setter、toString方法</span><span class="token punctuation">&#125;</span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>新建Dao层包，创建dao层接口</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> loginDao <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">insertUser</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>在dao包中在创建实现包(impl),创建实现方法</p><p>这个时候就体现出spring的方便，正常情况下，我们连接数据库，需要每个方法都要new很多对象用到很多变量，比如jdbc的datasource对象、conn变量用来获取连接、prepareStatement用来防止sql注入。但是有了spring，我们可以&#x3D;&#x3D;直接使用spring的template模板&#x3D;&#x3D;</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> loginDaoImpl <span class="token keyword">implements</span> loginDao <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">JdbcTemplate</span> jdbcTemplate<span class="token punctuation">;</span><span class="token comment">//使用spring注入的template模板</span><span class="token comment">//下面的方法将其引入</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setJdbcTemplate</span><span class="token punctuation">(</span><span class="token class-name">JdbcTemplate</span> jdbcTemplate<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>jdbcTemplate <span class="token operator">=</span> jdbcTemplate<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//实现方法</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">insertUser</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> sql <span class="token operator">=</span><span class="token string">"insert into users (name,password) values (?,?)"</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//成功返回1，失败返回0</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在<code>applicationContext.xml</code>配置文件中，进行注入，注入的时候注意不要注入到接口类里了，我们是实现类里要用</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--    c3p0对象--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.mchange.v2.c3p0.ComboPooledDataSource<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment">&lt;!--    创建spring对JDBC的支持工具类 jdbcTemplate--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jdbcTemplate<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.springframework.jdbc.core.JdbcTemplate<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--    把jdbcTemplate对象注入到loginDao中去--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loginDao<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.hengxing.dao.impl.loginDaoImpl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jdbcTemplate<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jdbcTemplate<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在可以写一个测试方法，进行插入</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testJDBC</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"applicationContext.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        loginDao loginDao <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"loginDao"</span><span class="token punctuation">,</span> loginDao<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"Cloud"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> loginDao<span class="token punctuation">.</span><span class="token function">insertUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行成功后，控制台会打印出<code>1</code>,并且数据库中会多出一条记录</p><table><thead><tr><th align="center">id</th><th align="center">username</th><th align="center">password</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">Cloud</td><td align="center">123</td></tr></tbody></table><p>ok,你已经完成了Spring与JDBC的整合</p><p>我们还可以使用JDBCTemplate实现如下操作，后续再进行补全吧</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">updateUser</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">deleteUser</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">findUserById</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">></span></span> <span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="IOC注解方式开发"><a href="#IOC注解方式开发" class="headerlink" title="IOC注解方式开发"></a>IOC注解方式开发</h1><h2 id="怎么使用"><a href="#怎么使用" class="headerlink" title="怎么使用"></a>怎么使用</h2><p>首先要添加<code>context</code>约束，添加之后才可以使用context标签</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans       http://www.springframework.org/schema/beans/spring-beans.xsd       http://www.springframework.org/schema/context       http://www.springframework.org/schema/context/spring-context.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment">&lt;!--组件扫描，告诉它去哪里找注解--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.hengxing.bean<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在可以在你对应包中为类添加注解</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">&#123;</span>    <span class="token comment">//内容省略</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>组件声明默认的名称是你的类名，如果你想自定义一个名字，可以这样</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"abc"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再给它的属性赋值</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"abc"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"Tifa"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"123"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>所有步骤已经成功，现在测试一下</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testUseSpring</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//读取spring核心配置文件，并创建出文件中配置的类的对象</span>    <span class="token class-name">ApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"applicationContext.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//直接向spring要对象，getBean(&lt;你要给这个对象起的名字>, &lt;对象的类型>);</span>    <span class="token class-name">User</span> user <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"abc"</span><span class="token punctuation">,</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行后你会在控制台看到输出</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">User<span class="token punctuation">&#123;</span>id<span class="token operator">=</span>null, <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">'Tifa'</span>, <span class="token assign-left variable">password</span><span class="token operator">=</span><span class="token string">'123'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个时候，如果我想要给Tifa添加一个对象的属性呢，比如我写了一个Car类，定义Tifa有一辆红色的法拉利，那么同样，先给这个Car类写上注解并赋值</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"法拉利"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"红色"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> color<span class="token punctuation">;</span>    <span class="token comment">//此处省略getter、setter、toString方法&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在User类中添加属性，为这个属性添加<code>@Autowired</code>注解</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"abc"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"Tifa"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"123"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">Car</span> car<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这下再去执行测试方法，可以看到</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">User<span class="token punctuation">&#123;</span>id<span class="token operator">=</span>null, <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">'Tifa'</span>, <span class="token assign-left variable">password</span><span class="token operator">=</span><span class="token string">'123'</span>, <span class="token assign-left variable">car</span><span class="token operator">=</span>Car<span class="token punctuation">&#123;</span>name<span class="token operator">=</span><span class="token string">'法拉利'</span>, <span class="token assign-left variable">color</span><span class="token operator">=</span><span class="token string">'红色'</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>完成</p><h2 id="DAO层注解"><a href="#DAO层注解" class="headerlink" title="DAO层注解"></a>DAO层注解</h2><p>spring为DAO层制作了单独的注解</p><p><code>@Repository</code></p><p>这个注解要添加在DAO层的实现类上</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//默认会使用类名，所以我们改一个好用的名字，等会调用就方便一些</span><span class="token annotation punctuation">@Repository</span><span class="token punctuation">(</span><span class="token string">"loginDao"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> loginDaoImpl <span class="token keyword">implements</span> loginDao <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Autowired</span><span class="token comment">//用spring注入</span>    <span class="token keyword">private</span> <span class="token class-name">JdbcTemplate</span> jdbcTemplate<span class="token punctuation">;</span>    <span class="token comment">/*不需要通过它来接收注入的值，spring会为我们注入    public void setJdbcTemplate(JdbcTemplate jdbcTemplate) &#123;        this.jdbcTemplate = jdbcTemplate;    &#125;*/</span>    <span class="token comment">//省略实现方法</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>还记得我们之前在组件扫描器中定义它寻找注解的地方吗，那时写的是bean包，但现在我们的方法在DAO包下的impl包，修改一下，让他直接在工程包中找，就可以找得到。</p><p>另外，既然我们使用spring注解方式了，就不用在把logindao再注入了，所以删掉最后一项</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.hengxing<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment">&lt;!--    c3p0对象--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.mchange.v2.c3p0.ComboPooledDataSource<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment">&lt;!--    创建spring对JDBC的支持工具类 jdbcTemplate--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jdbcTemplate<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.springframework.jdbc.core.JdbcTemplate<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--&amp;lt;!&amp;ndash;    把jdbcTemplate对象注入到loginDao中去&amp;ndash;&amp;gt;--></span><span class="token comment">&lt;!--    &lt;bean id="loginDao" class="com.hengxing.dao.impl.loginDaoImpl">--></span><span class="token comment">&lt;!--        &lt;property name="jdbcTemplate" ref="jdbcTemplate">&lt;/property>--></span><span class="token comment">&lt;!--    &lt;/bean>--></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>还是用之前向数据库中插入信息的方法，修改一下插入的信息即可</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testJDBC</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">ApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">"applicationContext.xml"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    loginDao loginDao <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"loginDao"</span><span class="token punctuation">,</span> loginDao<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    user<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    user<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"AWS"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    user<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> result <span class="token operator">=</span> loginDao<span class="token punctuation">.</span><span class="token function">insertUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>成功后控制台会输出<code>1</code>，数据库会多出一条数据</p><table><thead><tr><th align="center">id</th><th align="center">username</th><th align="center">password</th></tr></thead><tbody><tr><td align="center">2</td><td align="center">AWS</td><td align="center">123</td></tr></tbody></table><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul><li>使用前，为context标签添加约束</li><li>context标签生成组件扫描器，告诉它去哪里找注解</li><li>在类中添加注解，<code>@Component</code></li><li>为属性赋值<ul><li><code>@Value</code>普通属性</li><li><code>@Autowired</code> 对象属性</li></ul></li></ul><h1 id="SpringMVC"><a href="#SpringMVC" class="headerlink" title="SpringMVC"></a>SpringMVC</h1><p>之前我们是使用Servlet和DAO层交换数据，这种方式比较繁琐，所以spring为我们提供了一个框架SpringMVC，专门替代Servlet。</p><h2 id="SpringMVC项目的组建"><a href="#SpringMVC项目的组建" class="headerlink" title="SpringMVC项目的组建"></a>SpringMVC项目的组建</h2><p>这是web项目要用到的，所以创建项目的时候一定要创建web项目</p><p><img src="https://s2.loli.net/2022/03/28/t3fx9TukzBDIedW.png" alt="image-20220328155641141"></p><p>groupId,artifactId,version的录入原则:</p><blockquote><p>groupId翻译为组Id，通常的写法为公司域名的倒写，表示本项目属于哪个公司。</p><p>artifactId翻译为手工艺品，表示项目的的名字或者模块的名字。</p><p>Version通常为X.X.X格式，表示项目的版本号。</p></blockquote><p><img src="https://s2.loli.net/2022/03/28/T5wcJiByG7lanZE.png" alt="image-20220328155934944"></p><p>导入依赖，添加这两个依赖，注意，如果你之前有spring其他的依赖，记得&#x3D;&#x3D;保持版本一致&#x3D;&#x3D;</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.3.10.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-webmvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.3.10.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在web.xml文件加入springmvc的前端控制器</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xmlns.jcp.org/xml/ns/javaee<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xmlns.jcp.org/xml/ns/javaee          http://java.sun.com/xml/ns/javaee/web-app_3_1.xsd<span class="token punctuation">"</span></span>         <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3.1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>springmvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">></span></span>org.springframework.web.servlet.DispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>springmvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们需要特别关注其中servlet的写法，其中</p><ul><li>两个<code>servlet-name</code>的标签名字必须一致</li><li><code>url-pattern</code>标签中填<code>*.do</code>，这个配置的意思是说，所有<code>*.do</code>这种格式的请求，都会被我们下一项声明的Servlet处理</li><li><code>servlet-class</code>配置要填下面的类名</li></ul><p><img src="https://s2.loli.net/2022/03/28/H69cl2Ki58hT1DR.png" alt="image-20220328162814273"></p><p>右键–&gt;copy reference，把复制出的内容填上去</p><p>现在就配置完成了</p><h2 id="怎么使用-1"><a href="#怎么使用-1" class="headerlink" title="怎么使用"></a>怎么使用</h2><p>springMVC是代替servlet的，而servlet又属于控制器（控制页面与DAO层的交换），所以我们创建一个<code>controller</code>包来存放springmvc的类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FirstController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"world"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">helloWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"This is my first SpringMVC programe."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>又多了两个新的注解，它们是做什么的？</p><ul><li><code>@Controller</code>其实和<code>@Component</code>是一样的，都是在告诉spring这是我的一个组件，你要替我创建它，但<code>@Controller</code>是专门为控制器准备的，别人一眼就能知道这是一个控制器，这有利于后期维护。</li><li><code>@RequestMapping</code>是告诉servlet你的请求路径</li></ul><p>现在你在jsp页面中可以通过你的路径访问方法，就像这样</p><pre class="line-numbers language-jsp" data-language="jsp"><code class="language-jsp">&lt;form action&#x3D;&quot;&#x2F;hello&#x2F;world.do&quot;&gt;    &lt;input type&#x3D;&quot;submit&quot;&#x2F;&gt;&lt;&#x2F;form&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>最后一步，在WEB-INF文件夹右键<code>-&gt;new-&gt;XML Configuration File-&gt;Spring Config</code>新建一个servlet配置文件，文件名为<code>%servlet-name%-servlet.xml</code>，其中%servlet-name%是你刚刚配置的servlet名称，后面的内容不能更改。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>mvc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/mvc<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans       http://www.springframework.org/schema/beans/spring-beans.xsd       http://www.springframework.org/schema/context       http://www.springframework.org/schema/context/spring-context.xsd       http://www.springframework.org/schema/mvc       http://www.springframework.org/schema/mvc/spring-mvc.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.hengxing.controller<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>annotation-driven</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>老规矩，要先告诉spring去哪里找类，创建扫描器，又因为要用扫描器，所以声明context标签。</p><p><code>@Controller</code>解决了，<code>@RequestMapping</code>怎么办？所以还需要<code>mvc</code>标签，<code>&lt;mvc:annotation-driven/&gt;</code>，见名知义，是告诉spring当前是注解驱动模式，所以在遇到请求时，spring会去控制器中寻找<code>@RequestMapping</code>的路径。</p><p>恭喜，springMVC已经配置完成，请配置并启动tomcat服务器测试</p><p><a href="http://localhost:8080/login.jsp">http://localhost:8080/login.jsp</a></p><p>网页中你会看到一个提交按钮，点击它就会请求方法<code>/hello/world.do</code>,servlet接收到请求后，由于spring配置了所有<code>*.do</code>的请求都由servlet处理，所以servlet又会在控制器中寻找处理方法，我们在处理器中设置了注解驱动，则servlet又会根据注释去寻找路径所指的方法，打印出方法内容，控制台会打印</p><p><code>This is my first SpringMVC programe.</code></p><h2 id="springMVC从jsp接收数据"><a href="#springMVC从jsp接收数据" class="headerlink" title="springMVC从jsp接收数据"></a>springMVC从jsp接收数据</h2><p>在webapp中添加一个页面</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">&lt;%@ page contentType="text/html;charset=UTF-8" language="java" %><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>用户添加<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>User Add Page<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/user/add.do<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">cellspacing</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">cellpadding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>用户名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>密码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>添加<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reset<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>重置<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/03/28/EYOH4hCekzvQTF7.png" alt="image-20220328191707378"></p><p>写controller用来控制信息</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"add"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">userAdd</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行tomcat，可以看到控制台打印出了你输入的信息</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Cloud<span class="token number">123</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>说明这种方法可以接收到消息，但是写起来很麻烦，现在还只有姓名和密码，以后要是有一长串表单呢，为了解决这个问题，我们可以使用一个类来接收数据，比如我们现在写一个User类，里面包含要接收的信息</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>     <span class="token comment">//此处省略getter、setter、toString方法&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>只需要对控制器进行小小的修改，用类来接收信息即可，它会自动帮我们把表单的内容拼接起来</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"add"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">userAdd</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同样可以接收到信息</p><h2 id="SpringMVC-Spring-JDBC"><a href="#SpringMVC-Spring-JDBC" class="headerlink" title="SpringMVC+Spring+JDBC"></a>SpringMVC+Spring+JDBC</h2><p><strong>有个问题</strong></p><p>之前我们与JDBC交互的DAO层代码是在测试类中跑起来的，测试类中，我们用<code>ApplicationContext context = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;);</code>读取了配置文件，获得对象，但现在，如果我们想在控制层使用DAO方法（也就是可以从页面获取信息后，直接向数据库交互，完成了正常的业务逻辑），要怎么用呢？</p><p>与配置servlet类似，在Project目录中-&gt;External libraries-&gt;org.springframework-&gt;web-&gt;context-&gt;ContextLoaderListener，右键-&gt;Copy Reference。</p><p>在web,xml中声明一个监听器，这个声明下面的<code>&lt;context-param&gt;</code>是指定配置文件的路径，类似于我们在测试类中写的<code>ClassPathXmlApplicationContext</code></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener-class</span><span class="token punctuation">></span></span>org.springframework.web.context.ContextLoaderListener<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener-class</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>context-param</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">></span></span>contextConfigLocation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">></span></span>classpath:applicationContext.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>context-param</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在我们就可以把DAO类作为一个属性注入到controller中去</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> loginDao loginDao<span class="token punctuation">;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"add"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">userAdd</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        loginDao<span class="token punctuation">.</span><span class="token function">insertUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>你看，这样我就可以直接在控制层中调用DAO层的方法了。这里我贴出jsp页面的代码，&#x3D;&#x3D;注意&#x3D;&#x3D;，我数据库中名字的字段是<code>name</code>，所以我修改了jsp页面输入框的name，由username改为name</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>User Add Page<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/user/add.do<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">cellspacing</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">cellpadding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>用户名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>密码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>添加<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reset<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>重置<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>数据库中多了一条数据</p><table><thead><tr><th align="center">id</th><th align="center">name</th><th align="center">password</th></tr></thead><tbody><tr><td align="center">16</td><td align="center">Aerith</td><td align="center">222</td></tr></tbody></table><h2 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h2><ul><li>springMVC<ul><li>前端控制器替代Servlet与页面交互</li><li><code>@controller</code> 控制器</li><li><code>@RequestMapping</code> 声明请求路径</li><li>向controller中注入dao对象属性时要用<code>@Autowired</code></li></ul></li></ul><h1 id="SpringBoot"><a href="#SpringBoot" class="headerlink" title="SpringBoot"></a>SpringBoot</h1><h2 id="什么是SpringBoot"><a href="#什么是SpringBoot" class="headerlink" title="什么是SpringBoot"></a>什么是SpringBoot</h2><p>SpringBoot是一个快速开发框架，快速的将一些常用的第三方依赖整合（原理：通过Maven子父工程的方式），简化XML配置，全部采用注解形式，内置HTTP服务器（Jetty和Tomcat），最终以Java应用程序进行执行。</p><p>SpringBoot主要目标是：为所有Spring的开发者提供一个非常快速的、广泛接受的入门体验。</p><p><strong>好</strong></p><ul><li>快速构建项目，绝对没有代码生成，也无需 XML 配置</li><li>对主流开发框架的无配置集成 </li><li>项目可独立运行，无须外部依赖Servlet容器 </li><li>提供运行时的应用监控 </li><li>极大的提高了开发、部署效率</li><li>与云计算的天然集成</li></ul><p><strong>坏</strong></p><ul><li>从原来的XML配置方式转换到JAVA配置方式变化有点大，不太适应</li><li>至少要了解Spring，才能很容易上手</li></ul><h2 id="创建SpringBoot项目"><a href="#创建SpringBoot项目" class="headerlink" title="创建SpringBoot项目"></a>创建SpringBoot项目</h2><h3 id="1-创建项目"><a href="#1-创建项目" class="headerlink" title="1. 创建项目"></a>1. 创建项目</h3><p>首先，&#x3D;&#x3D;SpringBoot必须使用Maven项目&#x3D;&#x3D;</p><p>然后创建工程</p><p><img src="https://s2.loli.net/2022/03/28/982e1ioSjTwOnxG.png" alt="image-20220328231423463"></p><p><img src="https://s2.loli.net/2022/03/28/oVYbiGQfNcnem1a.png" alt="image-20220328231532542"></p><p><img src="https://s2.loli.net/2022/03/28/6yK8u1tqnSb2ERa.png" alt="image-20220328231821426"></p><h3 id="2-添加依赖"><a href="#2-添加依赖" class="headerlink" title="2. 添加依赖"></a>2. 添加依赖</h3><p>&#x3D;&#x3D;springboot项目必须继承自父项目spring-boot-starter-parent&#x3D;&#x3D;</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.2.4.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>该parent包含了大量默认的配置，大大简化了我们的开发。</strong></p><p>添加web启动器，让项目具有web项目响应的功能。例如：处理请求和响应、启动内置的服务器(tomcat)等。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注：springboot提供了44种启动器。每种启动器都包含与之对应的功能，其实就是很多jar的集合。在项目中要使用某种或某些功能时，只需要在项目中添加对应的启动器即可。这些启动器中包含大量的自动配置，减少程序中手工配置的工作，从而提高开发效率。</p><h3 id="3-编写控制器"><a href="#3-编写控制器" class="headerlink" title="3. 编写控制器"></a>3. 编写控制器</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/hello"</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"hello!"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>@ResponseBody</code>声明了这是一个异步方法</p><h3 id="4-编写启动类"><a href="#4-编写启动类" class="headerlink" title="4. 编写启动类"></a>4. 编写启动类</h3><p>在<code>com.hengxing</code>下创建启动类</p><ul><li>类名随意，一般是<code>MyApplication</code></li><li>与controller类文件同级目录或上一级，我们一般放在上一级</li><li>添加启动类的注解<code> @SpringBootApplication</code></li><li>调用SpringApplication.run方法传入启动类的名称</li></ul> <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyApplication</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">MyApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>直接运行这个方法即可启动SpringBoot项目</p><p><img src="https://s2.loli.net/2022/03/29/JKr5XTiahq6vH3w.png" alt="image-20220329002154007"></p><p>大功告成</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Servlet学习</title>
      <link href="/2022/04/02/Servlet%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/04/02/Servlet%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="Spring预知识-Servlet的学习"><a href="#Spring预知识-Servlet的学习" class="headerlink" title="Spring预知识-Servlet的学习"></a>Spring预知识-Servlet的学习</h1><h2 id="Day02"><a href="#Day02" class="headerlink" title="Day02"></a>Day02</h2><blockquote><p>今天的目标</p><ul><li><p><input disabled="" type="checkbox"> html传值Servlet</p></li><li><p><input disabled="" type="checkbox"> Servlet + Dao</p></li></ul></blockquote><hr><p>在此之前你可以看我的这篇文章<a href="https://blog.csdn.net/hengxingtoongxue/article/details/123765213?spm=1001.2014.3001.5502">Spring预知识[01]-Tomcat&amp;Servlet学习</a>来学习此课程的预备知识</p><h3 id="一、HTML传值Servlet"><a href="#一、HTML传值Servlet" class="headerlink" title="一、HTML传值Servlet"></a>一、HTML传值Servlet</h3><p>我们有如下需求：</p><ol><li>客户端使用HTML写表单</li><li>提交给Servlet，Servlet获取表单内容</li><li>服务器在控制台打印表单数据</li></ol><p>先写个界面出来：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Login<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>登录界面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">cellpadding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span> <span class="token attr-name">cellspacing</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>用户名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>密 码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>登录<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>再向Servlet包中添加Servlet的服务</p><blockquote><p>在包文件夹上右键，点击new-&gt;create new servlet</p></blockquote><p>request负责请求，我们的表单就是客户端传来的请求</p><p>LoginServlet.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span><span class="token string">"/LoginServlet"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> username <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> password <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"username = "</span> <span class="token operator">+</span> username<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"password = "</span> <span class="token operator">+</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token function">doPost</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个文件中<code>@WebServlet(&quot;/LoginServlet&quot;)</code>就指定了你的页面，这样如果你在浏览器中访问<code>http://localhost:8080/LoginServlet</code>它就会执行这个方法。</p><p>现在，如何让HTML页面的表单提交时执行这个方法？</p><p>很简单，将你的表单用它包装起来，它指定了表单提交时执行的方法</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/LoginServlet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    这里是你的表单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>运行服务器，随便在表单中填点什么，点击登录，你可以在服务器控制台看到</p><p><img src="https://s2.loli.net/2022/03/27/rUZOzWpYQuoHvLa.png" alt="image-20220327104427314"></p><h3 id="二、Servlet-DAO-实现一个登录界面"><a href="#二、Servlet-DAO-实现一个登录界面" class="headerlink" title="二、Servlet + DAO 实现一个登录界面"></a>二、Servlet + DAO 实现一个登录界面</h3><p>首先你要知道Dao是做什么的</p><blockquote><p>Data Access Object</p><p>数据访问对象：专门和数据库进行增删改查操作的</p><p>JDBC是DAO的实现技术</p></blockquote><pre class="line-numbers language-flow" data-language="flow"><code class="language-flow">st<span class="token operator">=></span>start<span class="token operator">:</span> MySQL数据库op<span class="token operator">=></span>operation<span class="token operator">:</span> <span class="token constant">DAO</span>（<span class="token constant">JDBC</span>）和数据库交互数据op2<span class="token operator">=></span>operation<span class="token operator">:</span> Servlet从<span class="token constant">HTML</span>页面获取数据e<span class="token operator">=></span>end<span class="token operator">:</span> <span class="token constant">HTML</span>页面st<span class="token operator">-</span><span class="token operator">></span>opop<span class="token operator">-</span><span class="token operator">></span>op2op2<span class="token operator">-</span><span class="token operator">></span>e<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>了解原理后我们实操一下</p><p>在工程中创建dao包，再在包中创建接口（右键-&gt;new-&gt;Java class）,记得选择Interface</p><p><img src="https://s2.loli.net/2022/03/27/MXDVcjaFWEgl4eK.png" alt="image-20220327153110238"></p><p>写上如下内容：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">LoginDao</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">findByUsernameAndPassword</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>你也发现了，这其中并没有如何实现，只是声明了这个方法，所以还需要进行实现，再创建一个<code>impl</code>包，写明实现方法，具体过程和上面一样，我这里只贴出代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginDaoImpl</span> <span class="token keyword">implements</span> <span class="token class-name">LoginDao</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">findByUsernameAndPassword</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">PreparedStatement</span> pstm <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">ResultSet</span> rs <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"select id, name, password from user where name = ? and password = ?"</span><span class="token punctuation">;</span><span class="token comment">//从user表中查询</span>        <span class="token keyword">try</span><span class="token punctuation">&#123;</span>            <span class="token class-name">ComboPooledDataSource</span> dataSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ComboPooledDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            conn <span class="token operator">=</span> dataSource<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            pstm <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>            pstm<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>            pstm<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//rs就是执行查询后返回的值</span>            rs <span class="token operator">=</span> pstm<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            rs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            pstm<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>因为要连接MySQL，并且需要用到连接池，所以需要引入驱动，请自行搜索<code>c3p0连接池</code>和<code>JDBC</code>下载,还有c3p0-config.xml文件（如果不会用可以直接查看c3p0连接池用法，很简单）</p><p><img src="https://s2.loli.net/2022/03/27/yLlUGYtEKSoHqMw.png" alt="image-20220327154911012"></p><p>执行项目，在登录页面登录你数据库中已存在的用户，我这里有一个用户</p><table><thead><tr><th align="center">username</th><th align="center">password</th></tr></thead><tbody><tr><td align="center">Tifa</td><td align="center">123456</td></tr></tbody></table><p>登录后你会在控制台看到</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">欢迎，Tifa<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>恭喜你，你已经完成了今天的学习</p><hr><h3 id="三、完成登录信息提示功能"><a href="#三、完成登录信息提示功能" class="headerlink" title="三、完成登录信息提示功能"></a>三、完成登录信息提示功能</h3><p>我们刚刚是在控制台打印了成功的信息，可是用户并不知道是否成功，如果我们想让客户端提示“登录成功”或者“登录失败”，要怎么做呢</p><p><em>需要引入JSP</em></p><p>html页面是静态的，它无法完成交互的任务。</p><h4 id="引入JSP"><a href="#引入JSP" class="headerlink" title="引入JSP"></a>引入JSP</h4><p>下面我们简单介绍一下JSP</p><blockquote><p>JSP本质上就是Servlet</p><p>jsp第一次访问时，会被服务器中的jsp引擎编译成一个Servlet，放在Tomcat的work目录下。</p></blockquote><img src="https://s2.loli.net/2022/03/27/bnOZjG7kqWmQfcr.png" alt="image-20220327165532552" style="zoom:80%;" /><p>Servlet和html的配合十分麻烦，我们仅仅实现一个登录就用了这么多步骤，所以，Sun公司开发出了jsp，&#x3D;&#x3D;JSP使用起来会容易的多&#x3D;&#x3D;</p><p>实操一下，在web文件夹下右键-&gt;new-&gt;JSP,你就能得到一个jsp页面，在body标签中写点内容，比如：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>这是第一个jsp页面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后直接运行Tomcat，你会在<a href="http://localhost:8080/firstJsp.jsp">http://localhost:8080/firstJsp.jsp</a>中看到下图内容，路径是你jsp页面的文件名</p><p><img src="https://s2.loli.net/2022/03/27/3DLqcFU8zTXhgY5.png" alt="image-20220327171036333"></p><h4 id="传递数据-实现提示功能"><a href="#传递数据-实现提示功能" class="headerlink" title="传递数据-实现提示功能"></a>传递数据-实现提示功能</h4><p>servlet与jsp直接通过什么方法传递数据？</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"key"</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//key值是唯一的，不可重复</span><span class="token class-name">Object</span> value <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"key"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//通过key取出值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>我们只需要修改LoginServlet.java中判断是否登录成功的业务逻辑</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"message"</span><span class="token punctuation">,</span><span class="token string">"登录成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"message"</span><span class="token punctuation">,</span> <span class="token string">"用户名或密码错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在HTML中插入java代码，使用如下格式即可</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">%</span> your java code <span class="token operator">%</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>所以我们在JSP中插入如下代码，来向页面传输数据</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">&lt;%    String message = (String)request.getAttribute("message");%>&lt;%=message%>%这里是你的表单%<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过<code>getAttribute</code>方法获得参数再打印出来</p><p>这个时候你已经完成了页面的内容，但是此时程序还在LoginServlet.java中，你需要将它的逻辑跳转回来，在LoginServlet.java中添加</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">request<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">"firstJsp.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//在doPost方法的最后一步添加</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>点击运行，登录之后你会看到</p><p><img src="https://s2.loli.net/2022/03/27/dxysVBFuORCnQ6q.png" alt="image-20220327174147498"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>学会了Servlet如何传值，如何使用DAO与数据库进行交互，DAO相当于简化了我们查询的流程，所以现在你知道DAO层是在做什么了吧。</li><li>学会了怎么在Servlet和jsp中交互，现在你已经会写可以交互的页面了！</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Servlet </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
